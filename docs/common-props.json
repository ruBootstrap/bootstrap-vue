{
  "active": {
    "description": "When set to `true`, places the component in the active state with active styling"
  },
  "activeClass": {
    "description": "<router-link> свойство: Настроить активный класс CSS, применяемый, когда ссылка активна. Обычно Вам нужно установить это имя класс 'active'"
  },
  "alt": {
    "description": "Value to set for the `alt` attribute"
  },
  "append": {
    "description": "<router-link> свойство: Настройка добавления свойства всегда добавляет относительный путь к текущему пути"
  },
  "ariaControls": {
    "description": "If this component controls another component or element, set this to the ID of the controlled component or element"
  },
  "ariaDescribedby": {
    "description": "The ID of the element that provides additional context for this component. Used as the value for the `aria-describedby` attribute"
  },
  "ariaLabel": {
    "description": "Устанавливает значение атрибута `aria-label` для отображаемого элемента"
  },
  "ariaLabelledby": {
    "description": "The ID of the element that provides a label for this component. Used as the value for the `aria-labelledby` attribute"
  },
  "ariaLive": {
    "description": "When the rendered element is an `aria-live` region (for screen reader users), set to either 'polite' or 'assertive'"
  },
  "ariaRole": {
    "description": "Sets the ARIA attribute `role` to a specific value"
  },
  "autocomplete": {
    "description": "Sets the 'autocomplete' attribute value on the form control"
  },
  "autofocus": {
    "description": "When set to `true`, attempts to auto-focus the control when it is mounted, or re-activated when in a keep-alive. Does not set the `autofocus` attribute on the control"
  },
  "bgVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the background"
  },
  "bodyBgVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the body background"
  },
  "bodyBorderVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the body border"
  },
  "bodyClass": {
    "description": "CSS class (or classes) to apply to the body"
  },
  "bodyTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the body"
  },
  "bodyTextVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the body text"
  },
  "bodyVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the body"
  },
  "borderVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the border"
  },
  "disabled": {
    "description": "Если установлено значение `true`, отключает функциональность компонента и переводит его в отключенное состояние."
  },
  "disabledField": {
    "description": "Field name in the `options` array that should be used for the disabled state"
  },
  "event": {
    "description": "<router-link> prop: Specify the event that triggers the link. In most cases you should leave this as the default"
  },
  "exact": {
    "description": "<router-link> свойство: Поведение сопоставления активного класса по умолчанию включает сопоставление. Установка этого свойства заставляет режим точно соответствовать маршруту"
  },
  "exactActiveClass": {
    "description": "<router-link> свойство: Настройте активный класс CSS, применяемый, когда ссылка активна с точным соответствием. Обычно Вам нужно установить это имя класса 'active'"
  },
  "fade": {
    "description": "Если установлено значение `true`, включает анимацию затухания/переход на компоненте"
  },
  "footer": {
    "description": "Text content to place in the footer"
  },
  "footerBgVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the footer background"
  },
  "footerBorderVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the footer border"
  },
  "footerClass": {
    "description": "CSS class (or classes) to apply to the footer"
  },
  "footerHtml": {
    "description": "HTML string content to place in the footer",
    "xss": true
  },
  "footerTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the footer"
  },
  "footerTextVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the footer text"
  },
  "footerVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the footer"
  },
  "form": {
    "description": "ID of the form that the form control belongs to. Sets the `form` attribute on the control"
  },
  "header": {
    "description": "Text content to place in the header"
  },
  "headerBgVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the header background"
  },
  "headerBorderVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the header border"
  },
  "headerClass": {
    "description": "CSS class (or classes) to apply to the header"
  },
  "headerHtml": {
    "description": "HTML string content to place in the header",
    "xss": true
  },
  "headerTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the header"
  },
  "headerTextVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the header text"
  },
  "headerVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the header"
  },
  "href": {
    "description": "<b-link> свойство: Обозначает целевой URL-адрес ссылки для стандартных ссылок"
  },
  "htmlField": {
    "description": "Field name in the `options` array that should be used for the html label instead of text field",
    "xss": true
  },
  "id": {
    "description": "Used to set the `id` attribute on the rendered content, and used as the base to generate any additional element IDs as needed"
  },
  "name": {
    "description": "Sets the value of the `name` attribute on the form control"
  },
  "noFade": {
    "description": "Если установлено значение `true`, отключает анимацию затухания/переход на компоненте"
  },
  "noPrefetch": {
    "description": "<nuxt-link> свойство: Чтобы улучшить отзывчивость Ваших приложений Nuxt.js, когда ссылка будет отображаться в области просмотра, Nuxt.js автоматически выполнит предварительную загрузку страницы с разделением кода. Установка `no-prefetch` отключит эту функцию для конкретной ссылки"
  },
  "options": {
    "description": "Array of items to render in the component"
  },
  "placeholder": {
    "description": "Sets the `placeholder` attribute value on the form control"
  },
  "plain": {
    "description": "Render the form control in plain mode, rather than custom styled mode"
  },
  "plaintext": {
    "description": "Set the form control as readonly and renders the control to look like plain text (no borders)"
  },
  "prefetch": {
    "description": "<nuxt-link> свойство: Чтобы улучшить отзывчивость Ваших приложений Nuxt.js, когда ссылка будет отображаться в области просмотра, Nuxt.js автоматически выполнит предварительную загрузку страницы с разделением кода. Установка для `prefetch` значения `true` или `false` перезапишет значение по умолчанию `router.prefetchLinks`",
    "version": "2.15.0"
  },
  "readonly": {
    "description": "Sets the `readonly` attribute on the form control"
  },
  "rel": {
    "description": "<b-link> свойство: Устанавливает атрибут `rel` для отображаемой ссылки"
  },
  "replace": {
    "description": "<router-link> свойство: Установка свойства replace будет вызывать `router.replace()` вместо `router.push()` при нажатии, поэтому навигация не будет оставлять запись в истории"
  },
  "required": {
    "description": "Adds the `required` attribute to the form control"
  },
  "role": {
    "description": "Sets the ARIA attribute `role` to a specific value"
  },
  "routerComponentName": {
    "description": "<b-link> свойство: BootstrapVue автоматически определяет между `<router-link>` и `<nuxt-link>`. В случаях, когда Вы хотите использовать сторонний компонент ссылки на основе `<router-link>`, установите это свойство на имя компонента, например установите для него значение 'g-link', если Вы используете Gridsome (обратите внимание, что компоненту передаются только определенные свойства `<router-link>`)",
    "version": "2.15.0"
  },
  "routerTag": {
    "description": "<router-link> prop: Specify which tag to render, and it will still listen to click events for navigation. `router-tag` translates to the tag prop on the final rendered `<router-link>`. Typically you should use the default value"
  },
  "size": {
    "description": "Set the size of the component's appearance. 'sm', 'md' (default), or 'lg'"
  },
  "src": {
    "description": "URL to set for the `src` attribute"
  },
  "state": {
    "description": "Controls the validation state appearance of the component. `true` for valid, `false` for invalid, or `null` for no validation state"
  },
  "static": {
    "description": "Renders the content of the component in-place in the DOM, rather than portalling it to be appended to the body element"
  },
  "subTitle": {
    "description": "Text content to place in the sub title"
  },
  "subTitleTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the sub title"
  },
  "subTitleTextVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the sub title text"
  },
  "tag": {
    "description": "Укажите тег HTML для отображения вместо тега по умолчанию"
  },
  "target": {
    "description": "<b-link> свойство: Устанавливает атрибут `target` для отображаемой ссылки"
  },
  "textField": {
    "description": "Field name in the `options` array that should be used for the text label"
  },
  "textTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the text content"
  },
  "textVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the text"
  },
  "title": {
    "description": "Text content to place in the title"
  },
  "titleClass": {
    "description": "CSS class (or classes) to apply to the title"
  },
  "titleHtml": {
    "description": "HTML string content to place in the title",
    "xss": true
  },
  "titleTag": {
    "description": "Specify the HTML tag to render instead of the default tag for the title"
  },
  "titleTextVariant": {
    "description": "Applies one of the Bootstrap theme color variants to the title text"
  },
  "to": {
    "description": "<router-link> свойство: Обозначает целевой маршрут ссылки. При нажатии значение свойства будет передано в `router.push()` внутренне, поэтому значение может быть либо строкой, либо объектом дескриптора местоположения"
  },
  "valueField": {
    "description": "Field name in the `options` array that should be used for the value"
  },
  "variant": {
    "description": "Applies one of the Bootstrap theme color variants to the component"
  }
}
