{
  "name": "@bootstrap-vue/modal",
  "version": "1.0.0",
  "meta": {
    "title": "Modal",
    "description": "Модальные окна оптимизированы, но гибкие диалоговые подсказки основаны на JavaScript и CSS. Они поддерживают ряд вариантов использования, от уведомлений пользователей до полностью настраиваемого контента, и содержат несколько полезных подкомпонентов, размеров, вариантов, доступности и многого другого.",
    "plugins": [
      "BVModalPlugin"
    ],
    "directives": [
      {
        "directive": "VBModal",
        "description": "Директива для открытия модального окна по ID",
        "expression": "String",
        "arg": {
          "pattern": "[a-zA-Z][a-zA-Z0-9_\\-]*",
          "description": "Модальный идентификатор для открытия",
          "required": false
        },
        "modifiers": [
          {
            "name": "{modalId}",
            "pattern": "[a-zA-Z][a-zA-Z0-9_\\-]*",
            "description": "Модальный идентификатор для открытия. Замените `{modalId}` на идентификатор модального окна"
          }
        ]
      }
    ],
    "components": [
      {
        "component": "BModal",
        "props": [
          {
            "prop": "ariaLabel",
            "description": "Явно укажите атрибут 'aria-label' для модального окна. Должен быть установлен, когда у модального окна нет заголовка. Если не установлено 'aria-labelledby' будет указывать на заголовок модального окна"
          },
          {
            "prop": "autoFocusButton",
            "version": "2.0.0",
            "description": "Укажите, какая встроенная кнопка должна быть сфокусирована после открытия модального окна: 'ok', 'cancel' или 'close'"
          },
          {
            "prop": "bodyBgVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к фону тела"
          },
          {
            "prop": "bodyClass",
            "description": "Класс (или классы) CSS для применения к элементу-оболочке '.modal-body'"
          },
          {
            "prop": "bodyTextVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к основному тексту"
          },
          {
            "prop": "busy",
            "description": "Помещает встроенные по умолчанию кнопки OK и Cancel в нижнем колонтитуле в отключенное состояние"
          },
          {
            "prop": "buttonSize",
            "description": "Размер встроенных кнопок нижнего колонтитула: 'sm', 'md' (по умолчанию) или 'lg'"
          },
          {
            "prop": "cancelDisabled",
            "description": "Помещает кнопку Cancel в нижнем колонтитуле по умолчанию в неактивное состояние"
          },
          {
            "prop": "cancelTitle",
            "description": "Текстовая строка для размещения в нижнем колонтитуле кнопки Cancel по умолчанию"
          },
          {
            "prop": "cancelTitleHtml",
            "description": "Строка HTML для размещения в нижнем колонтитуле по умолчанию с кнопкой Cancel",
            "xss": true
          },
          {
            "prop": "cancelVariant",
            "description": "Вариант цветовой темы кнопки для применения к кнопке Cancel нижнего колонтитула по умолчанию"
          },
          {
            "prop": "centered",
            "description": "Вертикально центрирует модальное окно в окне просмотра"
          },
          {
            "prop": "contentClass",
            "description": "CSS-класс (или классы) для применения к элементу-оболочке '.modal-content'"
          },
          {
            "prop": "dialogClass",
            "description": "CSS-класс (или классы) для применения к элементу-оболочке '.modal-dialog'"
          },
          {
            "prop": "footerBgVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к фону нижнего колонтитула"
          },
          {
            "prop": "footerBorderVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к границе нижнего колонтитула"
          },
          {
            "prop": "footerClass",
            "description": "CSS-класс (или классы) для применения к элементу-оболочке '.modal-footer'"
          },
          {
            "prop": "footerTextVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к тексту нижнего колонтитула"
          },
          {
            "prop": "footerTag",
            "version": "2.22.0",
            "description": "Укажите тег HTML для отображения вместо тега по умолчанию для нижнего колонтитула"
          },
          {
            "prop": "headerBgVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к фону заголовка"
          },
          {
            "prop": "headerBorderVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к границе заголовка"
          },
          {
            "prop": "headerClass",
            "description": "CSS-класс (или классы) для применения к элементу-оболочке '.modal-header'"
          },
          {
            "prop": "headerCloseContent",
            "version": "2.3.0",
            "description": "Содержимое кнопки закрытия шапки"
          },
          {
            "prop": "headerCloseLabel",
            "description": "Значение 'aria-label' на кнопке закрытия заголовка"
          },
          {
            "prop": "headerCloseVariant",
            "description": "Вариант цвета темы текста для применения к кнопке закрытия заголовка"
          },
          {
            "prop": "headerTextVariant",
            "description": "Применяет один из цветовых вариантов темы Bootstrap к тексту заголовка"
          },
          {
            "prop": "headerTag",
            "version": "2.22.0",
            "description": "Укажите тег HTML для отображения вместо тега по умолчанию для нижнего колонтитула"
          },
          {
            "prop": "hideBackdrop",
            "description": "Отключить рендеринг модального фона"
          },
          {
            "prop": "hideFooter",
            "description": "Отключить рендеринг модального нижнего колонтитула"
          },
          {
            "prop": "hideHeader",
            "description": "Отключает рендеринг модального заголовка"
          },
          {
            "prop": "hideHeaderClose",
            "description": "Отключить отрисовку кнопки закрытия модального заголовка"
          },
          {
            "prop": "ignoreEnforceFocusSelector",
            "version": "2.4.0",
            "description": "Игнорировать определенные элементы из процедуры принудительного фокуса, указанные селекторами css"
          },
          {
            "prop": "lazy",
            "description": "Когда модальное окно имеет набор свойств `static`, модальное содержимое отображается лениво"
          },
          {
            "prop": "modalClass",
            "description": "CSS-класс (или классы) для применения к элементу-оболочке '.modal'"
          },
          {
            "prop": "noCloseOnBackdrop",
            "description": "Отключает возможность закрыть модальное окно, кликнув на задний фон"
          },
          {
            "prop": "noCloseOnEsc",
            "description": "Отключает возможность закрыть модальное окно нажатием ESC"
          },
          {
            "prop": "noEnforceFocus",
            "description": "Отключает процедуру принудительного фокуса, которая поддерживает фокус внутри модального окна"
          },
          {
            "prop": "noStacking",
            "description": "Предотвращает наложение других модальных окон поверх этого"
          },
          {
            "prop": "okDisabled",
            "description": "Помещает кнопку OK по умолчанию в нижнем колонтитуле в неактивное состояние"
          },
          {
            "prop": "okOnly",
            "description": "Отключает отрисовку кнопки Cancel нижнего колонтитула по умолчанию"
          },
          {
            "prop": "okTitle",
            "description": "Текстовая строка для размещения в нижнем колонтитуле по умолчанию с кнопкой OK"
          },
          {
            "prop": "okTitleHtml",
            "description": "Строка HTML для размещения в нижнем колонтитуле по умолчанию с кнопкой OK",
            "xss": true
          },
          {
            "prop": "okVariant",
            "description": "Вариант цветовой темы кнопки для применения к кнопке OK нижнего колонтитула по умолчанию"
          },
          {
            "prop": "returnFocus",
            "description": "Ссылка на элемент HTML, селектор CSS или ссылка на компонент для возврата фокуса при закрытии модального окна. Если не установлено, вернет фокус элементу, который последним был в фокусе перед открытием модального окна"
          },
          {
            "prop": "scrollable",
            "description": "Включает прокрутку тела модального окна"
          },
          {
            "prop": "size",
            "description": "Установите размер ширины модального окна. 'sm', 'md' (по умолчанию), 'lg' или 'xl'"
          },
          {
            "prop": "titleSrOnly",
            "description": "Оборачивает заголовок в оболочку '.sr-only'"
          },
          {
            "prop": "titleTag",
            "description": "Укажите тег HTML для отображения вместо тега по умолчанию для заголовка"
          },
          {
            "prop": "visible",
            "description": "Текущее состояние видимости модального окна"
          }
        ],
        "events": [
          {
            "event": "bv::modal::hidden",
            "description": "Выдается на `$root`, когда модальное окно скрыто",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "BvModalEvent object"
              },
              {
                "arg": "modalId",
                "type": "String",
                "description": "Modal ID"
              }
            ]
          },
          {
            "event": "bv::modal::hide",
            "description": "Генерируется в `$root`, когда модальное окно должно быть скрыто. Отменяемо (если модальное окно не было принудительно скрыто)",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить скрытие"
              },
              {
                "arg": "modalId",
                "type": "String",
                "description": "Modal ID"
              }
            ]
          },
          {
            "event": "bv::modal::show",
            "description": "Генерируется в `$root`, когда модальное окно вот-вот будет показано. Отменяемый",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить показ"
              },
              {
                "arg": "modalId",
                "type": "String",
                "description": "Modal ID"
              }
            ]
          },
          {
            "event": "bv::modal::shown",
            "description": "Генерируется в `$root`, когда отображается модальное окно",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent"
              },
              {
                "arg": "modalId",
                "type": "String",
                "description": "Modal ID"
              }
            ]
          },
          {
            "event": "cancel",
            "description": "Когда кнопка CANCEL по умолчанию нажата, как раз перед тем, как модальное окно скрыто. Отменяемый",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить скрытие"
              }
            ]
          },
          {
            "event": "change",
            "description": "Новое модальное состояние видимости. Используется для обновления v-model",
            "args": [
              {
                "arg": "isVisible",
                "type": "Boolean",
                "description": "Состояние видимости модального окна. `true`, если модальное окно видимо, и `false`, если не видно"
              }
            ]
          },
          {
            "event": "close",
            "description": "Когда нажата кнопка закрытия заголовка по умолчанию, непосредственно перед тем, как модальное окно скрыто. Отменяемый",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить скрытие"
              }
            ]
          },
          {
            "event": "hidden",
            "description": "Всегда испускает после того, как модальное скрыто",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent"
              }
            ]
          },
          {
            "event": "hide",
            "description": "Всегда испускается непосредственно перед тем, как модальное спряталось. Отменяемо (если модальное окно не было принудительно скрыто)",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Проверьте `bvModalEvent.trigger`, чтобы узнать, какое действие вызвало скрытие. Вызовите `bvModalEvent.preventDefault()` , чтобы отменить скрытие"
              }
            ]
          },
          {
            "event": "ok",
            "description": "Когда кнопка OK по умолчанию нажата, как раз перед тем, как модальное окно спряталось. Отменяемый",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить скрытие"
              }
            ]
          },
          {
            "event": "show",
            "description": "Всегда испускается непосредственно перед показом модального окна. Отменяемый",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent. Вызовите `bvModalEvent.preventDefault()`, чтобы отменить показ"
              }
            ]
          },
          {
            "event": "shown",
            "description": "Всегда испускает, когда отображается модальное окно",
            "args": [
              {
                "arg": "bvModalEvent",
                "type": "BvModalEvent",
                "description": "Объект BvModalEvent"
              }
            ]
          }
        ],
        "rootEventListeners": [
          {
            "event": "bv::hide::modal",
            "description": "Скрыть модальное окно с указанным идентификатором, когда это событие генерируется на `root`",
            "args": [
              {
                "arg": "modalId",
                "type": "String",
                "description": "Идентификатор модального окна, которое нужно скрыть"
              }
            ]
          },
          {
            "event": "bv::show::modal",
            "description": "Показать модальное окно с указанным идентификатором, когда это событие генерируется в `$root`",
            "args": [
              {
                "arg": "modalId",
                "type": "String",
                "description": "Идентификатор модального окна для отображения"
              },
              {
                "arg": "elIDtoFocusOnClose",
                "type": [
                  "String",
                  "HTMLElement"
                ],
                "description": "Укажите ссылку на элемент или селектор CSS, чтобы вернуть фокус после закрытия модального окна (необязательно)"
              }
            ]
          },
          {
            "event": "bv::toggle::modal",
            "description": "Переключить видимость модального окна с учетом его идентификатора",
            "args": [
              {
                "arg": "modalId",
                "type": "String",
                "description": "Идентификатор модального окна для переключения видимости"
              },
              {
                "arg": "elIDtoFocusOnClose",
                "type": [
                  "String",
                  "HTMLElement"
                ],
                "description": "Укажите ссылку на элемент или селектор CSS, чтобы вернуть фокус после закрытия модального окна (необязательно)"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Содержимое модального тела. Опционально ограниченный",
            "scope": [
              {
                "prop": "cancel",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'cancel' и 'hide', с помощью `bvModalEvent.trigger = 'cancel'`"
              },
              {
                "prop": "close",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'close' и 'hide', с помощью `bvModalEvent.trigger = 'headerclose'`"
              },
              {
                "prop": "hide",
                "type": "Function",
                "description": "Принимает один аргумент `trigger`. Закрывает модальное окно и запускает событие 'hide', с помощью `bvModalEvent.trigger = trigger` (`trigger` не является обязательным)"
              },
              {
                "prop": "ok",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'ok' и 'hide', с помощью `bvModalEvent.trigger = 'ok'`"
              },
              {
                "prop": "visible",
                "type": "Boolean",
                "description": "Состояние видимости модального окна. `true` если модальное окно видимо, и `false`, если не видно"
              }
            ]
          },
          {
            "name": "modal-backdrop",
            "description": "Содержимое модального фона"
          },
          {
            "name": "modal-cancel",
            "description": "Содержимое модальной кнопки ОТМЕНА"
          },
          {
            "name": "modal-footer",
            "description": "Содержимое модального футера. Также удаляются стандартные кнопки OK и Cancel. Опционально ограниченный",
            "scope": [
              {
                "prop": "cancel",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'cancel' и 'hide', с помощью `vModalEvent.trigger = 'cancel'`"
              },
              {
                "prop": "close",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'close' и 'hide', с помощью `vModalEvent.trigger = 'headerclose'`"
              },
              {
                "prop": "hide",
                "type": "Function",
                "description": "Принимает один аргумент `trigger`. Закрывает модальное окно и запускает события 'hide' event, с помощью the `bvModalEvent.trigger = trigger` (`trigger` не является обязательным)"
              },
              {
                "prop": "ok",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'ok' и 'hide', с помощью `bvModalEvent.trigger = 'ok'`"
              },
              {
                "prop": "visible",
                "type": "Boolean",
                "description": "Состояние видимости модального окна. `true`, если модальное окно видимо, и `false`, если не видно"
              }
            ]
          },
          {
            "name": "modal-header",
            "description": "Все содержимое контейнера модального заголовка. Также удаляет верхнюю правую кнопку закрытия X. Опционально ограниченный",
            "scope": [
              {
                "prop": "cancel",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'cancel' и 'hide', с помощью `bvModalEvent.trigger = 'cancel'`"
              },
              {
                "prop": "close",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'close' и 'hide', с помощью `bvModalEvent.trigger = 'headerclose'`"
              },
              {
                "prop": "hide",
                "type": "Function",
                "description": "Принимает один аргумент `trigger`. Закрывает модальное окно и запускает события 'hide' event, с помощью the `bvModalEvent.trigger = trigger` (`trigger` не является обязательным)"
              },
              {
                "prop": "ok",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'ok' и 'hide', с помощью `bvModalEvent.trigger = 'ok'`"
              },
              {
                "prop": "visible",
                "type": "Boolean",
                "description": "Состояние видимости модального окна. `true`, если модальное окно видимо, и `false`, если не видно"
              }
            ]
          },
          {
            "name": "modal-header-close",
            "description": "Содержимое кнопки закрытия модального заголовка. Если используется слот `modal-header`, этот слот не будет отображаться"
          },
          {
            "name": "modal-ok",
            "description": "Содержимое модальной кнопки OK"
          },
          {
            "name": "modal-title",
            "description": "Заголовок модального окна. Если используется слот `modal-header`, этот слот не будет отображаться. Опционально ограниченный",
            "scope": [
              {
                "prop": "cancel",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'cancel' и 'hide', с помощью `vModalEvent.trigger = 'cancel'`"
              },
              {
                "prop": "close",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'close' и 'hide', с помощью `vModalEvent.trigger = 'headerclose'`"
              },
              {
                "prop": "hide",
                "type": "Function",
                "description": "Принимает один аргумент `trigger`. Закрывает модальное окно и запускает события 'hide' event, с помощью the `bvModalEvent.trigger = trigger` (`trigger` не является обязательным)"
              },
              {
                "prop": "ok",
                "type": "Function",
                "description": "Закрывает модальное окно и запускает события 'ok' и 'hide', с помощью `bvModalEvent.trigger = 'ok'`"
              },
              {
                "prop": "visible",
                "type": "Boolean",
                "description": "Состояние видимости модального окна. `true`, если модальное окно видимо, и `false`, если не видно"
              }
            ]
          }
        ]
      }
    ]
  }
}
