{
  "name": "@bootstrap-vue/form-tags",
  "version": "1.0.0",
  "meta": {
    "title": "Form Tags",
    "version": "2.2.0",
    "description": "Легкий пользовательский элемент управления формой ввода с тегами, с параметрами для настраиваемого рендеринга интерфейса, обнаружения повторяющихся тегов и дополнительной проверки тегов.",
    "components": [
      {
        "component": "BFormTags",
        "version": "2.2.0",
        "aliases": [
          "BTags"
        ],
        "props": [
          {
            "prop": "addButtonText",
            "description": "Текст для встроенной кнопки 'Add'. Слот `add-button-text' имеет приоритет"
          },
          {
            "prop": "addButtonVariant",
            "description": "Применяет один из вариантов цвета темы Bootstrap к кнопке 'Add'"
          },
          {
            "prop": "addOnChange",
            "description": "Если установлено, позволяет добавить тег к событию ввода 'change'"
          },
          {
            "prop": "duplicateTagText",
            "description": "Сообщение при обнаружении повторяющихся тегов. Установите пустую строку, чтобы отключить сообщение"
          },
          {
            "prop": "feedbackAriaLive",
            "version": "2.22.0",
            "description": "Значение для атрибута `aria-live` в тексте обратной связи"
          },
          {
            "prop": "ignoreInputFocusSelector",
            "version": "2.16.0",
            "description": "Игнорировать определенные элементы из процедуры ввода клика для фокусировки, заданной селектором (-ами) css"
          },
          {
            "prop": "inputAttrs",
            "description": "Дополнительные атрибуты для применения к новому элементу ввода тега"
          },
          {
            "prop": "inputClass",
            "description": "Класс (или классы) для применения к новому элементу ввода тега"
          },
          {
            "prop": "inputId",
            "description": "Идентификатор, применяемый к новому элементу ввода тега. Если не указан, будет автоматически сгенерирован уникальный идентификатор"
          },
          {
            "prop": "inputType",
            "version": "2.3.0",
            "description": "Определяет используемый тип ввода: 'text', 'email', 'tel', 'url' или 'number'. По умолчанию 'text'"
          },
          {
            "prop": "invalidTagText",
            "description": "Сообщение об ошибке при обнаружении недействительных тегов. Установите пустую строку, чтобы отключить сообщение"
          },
          {
            "prop": "limit",
            "version": "2.17.0",
            "description": "Максимальное количество тегов, которые можно добавить. Предел все еще может быть превышен, если манипулировать им за пределами компонента"
          },
          {
            "prop": "limitTagsText",
            "version": "2.17.0",
            "description": "Сообщение о достижении лимита. Установите пустую строку, чтобы отключить сообщение"
          },
          {
            "prop": "name",
            "description": "Устанавливает значение атрибута 'name' в элементе управления формы. Когда установлено, создает скрытый ввод для каждого тега"
          },
          {
            "prop": "noAddOnEnter",
            "description": "Если установлено, отключает добавление тега к событию ввода 'keydown.enter'"
          },
          {
            "prop": "noOuterFocus",
            "description": "Если установлено, отключает стиль фокуса корневого элемента компонента"
          },
          {
            "prop": "noTagRemove",
            "version": "2.21.0",
            "description": "Если установлено, у тегов не будет кнопки удаления"
          },
          {
            "prop": "placeholder",
            "description": "Устанавливает значение атрибута 'placeholder' в элементе управления формы"
          },
          {
            "prop": "removeOnDelete",
            "description": "Если установлено, разрешает удаление последнего тега в тегах, когда пользователь нажимает клавишу delete или backspace, а ввод пуст"
          },
          {
            "prop": "separator",
            "description": "Символ-разделитель, запускающий создание тега"
          },
          {
            "prop": "tagClass",
            "description": "Класс (или классы) для применения к тегам"
          },
          {
            "prop": "tagPills",
            "description": "Делает встроенные метки похожими на таблетки"
          },
          {
            "prop": "tagRemoveLabel",
            "description": "Значение атрибута 'aria-label' на кнопке удаления в теге"
          },
          {
            "prop": "tagRemovedLabel",
            "version": "2.5.0",
            "description": "Ярлык для региона aria-live, который сообщает об удаленных тегах пользователям программ чтения с экрана"
          },
          {
            "prop": "tagValidator",
            "description": "Необязательный метод проверки тегов. Передан единственный аргумент добавляемого тега. Должен возвращать 'true', если тег прошел проверку, или 'false', если тег не может быть добавлен"
          },
          {
            "prop": "tagVariant",
            "description": "Применяет к тегам один из вариантов цвета темы Bootstrap"
          },
          {
            "prop": "value",
            "description": "Массив текущих тегов. Это v-model"
          }
        ],
        "events": [
          {
            "event": "blur",
            "description": "Излучается, когда компонент теряет фокус",
            "args": [
              {
                "arg": "event",
                "type": "FocusEvent",
                "description": "Собственное событие размытия (до любого форматирования)"
              }
            ]
          },
          {
            "event": "focus",
            "description": "Излучается, когда компонент получает фокус",
            "args": [
              {
                "arg": "event",
                "type": "FocusEvent",
                "description": "Событие нативного фокуса (до любого форматирования)"
              }
            ]
          },
          {
            "event": "focusin",
            "description": "Излучается, когда внутренние элементы компонента получают фокус.",
            "args": [
              {
                "arg": "event",
                "type": "FocusEvent",
                "description": "Собственное событие focusin (до любого форматирования)"
              }
            ]
          },
          {
            "event": "focusout",
            "description": "Излучается, когда внутренние элементы компонента теряют фокус",
            "args": [
              {
                "arg": "event",
                "type": "FocusEvent",
                "description": "Собственное событие фокусировки (до любого форматирования)"
              }
            ]
          },
          {
            "event": "input",
            "description": "Выдается при изменении тегов. Обновляет v-model",
            "args": [
              {
                "arg": "value",
                "type": "Array",
                "description": "Массив текущих тегов"
              }
            ]
          },
          {
            "event": "tag-state",
            "description": "Излучается, когда теги в вводе пользователя анализируются",
            "args": [
              {
                "arg": "validTags",
                "type": "Array",
                "description": "Массив новых добавленных тегов (или которые будут добавлены). Будет нулевой длиной, если не добавлены теги"
              },
              {
                "arg": "invalidTags",
                "type": "Array",
                "description": "Массив тегов, которые нельзя добавить, потому что они не прошли проверку. Будет нулевой длиной, если нет недопустимых тегов"
              },
              {
                "arg": "duplicateTags",
                "type": "Array",
                "description": "Массив тегов, которые нельзя добавить, потому что они могут быть дублирующимися тегами. Будет нулевой длины, если нет повторяющихся тегов"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "add-button-text",
            "description": "Контент для размещения во встроенной кнопке 'Add'. Имеет приоритет над свойством 'add-button-text'. Не используется, если предоставлен слот с заданной областью действия по умолчанию"
          },
          {
            "name": "default",
            "description": "Слот для отмены рендеринга компонента тегов по умолчанию",
            "scope": [
              {
                "prop": "addButtonText",
                "type": "String",
                "description": "Значение свойства 'add-button-text'"
              },
              {
                "prop": "addButtonVariant",
                "type": "String",
                "description": "Значение свойства 'add-button-variant'"
              },
              {
                "prop": "addTag",
                "type": "Function",
                "description": "Метод добавления нового тега. Предполагает, что тег является значением ввода, но дополнительно принимает один аргумент, который является значением тега, которое нужно добавить"
              },
              {
                "prop": "disableAddButton",
                "type": "Boolean",
                "description": "Будет `true`, если тег(и) во входных данных не может быть добавлен (все недействительные и/или дублированные)"
              },
              {
                "prop": "disabled",
                "type": "Boolean",
                "description": "Если компонент находится в отключенном состоянии. Значение свойства 'disabled'"
              },
              {
                "prop": "duplicateTagText",
                "type": "String",
                "description": "Значение свойства 'duplicate-tag-text'"
              },
              {
                "prop": "duplicateTags",
                "type": "Array",
                "description": "Массив повторяющихся тегов, которые не удалось добавить"
              },
              {
                "prop": "form",
                "type": "String",
                "description": "Значение свойства 'form'"
              },
              {
                "prop": "inputAttrs",
                "type": "Object",
                "description": "Объект атрибутов для применения к собственным элементам ввода через 'v-bind=\"inputAttrs\"'"
              },
              {
                "prop": "inputClass",
                "type": [
                  "String",
                  "Array",
                  "Object"
                ],
                "description": "Класс (или классы) для применения к новому элементу ввода тега. Значение свойства 'input-class'"
              },
              {
                "prop": "inputHandlers",
                "type": "Object",
                "description": "Объект обработчиков событий для применения к собственным элементам ввода через 'v-on=\"inputHandlers\"'"
              },
              {
                "prop": "inputId",
                "type": "String",
                "description": "ID для добавления к новому элементу ввода тега. По умолчанию прописан 'input-id'. Если не указан, автоматически создается уникальный идентификатор. Также доступно через 'inputAttrs.id'"
              },
              {
                "prop": "inputType",
                "version": "2.3.0",
                "description": "Тип используемого ввода: 'type', 'email', 'tel', 'url' или 'number'. По умолчанию 'text'. Нормализованное значение 'input-type'"
              },
              {
                "prop": "invalidTagText",
                "type": "String",
                "description": "Значение свойства 'invalid-tag-text'"
              },
              {
                "prop": "invalidTags",
                "type": "Array",
                "description": "Массив недействительных тегов, которые не удалось добавить. Требуется функция валидатора через 'tag-validator'"
              },
              {
                "prop": "isDuplicate",
                "type": "Boolean",
                "description": "Будет иметь значение `true`, если пользователь попытался добавить повторяющиеся теги"
              },
              {
                "prop": "isInvalid",
                "type": "Boolean",
                "description": "Будет иметь значение `true`, если на входе есть недопустимые теги. Требуется функция валидатора через 'tag-validator'"
              },
              {
                "prop": "isLimitReached",
                "type": "Boolean",
                "description": "Будет иметь значение `true`, если на входе достигнуто максимальное количество тегов, определенное параметром 'limit'"
              },
              {
                "prop": "limitTagsText",
                "type": "String",
                "description": "Значение свойства 'limit-tag-text'"
              },
              {
                "prop": "noTagRemove",
                "version": "2.21.0",
                "type": "Boolean",
                "description": "Значение свойства 'no-tag-remove'"
              },
              {
                "prop": "placeholder",
                "type": "String",
                "description": "Значение свойства 'placeholder'"
              },
              {
                "prop": "remove",
                "type": "Function",
                "description": "Метод полного сброса ввода тегов"
              },
              {
                "prop": "removeTag",
                "type": "Function",
                "description": "Способ удаления тега. Принимает один аргумент, который является значением тега для удаления"
              },
              {
                "prop": "required",
                "type": "Boolean",
                "description": "Значение свойства 'required'"
              },
              {
                "prop": "separator",
                "type": [
                  "String",
                  "Array"
                ],
                "description": "Значение свойства 'separator'"
              },
              {
                "prop": "size",
                "type": "String",
                "description": "Значение свойства 'size'"
              },
              {
                "prop": "state",
                "type": "Boolean",
                "description": "Контекстное состояние компонента. Значение свойства 'state'. Возможные значения: true, false или null"
              },
              {
                "prop": "tagClass",
                "type": [
                  "String",
                  "Array",
                  "Object"
                ],
                "description": "Класс (или классы) для применения к элементам тега. Значение свойства 'tag-class'"
              },
              {
                "prop": "tagPills",
                "type": "Boolean",
                "description": "Значение свойства`tag-pills`"
              },
              {
                "prop": "tagRemoveLabel",
                "type": "String",
                "description": "Метка ARIA для кнопки удаления на тегах. Значение свойства 'tag-remove-label'"
              },
              {
                "prop": "tagVariant",
                "type": "String",
                "description": "Значение свойства 'tag-variant'"
              },
              {
                "prop": "tags",
                "type": "Array",
                "description": "Массив тегов для рендеринга"
              }
            ]
          }
        ]
      },
      {
        "component": "BFormTag",
        "version": "2.2.0",
        "description": "Компонент-помощник для настраиваемого отображения тегов во вводе с тегами",
        "aliases": [
          "BTag"
        ],
        "props": [
          {
            "prop": "noRemove",
            "version": "2.21.0",
            "description": "Если установлено, у тега не будет кнопки удаления"
          },
          {
            "prop": "pill",
            "description": "Делает бирку похожей на таблетку"
          },
          {
            "prop": "removeLabel",
            "description": "Значение атрибута 'aria-label' на кнопке удаления в теге"
          },
          {
            "prop": "title",
            "description": "Значение для размещения в атрибуте тега 'title'. Также будет использоваться для содержимого тега, если не предоставлен слот по умолчанию"
          },
          {
            "prop": "variant",
            "description": "Применяет к компоненту один из вариантов цвета темы Bootstrap"
          }
        ],
        "events": [
          {
            "event": "remove",
            "description": "Выдается при нажатии кнопки удаления"
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в теге. Переопределяет свойство `title`"
          }
        ]
      }
    ]
  }
}
