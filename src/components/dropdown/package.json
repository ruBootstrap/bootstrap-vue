{
  "name": "@bootstrap-vue/dropdown",
  "version": "1.0.0",
  "meta": {
    "title": "Dropdown",
    "description": "Выпадающие списки - это переключаемые контекстные наложения для отображения списков ссылок и действий в формате раскрывающегося меню.",
    "components": [
      {
        "component": "BDropdown",
        "aliases": [
          "BDd"
        ],
        "props": [
          {
            "prop": "block",
            "version": "2.1.0",
            "description": "Отображает кнопку переключения шириной 100% (расширяется до ширины родительского контейнера)"
          },
          {
            "prop": "boundary",
            "description": "Граничное ограничение меню: 'scrollParent', 'window', 'viewport' или ссылка на HTMLElement"
          },
          {
            "prop": "dropleft",
            "description": "Когда установлено, позиционирует меню слева от кнопки"
          },
          {
            "prop": "dropright",
            "description": "Когда установлено, позиционирует меню справа от кнопки"
          },
          {
            "prop": "dropup",
            "description": "Когда установлено, размещает меню в верхней части кнопки"
          },
          {
            "prop": "html",
            "description": "HTML-строка для размещения в кнопке переключения или в разделенной кнопке в режиме разделения",
            "xss": true
          },
          {
            "prop": "lazy",
            "description": "Если установлено, будет монтировать содержимое меню в DOM только тогда, когда меню открыто"
          },
          {
            "prop": "menuClass",
            "description": "CSS-класс (или классы) для добавления в контейнер меню"
          },
          {
            "prop": "noCaret",
            "description": "Скрыть индикатор каретки на кнопке-переключателе"
          },
          {
            "prop": "noFlip",
            "description": "Предотвратить автоматическое переворачивание меню"
          },
          {
            "prop": "offset",
            "description": "Укажите количество пикселей, на которое нужно сдвинуть меню. Поддерживаются отрицательные значения"
          },
          {
            "prop": "popperOpts",
            "description": "Дополнительная конфигурация для передачи в Popper.js"
          },
          {
            "prop": "right",
            "description": "Выровняйте правый край меню по правому краю кнопки"
          },
          {
            "prop": "size",
            "description": "Установите размер внешнего вида компонента. 'sm', 'md' (по умолчанию) или 'lg'"
          },
          {
            "prop": "split",
            "description": "Когда установлено, отображает раскрывающееся меню с разделенной кнопкой"
          },
          {
            "prop": "splitButtonType",
            "description": "Значение, которое нужно разместить в атрибуте 'type' на раздельной кнопке: 'button', 'submit', 'reset'"
          },
          {
            "prop": "splitClass",
            "version": "2.2.0",
            "description": "CSS-класс (или классы) для добавления к кнопке разделения"
          },
          {
            "prop": "splitHref",
            "description": "Обозначает целевой URL-адрес ссылки для кнопки разделения"
          },
          {
            "prop": "splitTo",
            "description": "Свойство <router-link>: Обозначает целевой маршрут кнопки разделения. При нажатии значение свойства в свойство будет передано в router.push() внутренне, поэтому значение может быть либо строкой, либо объектом дескриптора местоположения"
          },
          {
            "prop": "splitVariant",
            "description": "Применяет один из вариантов цвета темы Bootstrap к разделенной кнопке. По умолчанию значение свойства 'variant'"
          },
          {
            "prop": "text",
            "description": "Текст для размещения в кнопке-переключателе или в разделенной кнопке в режиме разделения"
          },
          {
            "prop": "toggleAttrs",
            "version": "2.22.0",
            "description": "Дополнительные атрибуты, применяемые к кнопке-переключателю"
          },
          {
            "prop": "toggleClass",
            "description": "Класс (или классы) CSS для добавления к кнопке переключения"
          },
          {
            "prop": "toggleTag",
            "description": "Укажите тег HTML для отображения вместо тега по умолчанию",
            "xss": true
          },
          {
            "prop": "toggleText",
            "description": "Метка ARIA (только для sr) для установки на переключателе в режиме разделения"
          },
          {
            "prop": "variant",
            "description": "Применяет к компоненту один из вариантов цвета темы Bootstrap"
          }
        ],
        "events": [
          {
            "event": "bv::dropdown::hide",
            "description": "Генерируется в $root непосредственно перед скрытием раскрывающегося списка. Отменяемый",
            "args": [
              {
                "arg": "bvEvent",
                "type": "BvEvent",
                "description": "Объект BvEvent. Вызов bvEvent.preventDefault() для отмены скрытия"
              }
            ]
          },
          {
            "event": "bv::dropdown::show",
            "description": "Генерируется в $root непосредственно перед отображением раскрывающегося списка. Отменяемый",
            "args": [
              {
                "arg": "bvEvent",
                "type": "BvEvent",
                "description": "Объект BvEvent. Вызов bvEvent.preventDefault() для отмены показа"
              }
            ]
          },
          {
            "event": "click",
            "description": "Генерируется при нажатии кнопки разделения в режиме разделения",
            "args": [
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Собственный объект события клика"
              }
            ]
          },
          {
            "event": "hidden",
            "description": "Выдается, когда раскрывающийся список скрыт"
          },
          {
            "event": "hide",
            "description": "Выдается непосредственно перед скрытием раскрывающегося списка. Отменяемый",
            "args": [
              {
                "arg": "bvEvent",
                "type": "BvEvent",
                "description": "Объект BvEvent. Вызов bvEvent.preventDefault() для отмены скрытия"
              }
            ]
          },
          {
            "event": "show",
            "description": "Выдается непосредственно перед отображением раскрывающегося списка. Отменяемый",
            "args": [
              {
                "arg": "bvEvent",
                "type": "BvEvent",
                "description": "Объект BvEvent. Вызов bvEvent.preventDefault() для отмены показа"
              }
            ]
          },
          {
            "event": "shown",
            "description": "Выдается, когда отображается раскрывающийся список"
          },
          {
            "event": "toggle",
            "description": "Выдается при нажатии кнопки переключения"
          }
        ],
        "slots": [
          {
            "name": "button-content",
            "description": "Может использоваться для реализации настраиваемого текста с помощью значков и других стилей"
          },
          {
            "name": "default",
            "description": "Слот по умолчанию с дополнительной областью действия для содержимого раскрывающегося меню",
            "scope": [
              {
                "prop": "hide",
                "type": "Function",
                "description": "Может использоваться для закрытия раскрывающегося меню. Принимает необязательный логический аргумент, который, если true, возвращает фокус переключателю"
              }
            ]
          }
        ]
      },
      {
        "component": "BDropdownItem",
        "aliases": [
          "BDdItem"
        ],
        "props": [
          {
            "prop": "linkClass",
            "version": "2.9.0",
            "description": "Класс или классы для применения к элементу внутренней ссылки"
          }
        ],
        "events": [
          {
            "event": "click",
            "description": "Выдается при нажатии на элемент",
            "args": [
              {
                "name": "event",
                "type": "MouseEvent",
                "description": "Собственный объект события клика"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в раскрывающемся списке"
          }
        ]
      },
      {
        "component": "BDropdownItemButton",
        "aliases": [
          "BDropdownItemBtn",
          "BDdItemButton",
          "BDdItemBtn"
        ],
        "props": [
          {
            "prop": "buttonClass",
            "version": "2.9.0",
            "description": "Класс или классы для применения к элементу внутренней кнопки"
          }
        ],
        "events": [
          {
            "event": "click",
            "description": "Выдается при нажатии кнопки",
            "args": [
              {
                "name": "event",
                "type": "MouseEvent",
                "description": "Собственный объект события клика"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в раскрывающемся списке-кнопке"
          }
        ]
      },
      {
        "component": "BDropdownDivider",
        "aliases": [
          "BDdDivider"
        ]
      },
      {
        "component": "BDropdownForm",
        "aliases": [
          "BDdForm"
        ],
        "props": [
          {
            "prop": "formClass",
            "version": "2.2.0",
            "description": "CSS-класс (или классы) для добавления в форму"
          },
          {
            "prop": "inline",
            "description": "Если задано, форма будет во встроенном режиме, в котором метки, элементы управления формы и кнопки будут отображаться в одной горизонтальной строке"
          },
          {
            "prop": "novalidate",
            "description": "Если задано, отключает встроенную в браузере проверку HTML5 для элементов управления в форме"
          },
          {
            "prop": "validated",
            "description": "Если установлено, добавляет в форму класс Bootstrap 'was-validated', вызывая собственные состояния проверки браузера"
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в раскрывающейся форме"
          }
        ]
      },
      {
        "component": "BDropdownText",
        "aliases": [
          "BDdText"
        ],
        "props": [
          {
            "prop": "textClass",
            "description": "Класс или классы для применения к внутреннему элементу"
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в раскрывающемся тексте"
          }
        ]
      },
      {
        "component": "BDropdownGroup",
        "aliases": [
          "BDdGroup"
        ],
        "props": [
          {
            "prop": "headerClasses",
            "description": "CSS-класс (или классы) для добавления в заголовок"
          }
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент (элементы) для размещения в раскрывающейся группе"
          },
          {
            "name": "header",
            "description": "Необязательное содержимое заголовка для раскрывающейся группы"
          }
        ]
      },
      {
        "component": "BDropdownHeader",
        "aliases": [
          "BDdHeader"
        ],
        "slots": [
          {
            "name": "default",
            "description": "Контент для размещения в раскрывающемся заголовке"
          }
        ]
      }
    ]
  }
}
