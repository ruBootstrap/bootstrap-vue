(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{450:function(l,n){l.exports={baseTOC:{top:"#файл-формы",title:"Файл формы",toc:[{href:"#один-файл-по-умолчанию",label:"Один файл (по умолчанию)"},{href:"#несколько-файлов",label:"Несколько файлов"},{href:"#режим-каталога",label:"Режим каталога"},{href:"#поддержка-перетаскивания",label:"Поддержка перетаскивания"},{href:"#ограничение-определенными-типами-файлов",label:"Ограничение определенными типами файлов"},{href:"#кастомизация",label:"Кастомизация",toc:[{href:"#размеры",label:"Размеры"},{href:"#настроить-текст-заполнителя",label:"Настроить текст заполнителя"},{href:"#настроить-метку-кнопки-просмотра",label:"Настроить метку кнопки просмотра"},{href:"#функция-форматирования-имени-файла",label:"Функция форматирования имени файла"},{href:"#форматирование-имени-файла-через-слот-с-заданной-областью",label:"Форматирование имени файла через слот с заданной областью"}]},{href:"#нестандартный-ввод-файла",label:"Нестандартный ввод файла"},{href:"#контекстная-обратная-связь-о-состоянии",label:"Контекстная обратная связь о состоянии"},{href:"#автофокус",label:"Автофокус"},{href:"#доступность",label:"Доступность"},{href:"#очистка-выбора-файла",label:"Очистка выбора файла"},{href:"#примечания-по-реализации",label:"Примечания по реализации"}]},titleLead:'<h1 id="файл-формы" class="bv-no-focus-ring"><span class="bd-content-title">Файл формы</span></h1> <p class="bd-lead">Настраиваемый, кросс-браузерный, элемент управления вводом файлов, который поддерживает загрузку одного файла, нескольких файлов и каталогов (для браузеров, поддерживающих режим каталогов).</p>',body:'<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Styled --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;file1&quot;</span>\n      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;Boolean(file1)&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Choose a file or drop it here...&quot;</span>\n      <span class="hljs-attr">drop-placeholder</span>=<span class="hljs-string">&quot;Drop file here...&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Выбранный файл: {{ file1 ? file1.name : &#x27;&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Plain mode --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;file2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">plain</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Выбранный файл: {{ file2 ? file2.name : &#x27;&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">file1</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">file2</span>: <span class="hljs-literal">null</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-file.vue --&gt;</span></pre></div><p>Для согласованности между браузерами, <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code> по умолчанию используется для ввода пользовательского файла Bootstrap, чтобы заменить настройки браузера по умолчанию. Они построены на основе семантической и доступной разметки, поэтому представляют собой надежную замену вводимым по умолчанию файлам.</p> <h2 id="один-файл-по-умолчанию" class="bv-no-focus-ring"><span class="bd-content-title">Один файл (по умолчанию)<a class="anchorjs-link" href="#один-файл-по-умолчанию" aria-labelledby="один-файл-по-умолчанию"></a></span></h2> <p>В однофайловом режиме, когда файл не выбран или пользователь отменяет диалог «Обзор», <code class="text-nowrap" translate="no">v-model</code> принимает значение <code class="text-nowrap" translate="no">null</code>, что означает, что файл не выбран. Когда файл выбран, возвращаемое значение будет экземпляром объекта JavaScript <a href="https://developer.mozilla.org/en/docs/Web/API/File" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">File</code></a>.</p> <h2 id="несколько-файлов" class="bv-no-focus-ring"><span class="bd-content-title">Несколько файлов<a class="anchorjs-link" href="#несколько-файлов" aria-labelledby="несколько-файлов"></a></span></h2> <p>Выгрузка нескольких файлов поддерживается добавлением к компоненту свойства <code class="text-nowrap" translate="no">multiple</code>. В этом случае <code class="text-nowrap" translate="no">v-model</code> <em>всегда</em> <code class="text-nowrap" translate="no">Array</code>. Если файлы не выбраны, будет возвращен пустой массив. Когда файл или файлы выбраны, возвращаемое значение будет массивом экземпляров объекта JavaScript <a href="https://developer.mozilla.org/en/docs/Web/API/File" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">File</code></a>.</p> <h2 id="режим-каталога" class="bv-no-focus-ring"><span class="bd-content-title">Режим каталога<a class="anchorjs-link" href="#режим-каталога" aria-labelledby="режим-каталога"></a></span></h2> <div class="alert alert-warning small mb-3"> <p class="mb-0"> <strong>ВНИМАНИЕ:</strong> Режим каталога - это <em>нестандартная</em> функция. Несмотря на то, что он поддерживается всеми современными браузерами, на него не следует полагаться в производственной среде. Подробнее об <a class="alert-link" href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory">MDN</a> и <a class="alert-link" href="https://caniuse.com/input-file-directory">Могу я использовать</a>. </p> </div> <p>Добавляя свойство <code class="text-nowrap" translate="no">directory</code>, пользователь может выбирать каталоги вместо файлов. Когда каталог выбран, каталог и вся его иерархия содержимого включаются в набор выбранных элементов.</p> <p>В режиме <code class="text-nowrap" translate="no">directory</code> файлы по умолчанию возвращаются в формате вложенного массива. Т. е.</p> <div class="bd-code"><pre class="hljs p-2" translate="no">dirA/\n  - fileA1\n  - fileA2\n  - dirB/\n    - fileB1\n  - dirC/\n    - fileC1\n    - fileC2\ndirD/\n  - fileD1</pre></div><p>будет возвращено как (или аналогичный, порядок файлов/каталогов может отличаться):</p> <div class="bd-code"><pre class="hljs p-2" translate="no">[[fileA1, fileA2, [fileB1], [fileC1, fileC2]], [fileD1]]</pre></div><p>Если вы установите свойство <code class="text-nowrap" translate="no">no-traverse</code>, массив будет сглажен:</p> <div class="bd-code"><pre class="hljs p-2" translate="no">[fileA1, fileA2, fileB1, fileC1, fileC2, fileD1]</pre></div><p>Каждая запись файла будет иметь специальную свойство <code class="text-nowrap" translate="no">$path</code>, которая будет содержать относительный путь к каждому файлу. Для вложенных структур каталогов BootstrapVue использует свою собственную процедуру для определения относительного пути, в противном случае он полагается на <a href="https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">File.webkitRelativePath</code></a>.</p> <p>Режим каталога также поддерживается, когда ввод файла находится в <a href="#non-custom-file-input" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">plain</code></a> в <strong>большинстве</strong> современных браузеров.</p> <h2 id="поддержка-перетаскивания" class="bv-no-focus-ring"><span class="bd-content-title">Поддержка перетаскивания<a class="anchorjs-link" href="#поддержка-перетаскивания" aria-labelledby="поддержка-перетаскивания"></a></span></h2> <p>По умолчанию включен режим перетаскивания. Его можно отключить, установив свойство <code class="text-nowrap" translate="no">no-drop</code>. <code class="text-nowrap" translate="no">no-drop</code> не действует в <a href="#non-custom-file-input" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">plain</code></a> (некоторые браузеры поддерживают перетаскивание файлов в простой входной файл).</p> <p>При желании вы можете установить другой заполнитель при перетаскивании через свойство <code class="text-nowrap" translate="no">drop-placeholder</code> или слот <code class="text-nowrap" translate="no">drop-placeholder</code> с заданной областью действия. Свойство поддерживает только обычный текст. Используйте слот для пользовательской разметки HTML. Слот имеет приоритет над свойством. Свойство/слот <code class="text-nowrap" translate="no">drop-placeholder</code> не действует, если установлено <code class="text-nowrap" translate="no">no-drop</code> или в <a href="#non-custom-file-input" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">plain</code></a>.</p> <p>Обратите внимание, что собственные ограничения браузера (такие как <code class="text-nowrap" translate="no">required</code>) не будут работать в режиме перетаскивания, поскольку скрытый ввод файла не обрабатывает функциональность перетаскивания и будет иметь нулевые выбранные файлы.</p> <h2 id="ограничение-определенными-типами-файлов" class="bv-no-focus-ring"><span class="bd-content-title">Ограничение определенными типами файлов<a class="anchorjs-link" href="#ограничение-определенными-типами-файлов" aria-labelledby="ограничение-определенными-типами-файлов"></a></span></h2> <p>Вы можете ограничить типы файлов, установив свойство <code class="text-nowrap" translate="no">accept</code> в строку, содержащую разрешенный тип(ы) файлов. Чтобы указать более одного типа, разделите значения запятой.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Принять все форматы изображений с помощью подстановочного знака типа мультимедиа IANA--&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">accept</span>=<span class="hljs-string">&quot;image/*&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Принимать определенные форматы изображений по типу IANA --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">accept</span>=<span class="hljs-string">&quot;image/jpeg, image/png, image/gif&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Принимать определенные форматы изображений по расширению --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">accept</span>=<span class="hljs-string">&quot;.jpg, .png, .gif&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre></div><p>Чтобы принять файл любого типа, оставьте для параметра <code class="text-nowrap" translate="no">accept</code> значение <code class="text-nowrap" translate="no">null</code> (по умолчанию). Вы можете смешивать и сопоставлять типы носителей и расширения IANA.</p> <p>Смотрите <a href="https://www.iana.org/assignments/media-types/" target="_blank" rel="noopener">медиа типы IANA</a> для получения полного списка стандартных типов носителей.</p> <p><strong>Примечание:</strong> Не все браузеры поддерживают или соблюдают атрибут <code class="text-nowrap" translate="no">accept</code> во входных файлах.</p> <p>Для перетаскивания BootstrapVue использует внутреннюю процедуру проверки типа файла и отфильтровывает файлы, которые не имеют правильного типа или расширения IANA.</p> <h2 id="кастомизация" class="bv-no-focus-ring"><span class="bd-content-title">Кастомизация<a class="anchorjs-link" href="#кастомизация" aria-labelledby="кастомизация"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code>, когда он не в <a href="#non-custom-file-input" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">plain</code></a>, предоставляет несколько функций для настройки его внешнего вида.</p> <h3 id="размеры" class="bv-no-focus-ring"><span class="bd-content-title">Размеры<a class="anchorjs-link" href="#размеры" aria-labelledby="размеры"></a></span></h3> <p>Используйте свойство <code class="text-nowrap" translate="no">size</code> для управления визуальным размером ввода. Размер по умолчанию считается <code class="text-nowrap" translate="no">md</code> (средний). Дополнительные размеры: <code class="text-nowrap" translate="no">lg</code> (большой) и <code class="text-nowrap" translate="no">sm</code> (маленький). Эти размеры совпадают с размерами, доступными в других элементах управления формой.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Small:&quot;</span> <span class="hljs-attr">label-cols-sm</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">label-size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;file-small&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Default:&quot;</span> <span class="hljs-attr">label-cols-sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;file-default&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Large:&quot;</span> <span class="hljs-attr">label-cols-sm</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">label-size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;file-large&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- form-file-sizes.vue --&gt;</span></pre></div><p><strong>Примечание:</strong> Bootstrap v4.x изначально не поддерживает размеры для настраиваемого файлового элемента управления. Однако BootstrapVue включает настраиваемый SCSS/CSS, который добавляет поддержку изменения размера настраиваемого элемента управления вводом файлов.</p> <h3 id="настроить-текст-заполнителя" class="bv-no-focus-ring"><span class="bd-content-title">Настроить текст заполнителя<a class="anchorjs-link" href="#настроить-текст-заполнителя" aria-labelledby="настроить-текст-заполнителя"></a></span></h3> <p>Используйте свойство <code class="text-nowrap" translate="no">placeholder</code> или слот <code class="text-nowrap" translate="no">placeholder</code> с заданной областью, чтобы изменить текст подсказки, который отображается, когда файлы не выбраны. Свойство поддерживает только обычный текст. Используйте слот для пользовательской разметки HTML. Слот имеет приоритет над свойством.</p> <h3 id="настроить-метку-кнопки-просмотра" class="bv-no-focus-ring"><span class="bd-content-title">Настроить метку кнопки просмотра<a class="anchorjs-link" href="#настроить-метку-кнопки-просмотра" aria-labelledby="настроить-метку-кнопки-просмотра"></a></span></h3> <p>Если вы хотите глобально изменить метку <code class="text-nowrap" translate="no">Browse</code>, вы можете добавить что-то подобное в свои глобальные таблицы стилей. Также рекомендуется использовать <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:lang" target="_blank" rel="noopener">:lang()</a> для многоязычных сайтов.</p> <div class="bd-code"><pre class="hljs css p-2" translate="no"><span class="hljs-selector-class">.custom-file-input</span><span class="hljs-selector-pseudo">:lang</span>(en) ~ <span class="hljs-selector-class">.custom-file-label</span><span class="hljs-selector-pseudo">::after</span> {\n  <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;Browse&#x27;</span>;\n}</pre></div><p>В качестве альтернативы вы можете установить содержимое пользовательского текста кнопки просмотра файла с помощью свойства <code class="text-nowrap" translate="no">browse-text</code>. Обратите внимание, поддерживается только обычный текст. HTML и компоненты не поддерживаются.</p> <h3 id="функция-форматирования-имени-файла" class="bv-no-focus-ring"><span class="bd-content-title">Функция форматирования имени файла<a class="anchorjs-link" href="#функция-форматирования-имени-файла" aria-labelledby="функция-форматирования-имени-файла"></a></span></h3> <p>Задайте для свойства <code class="text-nowrap" translate="no">file-name-formatter</code> функцию, которая принимает три аргумента:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Аргумент</th> <th>Тип</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td>[1] <code class="text-nowrap" translate="no">files</code></td> <td>Array</td> <td>Плоский массив объектов <code class="text-nowrap" translate="no">File</code></td> </tr> <tr> <td>[2] <code class="text-nowrap" translate="no">filesTraversed</code></td> <td>Array</td> <td>Массив массивов объектов <code class="text-nowrap" translate="no">File</code> в <a href="#directory-mode" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">directory</code></a></td> </tr> <tr> <td>[3] <code class="text-nowrap" translate="no">names</code></td> <td>Array</td> <td>Плоский массив имен файлов (строк)</td> </tr> </tbody></table> </div><p>Функция должна возвращать одну отформатированную строку (HTML не поддерживается). Средство форматирования не будет вызываться, если файлы не выбраны.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">multiple</span> <span class="hljs-attr">:file-name-formatter</span>=<span class="hljs-string">&quot;formatNames&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">formatNames</span>(<span class="hljs-params">files</span>)</span> {\n        <span class="hljs-keyword">return</span> files.length === <span class="hljs-number">1</span> ? files[<span class="hljs-number">0</span>].name : <span class="hljs-string">`<span class="hljs-subst">${files.length}</span> files selected`</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- file-formatter-function.vue --&gt;</span></pre></div><h3 id="форматирование-имени-файла-через-слот-с-заданной-областью" class="bv-no-focus-ring"><span class="bd-content-title">Форматирование имени файла через слот с заданной областью<a class="anchorjs-link" href="#форматирование-имени-файла-через-слот-с-заданной-областью" aria-labelledby="форматирование-имени-файла-через-слот-с-заданной-областью"></a></span></h3> <p>В качестве альтернативы вы можете использовать слот с ограниченной областью видимости <code class="text-nowrap" translate="no">file-name</code> для отображения имен файлов. Слот с заданной областью действия получит следующие свойства:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Свойство</th> <th>Тип</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">files</code></td> <td>Array</td> <td>Плоский массив объектов <code class="text-nowrap" translate="no">File</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">filesTraversed</code></td> <td>Array</td> <td>Массив массивов объектов <code class="text-nowrap" translate="no">File</code> в <a href="#directory-mode" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">directory</code></a></td> </tr> <tr> <td><code class="text-nowrap" translate="no">names</code></td> <td>Array</td> <td>Плоский массив имен файлов (строк)</td> </tr> </tbody></table> </div><p>Все три свойства всегда являются массивами, независимо от настройки свойства <code class="text-nowrap" translate="no">multiple</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">multiple</span>&gt;</span>\n   <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;file-name&quot;</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">&quot;{ names }&quot;</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;dark&quot;</span>&gt;</span>{{ names[0] }}<span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-badge</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;names.length &gt; 1&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-1&quot;</span>&gt;</span>\n       + {{ names.length - 1 }} Больше файлов\n     <span class="hljs-tag">&lt;/<span class="hljs-name">b-badge</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- file-formatter-slot.vue --&gt;</span></pre></div><p>При использовании слота <code class="text-nowrap" translate="no">file-name</code> свойство <code class="text-nowrap" translate="no">file-name-formatter</code> игнорируется. Слот <strong>не будет</strong> отображаться, если не выбран ни один файл(ы).</p> <h2 id="нестандартный-ввод-файла" class="bv-no-focus-ring"><span class="bd-content-title">Нестандартный ввод файла<a class="anchorjs-link" href="#нестандартный-ввод-файла" aria-labelledby="нестандартный-ввод-файла"></a></span></h2> <p>Вы можете сделать так, чтобы <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code> отображал исходный файл браузера, установив свойство <code class="text-nowrap" translate="no">plain</code>. Обратите внимание, что многие из настраиваемых функций не применяются, когда установлен <code class="text-nowrap" translate="no">plain</code>.</p> <h2 id="контекстная-обратная-связь-о-состоянии" class="bv-no-focus-ring"><span class="bd-content-title">Контекстная обратная связь о состоянии<a class="anchorjs-link" href="#контекстная-обратная-связь-о-состоянии" aria-labelledby="контекстная-обратная-связь-о-состоянии"></a></span></h2> <p>Bootstrap включает стили проверки <code class="text-nowrap" translate="no">valid</code> и <code class="text-nowrap" translate="no">invalid</code> состояний для большинства элементов управления формой.</p> <p>Вообще говоря, вы захотите использовать определенное состояние для определенных типов обратной связи:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (обозначает недопустимое состояние) отлично подходит, когда есть блокирующее или обязательное поле. Пользователь должен правильно заполнить это поле, чтобы отправить форму</li> <li><code class="text-nowrap" translate="no">true</code> (обозначает допустимое состояние) идеально подходит для ситуаций, когда у вас есть проверка по полю во всей форме и вы хотите побудить пользователя пройти через остальные поля</li> <li><code class="text-nowrap" translate="no">null</code> diне отображает состояние проверки (ни действительное, ни недействительное)</li> </ul> <p>Чтобы применить один из иконок контекстного состояния к <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code>, установите для свойства <code class="text-nowrap" translate="no">state</code> значение <code class="text-nowrap" translate="no">false</code> (для недопустимого), <code class="text-nowrap" translate="no">true</code> (для действительного) или <code class="text-nowrap" translate="no">null</code> (состояние проверки отсутствует).</p> <p><strong>Примечание:</strong> Контекстные состояния <strong>не</strong> поддерживаются в <a href="#non-custom-file-input" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">plain</code></a>.</p> <h2 id="автофокус" class="bv-no-focus-ring"><span class="bd-content-title">Автофокус<a class="anchorjs-link" href="#автофокус" aria-labelledby="автофокус"></a></span></h2> <p>Когда свойство <code class="text-nowrap" translate="no">autofocus</code> установлено на <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code>, ввод будет автоматически сфокусирован, когда он вставлен (т.е. <strong>установлен</strong>) в документ, или повторно активирован, когда он находится внутри Vue. Компонент <code class="text-nowrap" translate="no">&lt;keep-alive&gt;</code>. Обратите внимание, что это свойство <strong>не</strong> устанавливает атрибут <code class="text-nowrap" translate="no">autofocus</code> на входе и не может определить, когда ввод становится видимым.</p> <h2 id="доступность" class="bv-no-focus-ring"><span class="bd-content-title">Доступность<a class="anchorjs-link" href="#доступность" aria-labelledby="доступность"></a></span></h2> <p>При использовании пользовательской версии ввода <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code>, которая скрывает исходный ввод, <strong>настоятельно рекомендуется</strong> указать строку уникального идентификатора документа через свойство <code class="text-nowrap" translate="no">id</code>. Это автоматически отобразит дополнительные атрибуты ARIA, необходимые для повышения удобства использования людьми, использующими вспомогательные технологии.</p> <h2 id="очистка-выбора-файла" class="bv-no-focus-ring"><span class="bd-content-title">Очистка выбора файла<a class="anchorjs-link" href="#очистка-выбора-файла" aria-labelledby="очистка-выбора-файла"></a></span></h2> <p>При вводе типа file обычно <code class="text-nowrap" translate="no">v-model</code> однонаправлен (это означает, что вы не можете предварительно установить выбранные файлы). Однако вы можете очистить выбранные файлы входного файла, установив для <code class="text-nowrap" translate="no">v-model</code> значение <code class="text-nowrap" translate="no">null</code> (для одиночного режима) или пустой массив <code class="text-nowrap" translate="no">[]</code> (для режимов <a href="#multiple-files" class="font-weight-bold"><code class="text-nowrap" translate="no">multiple</code></a>/<a href="#directory-mode" class="font-weight-bold"><code class="text-nowrap" translate="no">directory</code></a>).</p> <p>В качестве альтернативы, <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code> предоставляет метод <code class="text-nowrap" translate="no">reset()</code>, который может быть вызван для очистки ввода файла. Чтобы воспользоваться преимуществом метода <code class="text-nowrap" translate="no">reset()</code>, вам необходимо получить ссылку на компонент <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-file</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;file-input&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-file</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clearFiles&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-2&quot;</span>&gt;</span>Сброс с помощью метода<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;file = null&quot;</span>&gt;</span>Сброс через v-model<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>Выбранный файл: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>{{ file ? file.name : &#x27;&#x27; }}<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">file</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">clearFiles</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.$refs[<span class="hljs-string">&#x27;file-input&#x27;</span>].reset()\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-file-reset.vue --&gt;</span></pre></div><h2 id="примечания-по-реализации" class="bv-no-focus-ring"><span class="bd-content-title">Примечания по реализации<a class="anchorjs-link" href="#примечания-по-реализации" aria-labelledby="примечания-по-реализации"></a></span></h2> <p>Поскольку не все браузеры позволяют устанавливать значение входного файла (даже в <code class="text-nowrap" translate="no">null</code> или пустую строку), <code class="text-nowrap" translate="no">b-form-input</code> использует технику, которая работает кроссбраузерно, которая включает изменение типа ввода на <code class="text-nowrap" translate="no">null</code> и затем сразу же вернитесь к типу <code class="text-nowrap" translate="no">file</code>.</p> <p>Вложенные файловые структуры в <a href="#directory-mode" class="font-weight-bold">режим <code class="text-nowrap" translate="no">directory</code></a> требуют поддержки <code class="text-nowrap" translate="no">Promise</code> в браузере. Если ваше приложение ориентировано на старые браузеры, такие как IE 11, включите полифилл, который обеспечивает поддержку <code class="text-nowrap" translate="no">Promise</code>. Если поддержка <code class="text-nowrap" translate="no">Promise</code> не обнаружена, файлы всегда будут иметь плоскую файловую структуру.</p> <p>Из-за <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=138987" target="_blank" rel="noopener">&quot;ошибки&quot; в Chromium</a>, вложенные файловые структуры в <a href="#directory-mode" class="font-weight-bold">режиме <code class="text-nowrap" translate="no">directory</code></a> в настоящее время поддерживаются только тогда, когда каталоги <a href="#drag-and-drop-support" class="font-weight-bold">дропнуты</a> при вводе файла. При выборе их в диалоговом окне «Обзор» они всегда будут иметь структуру плоского массива. Mozilla реализовала поведение <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1326031" target="_blank" rel="noopener">так же, как Chromium</a>.</p>'}}}]);