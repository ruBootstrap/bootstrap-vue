(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{453:function(n,t){n.exports={baseTOC:{top:"#form-datepicker",title:"Form Datepicker",toc:[{href:"#overview",label:"Overview"},{href:"#v-model-return-value",label:"v-model return value"},{href:"#disabled-and-readonly-states",label:"Disabled and readonly states"},{href:"#date-constraints",label:"Date constraints",toc:[{href:"#minimum-and-maximum-dates",label:"Minimum and maximum dates"},{href:"#disabling-dates",label:"Disabling dates"}]},{href:"#validation-states",label:"Validation states"},{href:"#styling",label:"Styling",toc:[{href:"#variants",label:"Variants"},{href:"#control-sizing",label:"Control sizing"},{href:"#placeholder",label:"Placeholder"},{href:"#optional-controls",label:"Optional controls"},{href:"#dropdown-placement",label:"Dropdown placement"},{href:"#initial-open-calendar-date",label:"Initial open calendar date"},{href:"#dark-mode",label:"Dark mode"},{href:"#optional-decade-navigation-buttons",label:"Optional decade navigation buttons"},{href:"#button-only-mode",label:"Button only mode"},{href:"#date-string-format",label:"Date string format"},{href:"#weekday-name-header-format",label:"Weekday name header format"},{href:"#date-navigation-button-slots",label:"Date navigation button slots"},{href:"#full-width-calendar-dropdown",label:"Full width calendar dropdown"}]},{href:"#internationalization",label:"Internationalization"},{href:"#accessibility",label:"Accessibility"},{href:"#implementation-notes",label:"Implementation notes"},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="form-datepicker" class="bv-no-focus-ring"><span class="bd-content-title">Form Datepicker</span></h1> <p class="bd-lead"><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> is a BootstrapVue custom date picker input form control, which provides full WAI-ARIA compliance and internationalization support.</p>',body:'<h2 id="overview" class="bv-no-focus-ring"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-labelledby="overview"></a></span></h2> <p>As a form control wrapper component for the <a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a> component, it provides additional validation state presentation and a compact interface. Native HTML5 date inputs vary in presentation, accessibility, and in some instances are not supported by all browsers. <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> provides a consistent and accessible interface across all browser platforms and devices.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-datepicker&quot;</span>&gt;</span>Choose a date<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-datepicker&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker.vue --&gt;</span></pre></div><p><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> supports many of the props available on <a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a> as well as some of the props available on <a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a>.</p> <h2 id="v-model-return-value" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">v-model</code> return value<a class="anchorjs-link" href="#v-model-return-value" aria-labelledby="v-model-return-value"></a></span></h2> <p>By default, <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> returns dates as a string in the <code class="text-nowrap" translate="no">YYYY-MM-DD</code> format, which is the same format returned by native browser <code class="text-nowrap" translate="no">&lt;input type=&quot;date&quot;&gt;</code> controls. You can have <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> return a <code class="text-nowrap" translate="no">Date</code> object (with no time portion) as the <code class="text-nowrap" translate="no">v-model</code> value instead by setting the <code class="text-nowrap" translate="no">value-as-date</code> prop.</p> <p>If no date is selected, <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> returns an empty string <code class="text-nowrap" translate="no">&#39;&#39;</code>, or returns <code class="text-nowrap" translate="no">null</code> if the <code class="text-nowrap" translate="no">value-as-date</code> prop is set.</p> <p>Note that when <code class="text-nowrap" translate="no">value-as-date</code> prop is set, the returned <code class="text-nowrap" translate="no">Date</code> object will be in the browser&#39;s default timezone.</p> <p>If <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> has a value set for the <code class="text-nowrap" translate="no">name</code> prop, a hidden input will be created which will have its name attribute set to the value of the <code class="text-nowrap" translate="no">name</code> prop, and the value attribute will be set to the selected date as a <code class="text-nowrap" translate="no">YYYY-MM-DD</code> string. This will allow the <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> selected value to be submitted via native browser form submission.</p> <h2 id="disabled-and-readonly-states" class="bv-no-focus-ring"><span class="bd-content-title">Disabled and readonly states<a class="anchorjs-link" href="#disabled-and-readonly-states" aria-labelledby="disabled-and-readonly-states"></a></span></h2> <p>Setting the <code class="text-nowrap" translate="no">disabled</code> prop will remove all interactivity of the <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> component.</p> <p>Setting the <code class="text-nowrap" translate="no">readonly</code> prop will disable selecting a date, but will keep the component interactive, allowing for date navigation. The <code class="text-nowrap" translate="no">v-model</code> will not be updated in the readonly state.</p> <p>For disabling specific dates or setting minimum and maximum date limits, refer to the <a href="#date-constraints" class="font-weight-bold">Date constraints</a> section.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Select date picker interactive state&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;state&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;readonly&quot;</span>&gt;</span>Readonly<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>Normal<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;disabled&quot;</span>\n      <span class="hljs-attr">:readonly</span>=<span class="hljs-string">&quot;readonly&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">state</span>: <span class="hljs-string">&#x27;disabled&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">disabled</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;disabled&#x27;</span>\n      },\n      <span class="hljs-function"><span class="hljs-title">readonly</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;readonly&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-disabled-readonly.vue --&gt;</span></pre></div><h2 id="date-constraints" class="bv-no-focus-ring"><span class="bd-content-title">Date constraints<a class="anchorjs-link" href="#date-constraints" aria-labelledby="date-constraints"></a></span></h2> <h3 id="minimum-and-maximum-dates" class="bv-no-focus-ring"><span class="bd-content-title">Minimum and maximum dates<a class="anchorjs-link" href="#minimum-and-maximum-dates" aria-labelledby="minimum-and-maximum-dates"></a></span></h3> <p>Restrict the calendar range via the <code class="text-nowrap" translate="no">min</code> and <code class="text-nowrap" translate="no">max</code> props. The props accept a date string in the format of <code class="text-nowrap" translate="no">YYYY-MM-DD</code> or a <code class="text-nowrap" translate="no">Date</code> object.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;min&quot;</span> <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;max&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n      <span class="hljs-keyword">const</span> today = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(now.getFullYear(), now.getMonth(), now.getDate())\n      <span class="hljs-comment">// 15th two months prior</span>\n      <span class="hljs-keyword">const</span> minDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(today)\n      minDate.setMonth(minDate.getMonth() - <span class="hljs-number">2</span>)\n      minDate.setDate(<span class="hljs-number">15</span>)\n      <span class="hljs-comment">// 15th in two months</span>\n      <span class="hljs-keyword">const</span> maxDate = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(today)\n      maxDate.setMonth(maxDate.getMonth() + <span class="hljs-number">2</span>)\n      maxDate.setDate(<span class="hljs-number">15</span>)\n\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">min</span>: minDate,\n        <span class="hljs-attr">max</span>: maxDate\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-min-max.vue --&gt;</span></pre></div><h3 id="disabling-dates" class="bv-no-focus-ring"><span class="bd-content-title">Disabling dates<a class="anchorjs-link" href="#disabling-dates" aria-labelledby="disabling-dates"></a></span></h3> <p>If you need to disable specific dates within the date picker, specify a function reference to the <code class="text-nowrap" translate="no">date-disabled-fn</code> prop. The function is passed two arguments:</p> <ul> <li><code class="text-nowrap" translate="no">ymd</code> The date as a <code class="text-nowrap" translate="no">YYYY-MM-DD</code> string</li> <li><code class="text-nowrap" translate="no">date</code> The date as a <code class="text-nowrap" translate="no">Date</code> object</li> </ul> <p>The function should either return <code class="text-nowrap" translate="no">true</code> if the date <em>cannot</em> be selected (disabled), or <code class="text-nowrap" translate="no">false</code> if the date <em>can</em> be selected (enabled). Note that the function <strong>cannot</strong> be asynchronous, and should return a value as quickly as possible.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:date-disabled-fn</span>=<span class="hljs-string">&quot;dateDisabled&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">dateDisabled</span>(<span class="hljs-params">ymd, date</span>)</span> {\n        <span class="hljs-comment">// Disable weekends (Sunday = `0`, Saturday = `6`) and</span>\n        <span class="hljs-comment">// disable days that fall on the 13th of the month</span>\n        <span class="hljs-keyword">const</span> weekday = date.getDay()\n        <span class="hljs-keyword">const</span> day = date.getDate()\n        <span class="hljs-comment">// Return `true` if the date should be disabled</span>\n        <span class="hljs-keyword">return</span> weekday === <span class="hljs-number">0</span> || weekday === <span class="hljs-number">6</span> || day === <span class="hljs-number">13</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-disabled-dates.vue --&gt;</span></pre></div><p>Note the <code class="text-nowrap" translate="no">min</code> and <code class="text-nowrap" translate="no">max</code> date constraints are evaluated first, before <code class="text-nowrap" translate="no">date-disabled-fn</code>.</p> <h2 id="validation-states" class="bv-no-focus-ring"><span class="bd-content-title">Validation states<a class="anchorjs-link" href="#validation-states" aria-labelledby="validation-states"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> supports invalid and valid styling via the boolean <code class="text-nowrap" translate="no">state</code> prop. Setting <code class="text-nowrap" translate="no">state</code> to boolean <code class="text-nowrap" translate="no">false</code> will style the input as invalid, while setting it to boolean <code class="text-nowrap" translate="no">true</code> will style it as valid. Setting <code class="text-nowrap" translate="no">state</code> to <code class="text-nowrap" translate="no">null</code> will not show any validation state styling (the default).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-invalid&quot;</span>&gt;</span>Choose a date (invalid style)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-invalid&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-valid&quot;</span>&gt;</span>Choose a date (valid style)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-valid&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-invalid-valid.vue --&gt;</span></pre></div><p>Note that native browser validation is <em>not</em> available with <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code>.</p> <h2 id="styling" class="bv-no-focus-ring"><span class="bd-content-title">Styling<a class="anchorjs-link" href="#styling" aria-labelledby="styling"></a></span></h2> <h3 id="variants" class="bv-no-focus-ring"><span class="bd-content-title">Variants<a class="anchorjs-link" href="#variants" aria-labelledby="variants"></a></span></h3> <p>The selected date button (background color) defaults to the <code class="text-nowrap" translate="no">&#39;primary&#39;</code> theme variant. You can change this to any of the Bootstrap v4 theme variant colors: <code class="text-nowrap" translate="no">&#39;secondary&#39;</code>, <code class="text-nowrap" translate="no">&#39;success&#39;</code>, <code class="text-nowrap" translate="no">&#39;danger&#39;</code>, <code class="text-nowrap" translate="no">&#39;warning&#39;</code>, <code class="text-nowrap" translate="no">&#39;info&#39;</code>, etc, via the <code class="text-nowrap" translate="no">selected-variant</code> prop.</p> <p>Today&#39;s date will also be highlighted (text color) using the same variant as the selected date by default. To specify a different theme color to use for today&#39;s date, use the <code class="text-nowrap" translate="no">today-variant</code> prop.</p> <p>To disable highlighting of today&#39;s date altogether, set the <code class="text-nowrap" translate="no">no-highlight-today</code> prop.</p> <p>The navigation buttons default to the <code class="text-nowrap" translate="no">&#39;secondary&#39;</code> theme variant. You can change this via the <code class="text-nowrap" translate="no">nav-button-variant</code> prop.</p> <h3 id="control-sizing" class="bv-no-focus-ring"><span class="bd-content-title">Control sizing<a class="anchorjs-link" href="#control-sizing" aria-labelledby="control-sizing"></a></span></h3> <p>Fancy a smaller or larger <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> control? Set the <code class="text-nowrap" translate="no">size</code> prop to <code class="text-nowrap" translate="no">&#39;sm&#39;</code> for a smaller form control, or <code class="text-nowrap" translate="no">&#39;lg&#39;</code> for a larger form form control. Note this does not affect the size of the popup calendar dialog.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-sm&quot;</span>&gt;</span>Small date picker<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-sm&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-lg&quot;</span>&gt;</span>Large date picker<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-lg&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-sizes.vue --&gt;</span></pre></div><h3 id="placeholder" class="bv-no-focus-ring"><span class="bd-content-title">Placeholder<a class="anchorjs-link" href="#placeholder" aria-labelledby="placeholder"></a></span></h3> <p>Add custom placeholder text to the control, when no date is selected, via the <code class="text-nowrap" translate="no">placeholder</code> prop. If a placeholder is not provided, the value of the <code class="text-nowrap" translate="no">label-no-date-selected</code> prop is used.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-placeholder&quot;</span>&gt;</span>Date picker with placeholder<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-placeholder&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Choose a date&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-placeholder.vue --&gt;</span></pre></div><h3 id="optional-controls" class="bv-no-focus-ring"><span class="bd-content-title">Optional controls<a class="anchorjs-link" href="#optional-controls" aria-labelledby="optional-controls"></a></span></h3> <p>Add optional control buttons to the bottom of the calendar popup via the props <code class="text-nowrap" translate="no">today-button</code>, <code class="text-nowrap" translate="no">reset-button</code> and <code class="text-nowrap" translate="no">close-button</code>.</p> <ul> <li>The today button selects today&#39;s date</li> <li>The reset button either clears the selected date, or sets the date to the value of the prop <code class="text-nowrap" translate="no">reset-value</code> (if provided)</li> <li>The close button closes the calendar popup</li> </ul> <p>By default, clicking on the today or reset button will also close the calendar popup, unless the prop <code class="text-nowrap" translate="no">no-close-on-select</code> is set.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-buttons&quot;</span>&gt;</span>Date picker with optional footer buttons<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-buttons&quot;</span>\n      <span class="hljs-attr">today-button</span>\n      <span class="hljs-attr">reset-button</span>\n      <span class="hljs-attr">close-button</span>\n      <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-buttons.vue --&gt;</span></pre></div><p>The text for the optional buttons can be set via the <code class="text-nowrap" translate="no">label-today-button</code>, <code class="text-nowrap" translate="no">label-reset-button</code>, and the <code class="text-nowrap" translate="no">label-close-button</code> props. Due to the limited width of the footer section, it is recommended to keep these labels short.</p> <p>Note that the <code class="text-nowrap" translate="no">Set Today</code> button may not set the control today&#39;s date, if today&#39;s date is outside of the <code class="text-nowrap" translate="no">min</code> or <code class="text-nowrap" translate="no">max</code> date range restrictions. In the case it is outside of the range, it will set to either <code class="text-nowrap" translate="no">min</code> or <code class="text-nowrap" translate="no">max</code> (depending on which is closes to today&#39;s date).</p> <h3 id="dropdown-placement" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown placement<a class="anchorjs-link" href="#dropdown-placement" aria-labelledby="dropdown-placement"></a></span></h3> <p>Use the dropdown props <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">dropup</code>, <code class="text-nowrap" translate="no">dropright</code>, <code class="text-nowrap" translate="no">dropleft</code>, <code class="text-nowrap" translate="no">no-flip</code>, and <code class="text-nowrap" translate="no">offset</code> to control the positioning of the popup calendar.</p> <p>Refer to the <a href="/docs/components/dropdown#positioning" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> positioning section</a> for details on the effects and usage of these props.</p> <h3 id="initial-open-calendar-date" class="bv-no-focus-ring"><span class="bd-content-title">Initial open calendar date<a class="anchorjs-link" href="#initial-open-calendar-date" aria-labelledby="initial-open-calendar-date"></a></span></h3> <p><span class="badge badge-info small">v2.7.0+</span></p> <p>By default, when no date is selected, the calendar view will be set to the current month (or the <code class="text-nowrap" translate="no">min</code> or <code class="text-nowrap" translate="no">max</code> date if today&#39;s date is out of range of <code class="text-nowrap" translate="no">min</code> or <code class="text-nowrap" translate="no">max</code>) when opened. You can change this behaviour by specifying a date via the <code class="text-nowrap" translate="no">initial-date</code> prop. The initial date prop will be used to determine the calendar month to be initially presented to the user. It does not set the component&#39;s value.</p> <h3 id="dark-mode" class="bv-no-focus-ring"><span class="bd-content-title">Dark mode<a class="anchorjs-link" href="#dark-mode" aria-labelledby="dark-mode"></a></span></h3> <p>Want a fancy popup with a dark background instead of a light background? Set the <code class="text-nowrap" translate="no">dark</code> prop to <code class="text-nowrap" translate="no">true</code> to enable the dark background.</p> <h3 id="optional-decade-navigation-buttons" class="bv-no-focus-ring"><span class="bd-content-title">Optional decade navigation buttons<a class="anchorjs-link" href="#optional-decade-navigation-buttons" aria-labelledby="optional-decade-navigation-buttons"></a></span></h3> <p>Set the prop <code class="text-nowrap" translate="no">show-decade-nav</code> to enable the previous and next decade buttons in the datepicker&#39;s date navigation toolbar.</p> <p>The props <code class="text-nowrap" translate="no">label-prev-decade</code> and <code class="text-nowrap" translate="no">label-next-decade</code> props can be used to provide custom label text for the decade buttons.</p> <p>For example usage, refer to the <a href="#internationalization" class="font-weight-bold">Internationalization section</a> below.</p> <h3 id="button-only-mode" class="bv-no-focus-ring"><span class="bd-content-title">Button only mode<a class="anchorjs-link" href="#button-only-mode" aria-labelledby="button-only-mode"></a></span></h3> <p><span class="badge badge-info small">v2.7.0+</span></p> <p>Fancy just a button that launches the date picker dialog, or want to provide your own optional text input field? Use the <code class="text-nowrap" translate="no">button-only</code> prop to render the datepicker as a dropdown button. The formatted date label will be rendered with the class <code class="text-nowrap" translate="no">sr-only</code> (available only to screen readers).</p> <p>In the following simple example, we are placing the datepicker (button only mode) as an append to a <code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code>, and we are using the <code class="text-nowrap" translate="no">context</code> event to get the formatted date string and value:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-input&quot;</span>&gt;</span>Choose a date<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-input&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;YYYY-MM-DD&quot;</span>\n        <span class="hljs-attr">autocomplete</span>=<span class="hljs-string">&quot;off&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n          <span class="hljs-attr">button-only</span>\n          <span class="hljs-attr">right</span>\n          <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en-US&quot;</span>\n          <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;example-input&quot;</span>\n          @<span class="hljs-attr">context</span>=<span class="hljs-string">&quot;onContext&quot;</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>Selected: &#x27;{{ selected }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Formatted: &#x27;{{ formatted }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">formatted</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">onContext</span>(<span class="hljs-params">ctx</span>)</span> {\n        <span class="hljs-comment">// The date formatted in the locale, or the `label-no-date-selected` string</span>\n        <span class="hljs-built_in">this</span>.formatted = ctx.selectedFormatted\n        <span class="hljs-comment">// The following will be an empty string until a valid date is entered</span>\n        <span class="hljs-built_in">this</span>.selected = ctx.selectedYMD\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-button-only.vue --&gt;</span></pre></div><p>Control the size of the button via the <code class="text-nowrap" translate="no">size</code> prop, and the button variant via the <code class="text-nowrap" translate="no">button-variant</code> prop.</p> <h3 id="date-string-format" class="bv-no-focus-ring"><span class="bd-content-title">Date string format<a class="anchorjs-link" href="#date-string-format" aria-labelledby="date-string-format"></a></span></h3> <p><span class="badge badge-info small">v2.6.0+</span></p> <p>To change format options of the displayed date text inside the component, e.g. in the header or placeholder, set the <code class="text-nowrap" translate="no">date-format-options</code> prop to an object containing the requested format properties for the <code class="text-nowrap" translate="no">Intl.DateTimeFormat</code> object (see also <a href="#internationalization" class="font-weight-bold">Internationalization</a>).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-dateformat1&quot;</span>&gt;</span>Custom date format<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-dateformat1&quot;</span>\n      <span class="hljs-attr">:date-format-options</span>=<span class="hljs-string">&quot;{ year: &#x27;numeric&#x27;, month: &#x27;short&#x27;, day: &#x27;2-digit&#x27;, weekday: &#x27;short&#x27; }&quot;</span>\n      <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-dateformat2&quot;</span>&gt;</span>Short date format<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-dateformat2&quot;</span>\n      <span class="hljs-attr">:date-format-options</span>=<span class="hljs-string">&quot;{ year: &#x27;numeric&#x27;, month: &#x27;numeric&#x27;, day: &#x27;numeric&#x27; }&quot;</span>\n      <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-dateformat.vue --&gt;</span></pre></div><p>The following table summarizes the valid options for each format property:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property</th> <th>Possible values</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">year</code></td> <td><code class="text-nowrap" translate="no">&#39;numeric&#39;</code>, or <code class="text-nowrap" translate="no">&#39;2-digit&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">month</code></td> <td><code class="text-nowrap" translate="no">&#39;numeric&#39;</code>, <code class="text-nowrap" translate="no">&#39;2-digit&#39;</code>, <code class="text-nowrap" translate="no">&#39;long&#39;</code>, <code class="text-nowrap" translate="no">&#39;short&#39;</code>, or <code class="text-nowrap" translate="no">&#39;narrow&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">day</code></td> <td><code class="text-nowrap" translate="no">&#39;numeric&#39;</code>, or <code class="text-nowrap" translate="no">&#39;2-digit&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">weekday</code></td> <td><code class="text-nowrap" translate="no">&#39;long&#39;</code>, <code class="text-nowrap" translate="no">&#39;short&#39;</code>, or <code class="text-nowrap" translate="no">&#39;narrow&#39;</code></td> </tr> </tbody></table> </div><p>Notes:</p> <ul> <li>Leaving out certain options may affect the formatted text string, e.g. the <code class="text-nowrap" translate="no">weekday</code></li> <li>The formatted value will vary according to the resolved locale. Some locales may not support the <code class="text-nowrap" translate="no">&#39;narrow&#39;</code> format and will fall back to <code class="text-nowrap" translate="no">&#39;short&#39;</code> or <code class="text-nowrap" translate="no">long&#39;</code> (if <code class="text-nowrap" translate="no">&#39;short&#39;</code> is not available)</li> <li><code class="text-nowrap" translate="no">year</code>, <code class="text-nowrap" translate="no">month</code> and <code class="text-nowrap" translate="no">day</code> will always be shown. If you need to leave out a value, set the property to <code class="text-nowrap" translate="no">undefined</code>, although this is highly discouraged for accessibility reasons</li> </ul> <h3 id="weekday-name-header-format" class="bv-no-focus-ring"><span class="bd-content-title">Weekday name header format<a class="anchorjs-link" href="#weekday-name-header-format" aria-labelledby="weekday-name-header-format"></a></span></h3> <p><span class="badge badge-info small">2.12.0+</span></p> <p>The calendar weekday name header format defaults to <code class="text-nowrap" translate="no">&#39;short&#39;</code>, which is typically a three-character abbreviation of the weekday, although some <a href="#internationalization" class="font-weight-bold">locales</a> may override this. The format can be controlled via the prop <code class="text-nowrap" translate="no">weekday-header-format</code> and accepts one of three values:</p> <ul> <li><code class="text-nowrap" translate="no">&#39;long&#39;</code> the full weekday name (e.g. <samp class="notranslate" translate="no">Tuesday</samp>). Handy when using a full width calendar. Avoid using with the default calendar width.</li> <li><code class="text-nowrap" translate="no">&#39;short&#39;</code> typically is a 2 or 3 letter abbreviation of the weekday name, depending on the selected locale (e.g. &quot;Tue&quot;).</li> <li><code class="text-nowrap" translate="no">&#39;narrow&#39;</code> is typically a single character abbreviation (e.g., <samp class="notranslate" translate="no">T</samp>). Two weekdays may have the same narrow style for some locales (e.g. Tuesday and Thursday&#39;s narrow style are both <samp class="notranslate" translate="no">T</samp>). This can be handy for those locales that do not support the <code class="text-nowrap" translate="no">&#39;short&#39;</code> format, such as locales <code class="text-nowrap" translate="no">&#39;ar&#39;</code> and <code class="text-nowrap" translate="no">&#39;fa&#39;</code>.</li> </ul> <h3 id="date-navigation-button-slots" class="bv-no-focus-ring"><span class="bd-content-title">Date navigation button slots<a class="anchorjs-link" href="#date-navigation-button-slots" aria-labelledby="date-navigation-button-slots"></a></span></h3> <p><span class="badge badge-info small">2.12.0+</span></p> <p>To change the content of the calendar&#39;s date navigation buttons, BootstrapVue provides scoped slots for each button:</p> <ul> <li><code class="text-nowrap" translate="no">&#39;nav-prev-decade&#39;</code></li> <li><code class="text-nowrap" translate="no">&#39;nav-prev-year&#39;</code></li> <li><code class="text-nowrap" translate="no">&#39;nav-prev-month&#39;</code></li> <li><code class="text-nowrap" translate="no">&#39;nav-this-month&#39;</code> (the go to selected/today button)</li> <li><code class="text-nowrap" translate="no">&#39;nav-next-month&#39;</code></li> <li><code class="text-nowrap" translate="no">&#39;nav-next-year&#39;</code></li> <li><code class="text-nowrap" translate="no">&#39;nav-next-decade&#39;</code></li> </ul> <p>All seven slots have the same scoped property available:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">isRTL</code></td> <td>Boolean</td> <td>Will be <code class="text-nowrap" translate="no">true</code> when the date navigation bar is rendered right-to-left</td> </tr> </tbody></table> </div><p>You can use the <code class="text-nowrap" translate="no">isRTL</code> scoped property to &quot;flip&quot; the prev vs next button content to handle the left-to-right to right-to-left orientation change &mdash; i.e. the previous year button will be on the right when <code class="text-nowrap" translate="no">isRTL</code> is <code class="text-nowrap" translate="no">true</code>, instead of the left.</p> <h3 id="full-width-calendar-dropdown" class="bv-no-focus-ring"><span class="bd-content-title">Full width calendar dropdown<a class="anchorjs-link" href="#full-width-calendar-dropdown" aria-labelledby="full-width-calendar-dropdown"></a></span></h3> <p>To create a full width calendar dropdown (where the width matches the input width), simply set the <code class="text-nowrap" translate="no">menu-class</code> prop to <code class="text-nowrap" translate="no">&#39;w-100&#39;</code> and set the <code class="text-nowrap" translate="no">calendar-width</code> prop to <code class="text-nowrap" translate="no">&#39;100%&#39;</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;datepicker-full-width&quot;</span>&gt;</span>Choose a date<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-full-width&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n      <span class="hljs-attr">menu-class</span>=<span class="hljs-string">&quot;w-100&quot;</span>\n      <span class="hljs-attr">calendar-width</span>=<span class="hljs-string">&quot;100%&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-full-width.vue --&gt;</span></pre></div><h2 id="internationalization" class="bv-no-focus-ring"><span class="bd-content-title">Internationalization<a class="anchorjs-link" href="#internationalization" aria-labelledby="internationalization"></a></span></h2> <p>Internationalization of the date picker&#39;s calendar is provided via <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">Intl.DateTimeFormat</code></a>, except for labels applied to elements of the calendar control (aria-labels, selected status, and help text). You must provide your own translations for these labels. The available locales will be browser dependent (not all browsers support all locales)</p> <p>By default <code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> will use the browser&#39;s default locale, but you can specify the locale (or locales) to use via the <code class="text-nowrap" translate="no">locale</code> prop. The prop accepts either a single locale string, or an array of locale strings (listed in order of preferred locale).</p> <p>The calendar starts the week on Sunday. This can be changed by setting the <code class="text-nowrap" translate="no">start-weekday</code> prop to a number in the range of <code class="text-nowrap" translate="no">0</code> to <code class="text-nowrap" translate="no">6</code> where <code class="text-nowrap" translate="no">0</code> represents Sunday, <code class="text-nowrap" translate="no">1</code> for Monday, up to <code class="text-nowrap" translate="no">6</code> for Saturday.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-locales&quot;</span>&gt;</span>Locale:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-locales&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;locale&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;locales&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-weekdays&quot;</span>&gt;</span>Start weekday:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-weekdays&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;weekday&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;weekdays&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;showDecadeNav&quot;</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">inline</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>\n        Show decade navigation buttons\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;hideHeader&quot;</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">inline</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>\n        Hide calendar header\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-i18n-picker&quot;</span>&gt;</span>Date picker:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-i18n-picker&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n      <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;labels[locale] || {}&quot;</span>\n      <span class="hljs-attr">:locale</span>=<span class="hljs-string">&quot;locale&quot;</span>\n      <span class="hljs-attr">:start-weekday</span>=<span class="hljs-string">&quot;weekday&quot;</span>\n      <span class="hljs-attr">:show-decade-nav</span>=<span class="hljs-string">&quot;showDecadeNav&quot;</span>\n      <span class="hljs-attr">:hide-header</span>=<span class="hljs-string">&quot;hideHeader&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>\n     &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datepicker</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>&#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">locale</span>: <span class="hljs-string">&#x27;en-US&#x27;</span>,\n        <span class="hljs-attr">showDecadeNav</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">hideHeader</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">locales</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;English US (en-US)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;de&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;German (de)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;ar-EG&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Arabic Egyptian (ar-EG)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Chinese (zh)&#x27;</span> }\n        ],\n        <span class="hljs-attr">weekday</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">weekdays</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Sunday&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Monday&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Saturday&#x27;</span> }\n        ],\n        <span class="hljs-attr">labels</span>: {\n          <span class="hljs-attr">de</span>: {\n            <span class="hljs-attr">labelPrevDecade</span>: <span class="hljs-string">&#x27;Vorheriges Jahrzehnt&#x27;</span>,\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">&#x27;Vorheriges Jahr&#x27;</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">&#x27;Vorheriger Monat&#x27;</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">&#x27;Aktueller Monat&#x27;</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">&#x27;Nächster Monat&#x27;</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">&#x27;Nächstes Jahr&#x27;</span>,\n            <span class="hljs-attr">labelNextDecade</span>: <span class="hljs-string">&#x27;Nächstes Jahrzehnt&#x27;</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">&#x27;Heute&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;Ausgewähltes Datum&#x27;</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">&#x27;Kein Datum gewählt&#x27;</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">&#x27;Kalender&#x27;</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">&#x27;Kalendernavigation&#x27;</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">&#x27;Mit den Pfeiltasten durch den Kalender navigieren&#x27;</span>\n          },\n          <span class="hljs-string">&#x27;ar-EG&#x27;</span>: {\n            <span class="hljs-attr">weekdayHeaderFormat</span>: <span class="hljs-string">&#x27;narrow&#x27;</span>,\n            <span class="hljs-attr">labelPrevDecade</span>: <span class="hljs-string">&#x27;العقد السابق&#x27;</span>,\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">&#x27;العام السابق&#x27;</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">&#x27;الشهر السابق&#x27;</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">&#x27;الشهر الحالي&#x27;</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">&#x27;الشهر المقبل&#x27;</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">&#x27;العام المقبل&#x27;</span>,\n            <span class="hljs-attr">labelNextDecade</span>: <span class="hljs-string">&#x27;العقد القادم&#x27;</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">&#x27;اليوم&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;التاريخ المحدد&#x27;</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">&#x27;لم يتم اختيار تاريخ&#x27;</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">&#x27;التقويم&#x27;</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">&#x27;الملاحة التقويم&#x27;</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">&#x27;استخدم مفاتيح المؤشر للتنقل في التواريخ&#x27;</span>\n          },\n          <span class="hljs-attr">zh</span>: {\n            <span class="hljs-attr">weekdayHeaderFormat</span>: <span class="hljs-string">&#x27;narrow&#x27;</span>,\n            <span class="hljs-attr">labelPrevDecade</span>: <span class="hljs-string">&#x27;过去十年&#x27;</span>,\n            <span class="hljs-attr">labelPrevYear</span>: <span class="hljs-string">&#x27;上一年&#x27;</span>,\n            <span class="hljs-attr">labelPrevMonth</span>: <span class="hljs-string">&#x27;上个月&#x27;</span>,\n            <span class="hljs-attr">labelCurrentMonth</span>: <span class="hljs-string">&#x27;当前月份&#x27;</span>,\n            <span class="hljs-attr">labelNextMonth</span>: <span class="hljs-string">&#x27;下个月&#x27;</span>,\n            <span class="hljs-attr">labelNextYear</span>: <span class="hljs-string">&#x27;明年&#x27;</span>,\n            <span class="hljs-attr">labelNextDecade</span>: <span class="hljs-string">&#x27;下一个十年&#x27;</span>,\n            <span class="hljs-attr">labelToday</span>: <span class="hljs-string">&#x27;今天&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;选定日期&#x27;</span>,\n            <span class="hljs-attr">labelNoDateSelected</span>: <span class="hljs-string">&#x27;未选择日期&#x27;</span>,\n            <span class="hljs-attr">labelCalendar</span>: <span class="hljs-string">&#x27;日历&#x27;</span>,\n            <span class="hljs-attr">labelNav</span>: <span class="hljs-string">&#x27;日历导航&#x27;</span>,\n            <span class="hljs-attr">labelHelp</span>: <span class="hljs-string">&#x27;使用光标键浏览日期&#x27;</span>\n          }\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datepicker-i18n.vue --&gt;</span></pre></div><p>You can listen to for the <code class="text-nowrap" translate="no">context</code> event to determine the locale and directionality that the calendar has resolved to.</p> <p>Refer to the <a href="/docs/components/calendar#internationalization" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a> documentation for additional details.</p> <h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p>The popup calendar supports the same <a href="/docs/components/calendar#accessibility" class="font-weight-bold">keyboard controls as <code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a>, along with the following:</p> <ul> <li><kbd class="notranslate" translate="no">Esc</kbd> will close the popup calendar without selecting a date</li> </ul> <p>When internationalizing the datepicker, it is important to also update the <code class="text-nowrap" translate="no">label-*</code> props with appropriate translated strings, so that international screen reader users will hear the correct prompts and descriptions.</p> <p>Refer to the <a href="/docs/components/calendar#accessibility" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a> documentation for additional details.</p> <h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> is based upon the components <a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code></a> and <a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a>.</p> <p><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> uses Bootstrap&#39;s border and flex utility classes, along with button (<code class="text-nowrap" translate="no">btn-*</code>) classes, dropdown (<code class="text-nowrap" translate="no">dropdown*</code>) classes, and the <code class="text-nowrap" translate="no">form-control*</code> (plus validation) classes. BootstrapVue&#39;s Custom SCSS/CSS is also required for proper styling of the date picker and calendar.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/components/form-timepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> Time picker custom form input</a></li> <li><a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code> Calendar date selection widget</a></li> <li><a href="/docs/components/time" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> Time selection widget</a></li> <li><a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> Dropdown component</a></li> </ul>'}}}]);