(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{592:function(t,n){t.exports={baseTOC:{top:"#sidebar",title:"Sidebar",toc:[{href:"#overview",label:"Overview"},{href:"#styling",label:"Styling",toc:[{href:"#title",label:"Title"},{href:"#placement",label:"Placement"},{href:"#variants",label:"Variants"},{href:"#shadow",label:"Shadow"},{href:"#borders",label:"Borders"},{href:"#width",label:"Width"},{href:"#padding",label:"Padding"},{href:"#disable-slide-transition",label:"Disable slide transition"},{href:"#z-index",label:"Z-index"},{href:"#scoped-default-slot",label:"Scoped default slot"},{href:"#header",label:"Header"},{href:"#footer",label:"Footer"},{href:"#lazy-rendering",label:"Lazy rendering"},{href:"#backdrop",label:"Backdrop"}]},{href:"#visibility-control",label:"Visibility control",toc:[{href:"#v-b-toggle-directive",label:"v-b-toggle directive"},{href:"#v-model",label:"v-model"},{href:"#closing-on-route-change",label:"Closing on $route change"}]},{href:"#events",label:"Events"},{href:"#accessibility",label:"Accessibility"},{href:"#implementation-notes",label:"Implementation notes"},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="sidebar" class="bv-no-focus-ring"><span class="bd-content-title">Sidebar</span></h1> <p class="bd-lead">Otherwise known as off-canvas or a side drawer, BootstrapVue&#39;s custom <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> component is a fixed-position toggleable slide out box, which can be used for navigation, menus, details, etc. It can be positioned on either the left (default) or right of the viewport, with optional backdrop support.</p>',body:'<h2 id="overview" class="bv-no-focus-ring"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-labelledby="overview"></a></span></h2> <p>You can place almost any content inside the <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> <a href="#scoped-default-slot" class="font-weight-bold">optionally scoped default slot</a>, such as text, buttons, forms, images, or <a href="/docs/components/nav#vertical-variation" class="font-weight-bold">vertical navs</a>.</p> <p>The component supports a header and built in close button, of which you can optionally disable and provide your own header (if needed), and can be easily toggled with our <a href="/docs/directives/toggle" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a>.</p> <p>The component has minimal default styling, which provides you with great flexibility in laying out the content of the sidebar.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-1</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Sidebar&quot;</span> <span class="hljs-attr">shadow</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/500/500/?image=54&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">thumbnail</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar.vue --&gt;</span></pre></div><p>If the content is taller than the available viewport height, vertical scrolling will automatically be enabled via CSS on the body of the sidebar.</p> <h2 id="styling" class="bv-no-focus-ring"><span class="bd-content-title">Styling<a class="anchorjs-link" href="#styling" aria-labelledby="styling"></a></span></h2> <p>Several props are provided for controlling the appearance of the sidebar.</p> <h3 id="title" class="bv-no-focus-ring"><span class="bd-content-title">Title<a class="anchorjs-link" href="#title" aria-labelledby="title"></a></span></h3> <p>Sidebars should have a title (specifically for accessibility reasons). Easily set the title that appears in the header either via the <code class="text-nowrap" translate="no">title</code> prop or the <code class="text-nowrap" translate="no">title</code> slot. Note the <code class="text-nowrap" translate="no">title</code> slot takes precedence over the <code class="text-nowrap" translate="no">title</code> prop.</p> <p>If the <a href="#hiding-the-header" class="font-weight-bold"><code class="text-nowrap" translate="no">no-header</code> prop</a> is set, then neither the <code class="text-nowrap" translate="no">title</code> prop or <code class="text-nowrap" translate="no">title</code> slot have any effect.</p> <p>If you do not provide a title, use either the <code class="text-nowrap" translate="no">aria-label</code> or <code class="text-nowrap" translate="no">aria-labelledby</code> props to provide an accessible title for the sidebar. See the <a href="#accessibility" class="font-weight-bold">Accessibility section</a> below for additional details.</p> <h3 id="placement" class="bv-no-focus-ring"><span class="bd-content-title">Placement<a class="anchorjs-link" href="#placement" aria-labelledby="placement"></a></span></h3> <p>By default the sidebar will be placed on the left side of the viewport. Set the <code class="text-nowrap" translate="no">right</code> prop to <code class="text-nowrap" translate="no">true</code> to have the sidebar appear on the right side of the viewport.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-right</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-right&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Sidebar&quot;</span> <span class="hljs-attr">right</span> <span class="hljs-attr">shadow</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/500/500/?image=54&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">thumbnail</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-right.vue --&gt;</span></pre></div><h3 id="variants" class="bv-no-focus-ring"><span class="bd-content-title">Variants<a class="anchorjs-link" href="#variants" aria-labelledby="variants"></a></span></h3> <p>Use the props <code class="text-nowrap" translate="no">bg-variant</code> and <code class="text-nowrap" translate="no">text-variant</code> to control the theme color variant of the background and text, respectively. Alternatively, you can apply styles or classes to specify the background and text colors.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-variant</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-variant&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Sidebar&quot;</span> <span class="hljs-attr">bg-variant</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">text-variant</span>=<span class="hljs-string">&quot;light&quot;</span> <span class="hljs-attr">shadow</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/500/500/?image=54&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">thumbnail</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-variant.vue --&gt;</span></pre></div><p>The standard Bootstrap theme variants are <code class="text-nowrap" translate="no">&#39;white&#39;</code>, <code class="text-nowrap" translate="no">&#39;light&#39;</code>, <code class="text-nowrap" translate="no">&#39;dark&#39;</code>, <code class="text-nowrap" translate="no">&#39;primary&#39;</code>, <code class="text-nowrap" translate="no">&#39;secondary&#39;</code>, <code class="text-nowrap" translate="no">&#39;success&#39;</code>, <code class="text-nowrap" translate="no">&#39;danger&#39;</code>, <code class="text-nowrap" translate="no">&#39;warning&#39;</code>, and <code class="text-nowrap" translate="no">&#39;info&#39;</code>.</p> <p>The default background variant is <code class="text-nowrap" translate="no">&#39;light&#39;</code> and the default text variant is <code class="text-nowrap" translate="no">&#39;dark&#39;</code>.</p> <h3 id="shadow" class="bv-no-focus-ring"><span class="bd-content-title">Shadow<a class="anchorjs-link" href="#shadow" aria-labelledby="shadow"></a></span></h3> <p>Prefer a sidebar with a backdrop shadow? Set the <code class="text-nowrap" translate="no">shadow</code> prop to either boolean <code class="text-nowrap" translate="no">true</code> for a medium shadow, <code class="text-nowrap" translate="no">&#39;sm&#39;</code> for a small shadow, or <code class="text-nowrap" translate="no">&#39;lg&#39;</code> for a larger shadow. Set it to <code class="text-nowrap" translate="no">false</code> (the default) for no shadow.</p> <h3 id="borders" class="bv-no-focus-ring"><span class="bd-content-title">Borders<a class="anchorjs-link" href="#borders" aria-labelledby="borders"></a></span></h3> <p>By default, <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> has no borders. Use <a href="/docs/reference/utility-classes" class="font-weight-bold">border utility classes</a> to add border(s) to <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> (via the <code class="text-nowrap" translate="no">sidebar-class</code> prop <span class="badge badge-secondary">2.12.0+</span>), or use CSS style overrides.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-border</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-border&quot;</span> <span class="hljs-attr">sidebar-class</span>=<span class="hljs-string">&quot;border-right border-danger&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/500/500/?image=54&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">thumbnail</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-border.vue --&gt;</span></pre></div><h3 id="width" class="bv-no-focus-ring"><span class="bd-content-title">Width<a class="anchorjs-link" href="#width" aria-labelledby="width"></a></span></h3> <p>By default the width of <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> is set to <code class="text-nowrap" translate="no">320px</code> (100% on &#39;xs&#39; screens). Simply provide a value via the <code class="text-nowrap" translate="no">width</code> prop (i.e. <code class="text-nowrap" translate="no">&#39;180px&#39;</code>, <code class="text-nowrap" translate="no">&#39;20em&#39;</code>, etc.) to override this default. The max width is set to <code class="text-nowrap" translate="no">100%</code> via CSS.</p> <h3 id="padding" class="bv-no-focus-ring"><span class="bd-content-title">Padding<a class="anchorjs-link" href="#padding" aria-labelledby="padding"></a></span></h3> <p>The sidebar by default has no padding. You can apply padding utility classes to the component, or margin/padding utility classes to the content of the sidebar.</p> <h3 id="disable-slide-transition" class="bv-no-focus-ring"><span class="bd-content-title">Disable slide transition<a class="anchorjs-link" href="#disable-slide-transition" aria-labelledby="disable-slide-transition"></a></span></h3> <p>By default the sidebar will use a sliding transition when showing and hiding. You can disable the slide transition via the <code class="text-nowrap" translate="no">no-slide</code> prop.</p> <p><strong>Note:</strong> The BootstrapVue defined transition effect of this component is dependent on the <code class="text-nowrap" translate="no">prefers-reduced-motion</code> media query. See the <a href="/docs/reference/accessibility" class="font-weight-bold">reduced motion section of our accessibility documentation</a> for additional details.</p> <p>When disabling the slide transition, the fade transition of the <a href="#backdrop" class="font-weight-bold">optional backdrop</a> will also be disabled.</p> <h3 id="z-index" class="bv-no-focus-ring"><span class="bd-content-title">Z-index<a class="anchorjs-link" href="#z-index" aria-labelledby="z-index"></a></span></h3> <p>The sidebar has a default <code class="text-nowrap" translate="no">z-index</code> defined in SCSS/CSS. In some situations you may need to use a different <code class="text-nowrap" translate="no">z-index</code> to ensure the sidebar appears over or under other content. You can do so either via CSS styles, or via the <code class="text-nowrap" translate="no">z-index</code> prop.</p> <h3 id="scoped-default-slot" class="bv-no-focus-ring"><span class="bd-content-title">Scoped default slot<a class="anchorjs-link" href="#scoped-default-slot" aria-labelledby="scoped-default-slot"></a></span></h3> <p>The <code class="text-nowrap" translate="no">default</code> slot allows you to provide the body content for your sidebar. It is optionally scoped. The examples in the following sections demonstrate the use of the default slot scope</p> <p>You can apply arbitrary classes to the body section via the <code class="text-nowrap" translate="no">body-class</code> prop.</p> <h3 id="header" class="bv-no-focus-ring"><span class="bd-content-title">Header<a class="anchorjs-link" href="#header" aria-labelledby="header"></a></span></h3> <p>By default, <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> has a header with optional title and a close button. You can supply a title via the <code class="text-nowrap" translate="no">title</code> prop, or via the optionally scoped slot <code class="text-nowrap" translate="no">title</code>.</p> <p>If you want to provide a completely custom header, you can use the optionally scoped <code class="text-nowrap" translate="no">header</code> slot.</p> <p>You can apply arbitrary classes to the header section via the <code class="text-nowrap" translate="no">header-class</code> prop, to override the default padding, etc.</p> <h4 id="hiding-the-default-header" class="bv-no-focus-ring"><span class="bd-content-title">Hiding the default header<a class="anchorjs-link" href="#hiding-the-default-header" aria-labelledby="hiding-the-default-header"></a></span></h4> <p>You can disable the default header (including the close button) via the <code class="text-nowrap" translate="no">no-header</code> prop. Note that you will need to provide a method of closing the sidebar. The <code class="text-nowrap" translate="no">default</code> slot is scoped, which includes a <code class="text-nowrap" translate="no">hide()</code> method that can be used to close the sidebar.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-no-header</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-no-header&quot;</span> <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">&quot;sidebar-no-header-title&quot;</span> <span class="hljs-attr">no-header</span> <span class="hljs-attr">shadow</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;{ hide }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-3&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-no-header-title&quot;</span>&gt;</span>Custom header sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">vertical</span>&gt;</span>\n              <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n              <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#link-1&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n              <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#link-2&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n            <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Close Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-no-header.vue --&gt;</span></pre></div><h3 id="footer" class="bv-no-focus-ring"><span class="bd-content-title">Footer<a class="anchorjs-link" href="#footer" aria-labelledby="footer"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> provides a <code class="text-nowrap" translate="no">footer</code> slot (optionally scoped), to allow you to provide content that appears at the bottom of the sidebar. The <code class="text-nowrap" translate="no">footer</code> slot is scoped, which includes a <code class="text-nowrap" translate="no">hide()</code> method that can be used to close the sidebar.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-footer</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-footer&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Sidebar with custom footer&quot;</span> <span class="hljs-attr">no-header</span> <span class="hljs-attr">shadow</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">footer</span>=<span class="hljs-string">&quot;{ hide }&quot;</span>&gt;</span>\n       <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-flex bg-dark text-light align-items-center px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">strong</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-auto&quot;</span>&gt;</span>Footer<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>Close<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n       <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/500/500/?image=54&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">thumbnail</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-footer.vue --&gt;</span></pre></div><p>You can apply arbitrary classes to the footer section via the <code class="text-nowrap" translate="no">footer-class</code> prop.</p> <h3 id="lazy-rendering" class="bv-no-focus-ring"><span class="bd-content-title">Lazy rendering<a class="anchorjs-link" href="#lazy-rendering" aria-labelledby="lazy-rendering"></a></span></h3> <p>In some instances, you may not want the content rendered when the sidebar is not visible. Simply set the <code class="text-nowrap" translate="no">lazy</code> prop on <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code>. When <code class="text-nowrap" translate="no">lazy</code> is <code class="text-nowrap" translate="no">true</code>, the body and optional footer will <em>not</em> be rendered (removed from DOM) whenever the sidebar is closed.</p> <h3 id="backdrop" class="bv-no-focus-ring"><span class="bd-content-title">Backdrop<a class="anchorjs-link" href="#backdrop" aria-labelledby="backdrop"></a></span></h3> <p><span class="badge badge-info small">2.12.0+</span></p> <p>Add a basic backdrop when the side bar is open via the <code class="text-nowrap" translate="no">backdrop</code> prop. When set to <code class="text-nowrap" translate="no">true</code>, the sidebar will show an opaque backdrop. Clicking on the backdrop will close the sidebar, unless the <code class="text-nowrap" translate="no">no-close-on-backdrop</code> prop is set to <code class="text-nowrap" translate="no">true</code>.</p> <p>Optionally (as of BootstrapVue v2.15.0+) you can use the <code class="text-nowrap" translate="no">backdrop-variant</code> prop to control the theme color variant of the backdrop. The default backdrop variant is <code class="text-nowrap" translate="no">dark</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-toggle.sidebar-backdrop</span>&gt;</span>Toggle Sidebar<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-sidebar</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;sidebar-backdrop&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Sidebar with backdrop&quot;</span>\n      <span class="hljs-attr">:backdrop-variant</span>=<span class="hljs-string">&quot;variant&quot;</span>\n      <span class="hljs-attr">backdrop</span>\n      <span class="hljs-attr">shadow</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;px-3 py-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Backdrop variant&quot;</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;backdrop-variant&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;backdrop-variant&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;variant&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-sidebar</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">variant</span>: <span class="hljs-string">&#x27;dark&#x27;</span>,\n        <span class="hljs-attr">variants</span>: [\n          <span class="hljs-string">&#x27;transparent&#x27;</span>,\n          <span class="hljs-string">&#x27;white&#x27;</span>,\n          <span class="hljs-string">&#x27;light&#x27;</span>,\n          <span class="hljs-string">&#x27;dark&#x27;</span>,\n          <span class="hljs-string">&#x27;primary&#x27;</span>,\n          <span class="hljs-string">&#x27;secondary&#x27;</span>,\n          <span class="hljs-string">&#x27;success&#x27;</span>,\n          <span class="hljs-string">&#x27;danger&#x27;</span>,\n          <span class="hljs-string">&#x27;warning&#x27;</span>,\n          <span class="hljs-string">&#x27;info&#x27;</span>,\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-sidebar-backdrop.vue --&gt;</span></pre></div><p>Note that when the sidebar is open, it may still be possible to scroll the body (unlike the behaviour of modals). When the backdrop in enabled, focus constraint will attempt to keep focus within the sidebar. Note that in rare circumstances it might be possible for users to move focus to elements outside of the sidebar.</p> <h2 id="visibility-control" class="bv-no-focus-ring"><span class="bd-content-title">Visibility control<a class="anchorjs-link" href="#visibility-control" aria-labelledby="visibility-control"></a></span></h2> <h3 id="v-b-toggle-directive" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">v-b-toggle</code> directive<a class="anchorjs-link" href="#v-b-toggle-directive" aria-labelledby="v-b-toggle-directive"></a></span></h3> <p>Using the <a href="/docs/directives/toggle" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a> is the preferred method for <em>opening</em> the sidebar, as it automatically handles applying the <code class="text-nowrap" translate="no">aria-controls</code> and <code class="text-nowrap" translate="no">aria-expanded</code> accessibility attributes on the trigger element.</p> <p>The majority of examples on this page use the <code class="text-nowrap" translate="no">v-b-toggle</code> directive.</p> <h3 id="v-model" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#v-model" aria-labelledby="v-model"></a></span></h3> <p>The <code class="text-nowrap" translate="no">v-model</code> reflects the current visibility state of the sidebar. While it can be used to control the visibility state of the sidebar, it is recommended to use the <a href="#v-b-toggle-directive" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a> to <em>show</em> the sidebar for accessibility reasons. If you do use the <code class="text-nowrap" translate="no">v-model</code> to show the sidebar, you should place the <code class="text-nowrap" translate="no">aria-controls=&quot;id&quot;</code> attribute (where <code class="text-nowrap" translate="no">id</code> is the ID of the sidebar) on the trigger element, and also set the <code class="text-nowrap" translate="no">aria-expanded</code> attribute (also on the trigger element) to either the string <code class="text-nowrap" translate="no">&#39;true&#39;</code> (if the sidebar is open) or <code class="text-nowrap" translate="no">&#39;false</code>&#39; (if the sidebar is closed).</p> <p>The <code class="text-nowrap" translate="no">v-model</code> is internally bound to the <code class="text-nowrap" translate="no">visible</code> prop, and the <code class="text-nowrap" translate="no">change</code> event updates the <code class="text-nowrap" translate="no">v-model</code>.</p> <h3 id="closing-on-route-change" class="bv-no-focus-ring"><span class="bd-content-title">Closing on $route change<a class="anchorjs-link" href="#closing-on-route-change" aria-labelledby="closing-on-route-change"></a></span></h3> <p>By default, <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> will close itself when the <code class="text-nowrap" translate="no">$route</code> changes (full path including query and hash). This can be particularly handy if the sidebar is placed outside of your <code class="text-nowrap" translate="no">&lt;router-view&gt;</code> and is used for navigation.</p> <p>You can disable this behaviour by setting the <code class="text-nowrap" translate="no">no-close-on-route-change</code> prop to <code class="text-nowrap" translate="no">true</code>.</p> <h2 id="events" class="bv-no-focus-ring"><span class="bd-content-title">Events<a class="anchorjs-link" href="#events" aria-labelledby="events"></a></span></h2> <p>The sidebar will emit the <code class="text-nowrap" translate="no">shown</code> event once the sidebar has opened, and the <code class="text-nowrap" translate="no">hidden</code> event when the sidebar has closed.</p> <p>The <code class="text-nowrap" translate="no">change</code> event is used to update the <code class="text-nowrap" translate="no">v-model</code> and is emitted whenever the visibility state of the sidebar changes.</p> <h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> provides several accessibility features.</p> <p>When the sidebar is opened, the entire sidebar will receive focus, which is desirable for screen reader and keyboard-only users. When the sidebar is closed, the element that previously had focus before the sidebar was opened will be re-focused.</p> <p>In some circumstances, you may need to disable the enforce focus feature completely. You can do this by setting the prop <code class="text-nowrap" translate="no">no-enforce-focus</code>, although this is generally discouraged for accessibility reasons.</p> <p>When the sidebar is open, users can press <kbd class="notranslate" translate="no">Esc</kbd> to close the sidebar. To disable this feature, set the <code class="text-nowrap" translate="no">no-close-on-esc</code> prop to <code class="text-nowrap" translate="no">true</code>. with the backdrop enabled, you can use the prop <code class="text-nowrap" translate="no">no-close-on-backdrop</code> to disable the close on backdrop click feature.</p> <p>When the <code class="text-nowrap" translate="no">backdrop</code> prop is <code class="text-nowrap" translate="no">true</code>, the sidebar will attempt to constrain focus within the sidebar, and the sidebar will have the attribute <code class="text-nowrap" translate="no">aria-modal=&quot;true&quot;</code> set.</p> <p>When you have hidden the header, or do not have a title for the sidebar, set either <code class="text-nowrap" translate="no">aria-label</code> to a string that describes the sidebar, or set <code class="text-nowrap" translate="no">aria-labelledby</code> to an ID of an element that contains the title. When using the <code class="text-nowrap" translate="no">lazy</code> prop <em>and</em> you do not have a header, use the <code class="text-nowrap" translate="no">aria-label</code> prop to provide an appropriate string to label the sidebar.</p> <h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2> <p>BootstrapVue&#39;s custom SCSS/CSS is required for proper styling, and positioning of the sidebar.</p> <p>The Bootstrap v4 background (<code class="text-nowrap" translate="no">&#39;bg-*&#39;</code>) and text (<code class="text-nowrap" translate="no">&#39;text-*&#39;</code>) utility classes are used for controlling the background and font color, respectively.</p> <p>Some of the default styling for <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> can be customized via the use of SASS variables. Refer to the <a href="/docs/reference/theming" class="font-weight-bold">theming documentation</a> for additional details.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/directives/toggle" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a></li> <li><a href="/docs/components/collapse" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code> component</a></li> <li><a href="/docs/components/button#comp-ref-b-button-close" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-button-close&gt;</code> component</a></li> </ul>'}}}]);