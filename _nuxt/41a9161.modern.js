(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{475:function(n,t){n.exports={baseTOC:{top:"#pagination-nav",title:"Pagination Nav",toc:[{href:"#overview",label:"Overview"},{href:"#page-link-and-number-generation",label:"Page link and number generation",toc:[{href:"#router-links",label:"Router links"},{href:"#link-generator-function",label:"Link generator function"},{href:"#page-number-generation",label:"Page number generation"},{href:"#providing-an-array-of-pages",label:"Providing an array of pages"}]},{href:"#customizing-appearance",label:"Customizing appearance",toc:[{href:"#limiting-the-number-of-displayed-buttons",label:"Limiting the number of displayed buttons"},{href:"#button-content",label:"Button content"},{href:"#goto-firstlast-button-type",label:"Goto first/last button type"},{href:"#button-size",label:"Button size"},{href:"#pill-style",label:"Pill style"},{href:"#alignment",label:"Alignment"}]},{href:"#auto-current-page-detection-and-v-model-support",label:"Auto current page detection and v-model support"},{href:"#preventing-a-page-from-being-selected",label:"Preventing a page from being selected"},{href:"#accessibility",label:"Accessibility",toc:[{href:"#aria-labels",label:"ARIA labels"},{href:"#keyboard-navigation",label:"Keyboard navigation"}]},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="pagination-nav" class="bv-no-focus-ring"><span class="bd-content-title">Pagination Nav</span></h1> <p class="bd-lead">Quick first, previous, next, last, and page buttons for navigation based pagination, supporting regular links or router links.</p>',body:'<h2 id="overview" class="bv-no-focus-ring"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-labelledby="overview"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> is a custom input component that provides navigational pagination. The total number of pages set with the <code class="text-nowrap" translate="no">number-of-pages</code> prop. Page numbers are indexed from 1 through <code class="text-nowrap" translate="no">number-of-pages</code>.</p> <p><code class="text-nowrap" translate="no">b-pagination-nav</code> will try and auto-detect which page link is active page button based on the current page&#39;s URL (via either <code class="text-nowrap" translate="no">$route</code> detection or, if no <code class="text-nowrap" translate="no">$router</code> detected, the browser location URL).</p> <p><strong>Note:</strong> <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> is used for navigating to new page URLs. For controlling in page component pagination (such as table or list pagination), use the <a href="/docs/components/pagination" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-pagination&gt;</code></a> component instead.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">&quot;linkGen&quot;</span> <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n        <span class="hljs-keyword">return</span> pageNum === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;?&#x27;</span> : <span class="hljs-string">`?page=<span class="hljs-subst">${pageNum}</span>`</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-lead.vue --&gt;</span></pre></div><h2 id="page-link-and-number-generation" class="bv-no-focus-ring"><span class="bd-content-title">Page link and number generation<a class="anchorjs-link" href="#page-link-and-number-generation" aria-labelledby="page-link-and-number-generation"></a></span></h2> <p>By default, <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> generates plain link tags, setting the HREF attribute to <code class="text-nowrap" translate="no">base-url</code> concatenated with the page number. The <code class="text-nowrap" translate="no">base-url</code> prop defaults to &#39;/&#39;. The number of pages is specified via the <code class="text-nowrap" translate="no">number-of-pages</code> prop. Pages are numbers from <code class="text-nowrap" translate="no">1</code> through to <code class="text-nowrap" translate="no">number-of-pages</code>.</p> <h3 id="router-links" class="bv-no-focus-ring"><span class="bd-content-title">Router links<a class="anchorjs-link" href="#router-links" aria-labelledby="router-links"></a></span></h3> <p>To generate page links as <a href="https://router.vuejs.org/api/#router-link" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">&lt;router link&gt;</code></a> components (or <a href="https://nuxtjs.org/api/components-nuxt-link#the-lt-nuxt-link-gt-component" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">&lt;nuxt-link&gt;</code></a> if <a href="https://nuxtjs.org/" target="_blank" rel="noopener">Nuxt.js</a> is detected), set the <code class="text-nowrap" translate="no">use-router</code> prop. The HREF will then become the <code class="text-nowrap" translate="no">to</code> prop of the router link. Or, optionally, use a link generator function to return a router-link <a href="https://router.vuejs.org/api/#to" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">to</code> location</a> object.</p> <p>If a <code class="text-nowrap" translate="no">$router</code> is not detected on your app, <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> will fallback to regular <code class="text-nowrap" translate="no">&lt;a&gt;</code> elements, and any <code class="text-nowrap" translate="no">to</code> location object will be converted to a standard URL (if possible).</p> <p>The following router link specific props are supported:</p> <ul> <li><code class="text-nowrap" translate="no">active-class</code></li> <li><code class="text-nowrap" translate="no">exact</code></li> <li><code class="text-nowrap" translate="no">exact-active-class</code></li> <li><code class="text-nowrap" translate="no">prefetch</code> (<code class="text-nowrap" translate="no">&lt;nuxt-link&gt;</code> specific prop)</li> <li><code class="text-nowrap" translate="no">no-prefetch</code> (<code class="text-nowrap" translate="no">&lt;nuxt-link&gt;</code> specific prop)</li> </ul> <p>For details on the above props, refer to the <a href="/docs/reference/router-links" class="font-weight-bold">Router Link Support</a> reference section.</p> <h3 id="link-generator-function" class="bv-no-focus-ring"><span class="bd-content-title">Link generator function<a class="anchorjs-link" href="#link-generator-function" aria-labelledby="link-generator-function"></a></span></h3> <p>If you need finer grained control over the generated link URLs or <code class="text-nowrap" translate="no">&lt;router-link&gt;</code> <code class="text-nowrap" translate="no">to</code> props, you may set the <code class="text-nowrap" translate="no">link-gen</code> prop to a function reference that receives two arguments: the page number, and an object containing two fields (<code class="text-nowrap" translate="no">link</code> and <code class="text-nowrap" translate="no">page</code>), where <code class="text-nowrap" translate="no">page</code> is the page number and <code class="text-nowrap" translate="no">link</code> is the internally generated link.</p> <p>The <code class="text-nowrap" translate="no">link-gen</code> function should return either a string (for HREF) or a router <code class="text-nowrap" translate="no">to</code> object. If the returned value is an object, then a router-link will always be generated (if a <code class="text-nowrap" translate="no">$router</code> is detected). If the return value is a string, a standard link is generated by default unless the <code class="text-nowrap" translate="no">use-router</code> prop is set. If a <code class="text-nowrap" translate="no">to</code> location object is used, then the <code class="text-nowrap" translate="no">base-url</code> prop will have no effect.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-comment">// For regular HREF (or string `to` prop if `use-router` is set)</span>\n    <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">`/foo/page/<span class="hljs-subst">${pageNum}</span>`</span>\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object</span>\n    <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n      <span class="hljs-keyword">return</span> { <span class="hljs-attr">path</span>: <span class="hljs-string">`/foo/page/<span class="hljs-subst">${pageNum}</span>`</span> }\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object with query parameters</span>\n    <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/foo/&#x27;</span>,\n        <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: pageNum }\n      }\n    },\n\n    <span class="hljs-comment">// Returning a router-link `to` object with named route and parameters</span>\n    <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;posts&#x27;</span>,\n        <span class="hljs-attr">params</span>: { <span class="hljs-attr">post</span>: pageNum }\n      }\n    }\n  }\n}</pre></div><p><strong>Note:</strong> when falling back from a <code class="text-nowrap" translate="no">to</code> location object to a standard link (when no <code class="text-nowrap" translate="no">$router</code> is available), only the following location properties are used to generate the URL:</p> <ul> <li><code class="text-nowrap" translate="no">path</code> (if not provided defaults to the page&#39;s current URL path)</li> <li><code class="text-nowrap" translate="no">query</code></li> <li><code class="text-nowrap" translate="no">hash</code> (must include the leading <code class="text-nowrap" translate="no">#</code> if used)</li> </ul> <p>The conversion of <code class="text-nowrap" translate="no">name</code> routes and <code class="text-nowrap" translate="no">params</code> is not supported.</p> <h3 id="page-number-generation" class="bv-no-focus-ring"><span class="bd-content-title">Page number generation<a class="anchorjs-link" href="#page-number-generation" aria-labelledby="page-number-generation"></a></span></h3> <p>By default, <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> renders page numbers (1-N) in the page link buttons. You can override this behaviour by supplying a function reference to the <code class="text-nowrap" translate="no">page-gen</code> property. The function reference should accept a single argument which is a page number (1-N). The <code class="text-nowrap" translate="no">page-gen</code> function should return a string.</p> <p><strong>Note:</strong> HTML content in generated page number strings is <strong>not</strong> supported. For basic HTML, you can use the scoped slot <code class="text-nowrap" translate="no">page</code> for finer-grained formatting.</p> <p><strong>Example: Using an array of links to generate pagination:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">:link-gen</span>=<span class="hljs-string">&quot;linkGen&quot;</span>\n      <span class="hljs-attr">:page-gen</span>=<span class="hljs-string">&quot;pageGen&quot;</span>\n      <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">&quot;links.length&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">links</span>: [<span class="hljs-string">&#x27;#foo&#x27;</span>, <span class="hljs-string">&#x27;#bar&#x27;</span>, <span class="hljs-string">&#x27;#baz&#x27;</span>, <span class="hljs-string">&#x27;#faz&#x27;</span>]\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">linkGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.links[pageNum - <span class="hljs-number">1</span>]\n      },\n      <span class="hljs-function"><span class="hljs-title">pageGen</span>(<span class="hljs-params">pageNum</span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.links[pageNum - <span class="hljs-number">1</span>].slice(<span class="hljs-number">1</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-links.vue --&gt;</span></pre></div><h3 id="providing-an-array-of-pages" class="bv-no-focus-ring"><span class="bd-content-title">Providing an array of pages<a class="anchorjs-link" href="#providing-an-array-of-pages" aria-labelledby="providing-an-array-of-pages"></a></span></h3> <p>Rather than using <code class="text-nowrap" translate="no">number-of-pages</code> to auto generate page links, you can pass an array of links via the <code class="text-nowrap" translate="no">pages</code> prop. When the <code class="text-nowrap" translate="no">pages</code> prop has an array of length <code class="text-nowrap" translate="no">1</code> or greater, it will be used to generate the page links.</p> <p>The array can be one of two formats:</p> <ul> <li>Array of strings, where each entry is a link. in this mode, the page button numbers will automatically be set to <code class="text-nowrap" translate="no">1</code> through to the number of entries in the array.</li> <li>Array of objects, where each object has two fields: <code class="text-nowrap" translate="no">link</code> (required) and <code class="text-nowrap" translate="no">text</code> (optional). Link can be be either a string specifying the link, or a <code class="text-nowrap" translate="no">to</code> location object. <code class="text-nowrap" translate="no">text</code> will be the content of the page link buttons. If <code class="text-nowrap" translate="no">text</code> is omitted, page button content will default to the page number.</li> </ul> <p>When a string link is provided, <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> will use regular <code class="text-nowrap" translate="no">&lt;a&gt;</code> elements, unless the <code class="text-nowrap" translate="no">use-router</code> prop is set. When link (in the array of objects form) is a <code class="text-nowrap" translate="no">to</code> location object, then a router link will automatically be generated (if a <code class="text-nowrap" translate="no">$router</code> is detected).</p> <p>With the array format, link strings (and/or location objects) are used as-as and <code class="text-nowrap" translate="no">base-url</code> prop will be ignored.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">&quot;pages1&quot;</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">&quot;pages2&quot;</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">:pages</span>=<span class="hljs-string">&quot;pages3&quot;</span> <span class="hljs-attr">use-router</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-comment">// Simple array of strings</span>\n      <span class="hljs-attr">pages1</span>: [<span class="hljs-string">&#x27;?page=1&#x27;</span>, <span class="hljs-string">&#x27;?page=2&#x27;</span>, <span class="hljs-string">&#x27;?page=3&#x27;</span>],\n      <span class="hljs-comment">// Array of objects with string links</span>\n      <span class="hljs-attr">pages2</span>: [\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">&#x27;?page=1&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;One&#x27;</span> },\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">&#x27;?page=2&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Two&#x27;</span> },\n        { <span class="hljs-attr">link</span>: <span class="hljs-string">&#x27;?page=3&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Three&#x27;</span> }\n      ],\n      <span class="hljs-comment">// Array of objects with router `to` locations</span>\n      <span class="hljs-attr">pages3</span>: [\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">1</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Page 1&#x27;</span> },\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">2</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Page 2&#x27;</span> },\n        { <span class="hljs-attr">link</span>: { <span class="hljs-attr">query</span>: { <span class="hljs-attr">page</span>: <span class="hljs-number">3</span> } }, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Page 3&#x27;</span> }\n      ]\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- pagination-nav-array.vue --&gt;</span></pre></div><h2 id="customizing-appearance" class="bv-no-focus-ring"><span class="bd-content-title">Customizing appearance<a class="anchorjs-link" href="#customizing-appearance" aria-labelledby="customizing-appearance"></a></span></h2> <h3 id="limiting-the-number-of-displayed-buttons" class="bv-no-focus-ring"><span class="bd-content-title">Limiting the number of displayed buttons<a class="anchorjs-link" href="#limiting-the-number-of-displayed-buttons" aria-labelledby="limiting-the-number-of-displayed-buttons"></a></span></h3> <p>To restrict the number of page buttons (including the ellipsis, but excluding the first, prev, next, and last buttons) shown, use the <code class="text-nowrap" translate="no">limit</code> prop to specify the desired number of page buttons (including the ellipsis, if shown). The default <code class="text-nowrap" translate="no">limit</code> is <code class="text-nowrap" translate="no">5</code>. The minimum supported value is <code class="text-nowrap" translate="no">3</code>. When <code class="text-nowrap" translate="no">limit</code> is set to <code class="text-nowrap" translate="no">3</code>, no ellipsis indicators will be shown for practical purposes.</p> <p>The <code class="text-nowrap" translate="no">first</code> and <code class="text-nowrap" translate="no">last</code> buttons can be optionally hidden by setting the <code class="text-nowrap" translate="no">hide-goto-end-buttons</code> prop.</p> <p>The showing of the <code class="text-nowrap" translate="no">ellipsis</code> can be optionally disabled by setting the <code class="text-nowrap" translate="no">hide-ellipsis</code> prop.</p> <h4 id="small-screen-support" class="bv-no-focus-ring"><span class="bd-content-title">Small screen support<a class="anchorjs-link" href="#small-screen-support" aria-labelledby="small-screen-support"></a></span></h4> <p>On smaller screens (i.e. mobile), some of the <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> buttons will be hidden to minimize the potential of the pagination interface wrapping onto multiple lines:</p> <ul> <li>The ellipsis indicators will be hidden on screens <code class="text-nowrap" translate="no">xs</code> and smaller.</li> <li>Page number buttons will be limited to a maximum of 3 visible on <code class="text-nowrap" translate="no">xs</code> screens and smaller.</li> </ul> <p>This ensures that no more than 3 page number buttons are visible, along with the goto <em>first</em>, <em>prev</em>, <em>next</em>, and <em>last</em> buttons.</p> <h3 id="button-content" class="bv-no-focus-ring"><span class="bd-content-title">Button content<a class="anchorjs-link" href="#button-content" aria-labelledby="button-content"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> supports several props/slots that allow you to customize the appearance. All <code class="text-nowrap" translate="no">*-text</code> props are text-only and strip out HTML but you can use their equally named slot counterparts for that.</p> <p>For a full list of all available slots see the <a href="#comp-ref-b-pagination-nav-slots" class="font-weight-bold">Slots</a> section below.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Use text in props --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n      <span class="hljs-attr">first-text</span>=<span class="hljs-string">&quot;First&quot;</span>\n      <span class="hljs-attr">prev-text</span>=<span class="hljs-string">&quot;Prev&quot;</span>\n      <span class="hljs-attr">next-text</span>=<span class="hljs-string">&quot;Next&quot;</span>\n      <span class="hljs-attr">last-text</span>=<span class="hljs-string">&quot;Last&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Use emojis in props --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n      <span class="hljs-attr">first-text</span>=<span class="hljs-string">&quot;⏮&quot;</span>\n      <span class="hljs-attr">prev-text</span>=<span class="hljs-string">&quot;⏪&quot;</span>\n      <span class="hljs-attr">next-text</span>=<span class="hljs-string">&quot;⏩&quot;</span>\n      <span class="hljs-attr">last-text</span>=<span class="hljs-string">&quot;⏭&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-4&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Use HTML and sub-components in slots --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n      <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span>\n      <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-4&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">first-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-success&quot;</span>&gt;</span>First<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prev-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;</span>Prev<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">next-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-warning&quot;</span>&gt;</span>Next<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">last-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-info&quot;</span>&gt;</span>Last<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">ellipsis-text</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;grow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;grow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">small</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;grow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">page</span>=<span class="hljs-string">&quot;{ page, active }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>{{ page }}<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">v-else</span>&gt;</span>{{ page }}<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-appearance.vue --&gt;</span></pre></div><p>The slot <code class="text-nowrap" translate="no">page</code> is always scoped, while the slots <code class="text-nowrap" translate="no">first-text</code>, <code class="text-nowrap" translate="no">prev-text</code>, <code class="text-nowrap" translate="no">next-text</code> and <code class="text-nowrap" translate="no">last-text</code> are optionally scoped. The <code class="text-nowrap" translate="no">ellipsis-text</code> slot is not scoped.</p> <p><strong>Scoped variables properties available to the <code class="text-nowrap" translate="no">page</code> slot:</strong></p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">page</code></td> <td>Number</td> <td>Page number (from <code class="text-nowrap" translate="no">1</code> to <code class="text-nowrap" translate="no">numberOfPages</code>)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">index</code></td> <td>Number</td> <td>Page number (indexed from <code class="text-nowrap" translate="no">0</code> to <code class="text-nowrap" translate="no">numberOfPages -1</code>)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">active</code></td> <td>Boolean</td> <td>If the page is the active page</td> </tr> <tr> <td><code class="text-nowrap" translate="no">disabled</code></td> <td>Boolean</td> <td>If the page button is disabled</td> </tr> <tr> <td><code class="text-nowrap" translate="no">content</code></td> <td>String</td> <td>default content, or the result of the <code class="text-nowrap" translate="no">page-gen</code> function</td> </tr> </tbody></table> </div><p><strong>Scoped variables properties available to the <code class="text-nowrap" translate="no">first-text</code>, <code class="text-nowrap" translate="no">prev-text</code>, <code class="text-nowrap" translate="no">next-text</code> and <code class="text-nowrap" translate="no">last-text</code> slots:</strong></p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">page</code></td> <td>Number</td> <td>Page number (from <code class="text-nowrap" translate="no">1</code> to <code class="text-nowrap" translate="no">numberOfPages</code>)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">index</code></td> <td>Number</td> <td>Page number (indexed from <code class="text-nowrap" translate="no">0</code> to <code class="text-nowrap" translate="no">numberOfPages -1</code>)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">disabled</code></td> <td>Boolean</td> <td>If the page button is disabled</td> </tr> </tbody></table> </div><h3 id="goto-firstlast-button-type" class="bv-no-focus-ring"><span class="bd-content-title">Goto first/last button type<a class="anchorjs-link" href="#goto-firstlast-button-type" aria-labelledby="goto-firstlast-button-type"></a></span></h3> <p>If you prefer to have buttons with the first and last page number to go to the corresponding page, use the <code class="text-nowrap" translate="no">first-number</code> and <code class="text-nowrap" translate="no">last-number</code> props.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto first button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">&quot;pages&quot;</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n        <span class="hljs-attr">first-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto last button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">&quot;pages&quot;</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n        <span class="hljs-attr">last-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Goto first and last button number<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>\n        <span class="hljs-attr">:number-of-pages</span>=<span class="hljs-string">&quot;pages&quot;</span>\n        <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>\n        <span class="hljs-attr">first-number</span>\n        <span class="hljs-attr">last-number</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">pages</span>: <span class="hljs-number">100</span>,\n        <span class="hljs-attr">currentPage</span>: <span class="hljs-number">5</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-goto-first-last-number.vue --&gt;</span></pre></div><h3 id="button-size" class="bv-no-focus-ring"><span class="bd-content-title">Button size<a class="anchorjs-link" href="#button-size" aria-labelledby="button-size"></a></span></h3> <p>Optionally change from the default button size by setting the <code class="text-nowrap" translate="no">size</code> prop to either <code class="text-nowrap" translate="no">&#39;sm&#39;</code> for smaller buttons or <code class="text-nowrap" translate="no">&#39;lg&#39;</code> for larger buttons.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Small<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Large<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-size.vue --&gt;</span></pre></div><h3 id="pill-style" class="bv-no-focus-ring"><span class="bd-content-title">Pill style<a class="anchorjs-link" href="#pill-style" aria-labelledby="pill-style"></a></span></h3> <p>Easily switch to pill style buttons by setting the <code class="text-nowrap" translate="no">pills</code> prop</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Small Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Default Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Large Pills<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-pills.vue --&gt;</span></pre></div><p><strong>Note:</strong> Pill styling requires BootstrapVue&#39;s custom CSS/SCSS.</p> <h3 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h3> <p>By default the pagination component is left aligned. Change the alignment to <code class="text-nowrap" translate="no">center</code>, <code class="text-nowrap" translate="no">right</code> (<code class="text-nowrap" translate="no">right</code> is an alias for <code class="text-nowrap" translate="no">end</code>), or &#39;fill&#39; by setting the prop <code class="text-nowrap" translate="no">align</code> to the appropriate value.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;overflow-auto&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span>&gt;</span>Left alignment (default)<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>Center alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-right&quot;</span>&gt;</span>Right (end) alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h6</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>Fill alignment<span class="hljs-tag">&lt;/<span class="hljs-name">h6</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-pagination-nav</span> <span class="hljs-attr">number-of-pages</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">base-url</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;fill&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-pagination-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-pagination-nav-alignment.vue --&gt;</span></pre></div><h2 id="auto-current-page-detection-and-v-model-support" class="bv-no-focus-ring"><span class="bd-content-title">Auto current page detection and <code class="text-nowrap" translate="no">v-model</code> support<a class="anchorjs-link" href="#auto-current-page-detection-and-v-model-support" aria-labelledby="auto-current-page-detection-and-v-model-support"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> will try and automatically detect which page button should be active, based on the page&#39;s current URL or <code class="text-nowrap" translate="no">$route</code> (if a router is detected). In cases where it cannot detect the page, no page number buttons will be in the active state, and the first, previous, next and last buttons will be in the disabled state until a page button is clicked.</p> <p><code class="text-nowrap" translate="no">v-model</code> is optionally supported (updated by the <code class="text-nowrap" translate="no">input</code> event, and tied to the <code class="text-nowrap" translate="no">value</code> prop). Setting the <code class="text-nowrap" translate="no">v-model</code> to <code class="text-nowrap" translate="no">null</code> (the default) initially will trigger auto active page detection, and will subsequently be updated with the current page number (indexed from <code class="text-nowrap" translate="no">1</code> to number of pages). If you initially set the <code class="text-nowrap" translate="no">v-model</code> to a value of <code class="text-nowrap" translate="no">1</code> or greater, auto page detection will not occur (until after a user clicks a page button), and the page specified by the <code class="text-nowrap" translate="no">v-model</code> will be set as <code class="text-nowrap" translate="no">active</code>.</p> <p>To disable auto active page detection, set the <code class="text-nowrap" translate="no">no-page-detect</code> prop to <code class="text-nowrap" translate="no">true</code>.</p> <p><strong>Note:</strong> Auto page detection needs to loop through all possible page links until a match is detected. For larger <code class="text-nowrap" translate="no">number-of-pages</code>, this check can take some time so you may want to manually control which page is the active via the <code class="text-nowrap" translate="no">v-model</code> and the <code class="text-nowrap" translate="no">no-page-detect</code> prop.</p> <h2 id="preventing-a-page-from-being-selected" class="bv-no-focus-ring"><span class="bd-content-title">Preventing a page from being selected<a class="anchorjs-link" href="#preventing-a-page-from-being-selected" aria-labelledby="preventing-a-page-from-being-selected"></a></span></h2> <p>You can listen for the <code class="text-nowrap" translate="no">page-click</code> event, which provides an option to prevent the page from being selected. The event is emitted with two arguments:</p> <ul> <li><code class="text-nowrap" translate="no">bvEvent</code>: The <code class="text-nowrap" translate="no">BvEvent</code> object. Call <code class="text-nowrap" translate="no">bvEvent.preventDefault()</code> to cancel page selection</li> <li><code class="text-nowrap" translate="no">page</code>: Page number to select (starting with <code class="text-nowrap" translate="no">1</code>)</li> </ul> <p>For accessibility reasons, when using the <code class="text-nowrap" translate="no">page-click</code> event to prevent a page from being selected, you should provide some means of notification to the user as to why the page is not able to be selected. It is recommended to use the <code class="text-nowrap" translate="no">disabled</code> attribute on the <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> component instead of using the <code class="text-nowrap" translate="no">page-click</code> event (as <code class="text-nowrap" translate="no">disabled</code> is more intuitive for screen reader users).</p> <h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p>The <code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> component provides many features to support assistive technology users, such as <code class="text-nowrap" translate="no">aria-</code> attributes and keyboard navigation.</p> <h3 id="aria-labels" class="bv-no-focus-ring"><span class="bd-content-title">ARIA labels<a class="anchorjs-link" href="#aria-labels" aria-labelledby="aria-labels"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> provides various <code class="text-nowrap" translate="no">*-label-*</code> props which are used to set the <code class="text-nowrap" translate="no">aria-label</code> attributes on the various elements within the component, which will help users of assistive technology.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Prop</th> <th><code class="text-nowrap" translate="no">aria-label</code> content default</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">label-first-page</code></td> <td>&quot;Goto first page&quot;</td> </tr> <tr> <td><code class="text-nowrap" translate="no">label-prev-page</code></td> <td>&quot;Goto previous page&quot;</td> </tr> <tr> <td><code class="text-nowrap" translate="no">label-next-page</code></td> <td>&quot;Goto next page&quot;</td> </tr> <tr> <td><code class="text-nowrap" translate="no">label-last-page</code></td> <td>&quot;Goto last page&quot;</td> </tr> <tr> <td><code class="text-nowrap" translate="no">label-page</code></td> <td>&quot;Goto page&quot;, appended with the page number</td> </tr> <tr> <td><code class="text-nowrap" translate="no">aria-label</code></td> <td>&quot;Pagination&quot;, applied to the outer pagination container</td> </tr> </tbody></table> </div><p>The <code class="text-nowrap" translate="no">label-page</code> will optionally accept a function to generate the aria-label. The function is passed a single argument which is the page number (indexed from 1 to number of pages).</p> <p>You can remove any label by setting the prop to an empty string (<code class="text-nowrap" translate="no">&#39;&#39;</code>), although this is not recommended unless the content of the button textually conveys its purpose.</p> <h3 id="keyboard-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-labelledby="keyboard-navigation"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-pagination-nav&gt;</code> supports standard <kbd class="notranslate" translate="no">Tab</kbd> key navigation.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <p>Refer to the <a href="/docs/reference/router-links" class="font-weight-bold">Router support</a> reference page for router-link specific props.</p> <p>For pagination control of a component (such as <code class="text-nowrap" translate="no">&lt;b-table&gt;</code>) or a pagination list, use the <a href="/docs/components/pagination" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-pagination&gt;</code></a> component instead.</p>'}}}]);