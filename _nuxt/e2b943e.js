(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{596:function(t,n){t.exports={baseTOC:{top:"#tabs",title:"Tabs",toc:[{href:"#basic-usage",label:"Basic usage"},{href:"#cards-integration",label:"Cards integration"},{href:"#pills-variant",label:"Pills variant"},{href:"#fill-and-justify",label:"Fill and justify",toc:[{href:"#fill",label:"Fill"},{href:"#justified",label:"Justified"}]},{href:"#alignment",label:"Alignment"},{href:"#bottom-placement-of-tab-controls",label:"Bottom placement of tab controls"},{href:"#vertical-tabs",label:"Vertical tabs"},{href:"#active-classes",label:"Active classes"},{href:"#fade-animation",label:"Fade animation"},{href:"#add-tabs-without-content",label:"Add tabs without content"},{href:"#add-custom-content-to-tab-title",label:"Add custom content to tab title"},{href:"#apply-custom-classes-to-the-generated-nav-tabs-or-pills",label:"Apply custom classes to the generated nav-tabs or pills"},{href:"#lazy-loading-tab-content",label:"Lazy loading tab content"},{href:"#keyboard-navigation",label:"Keyboard navigation"},{href:"#programmatically-activating-and-deactivating-tabs",label:"Programmatically activating and deactivating tabs"},{href:"#preventing-a-b-tab-from-being-activated",label:"Preventing a &lt;b-tab&gt; from being activated"},{href:"#advanced-examples",label:"Advanced examples",toc:[{href:"#external-controls-using-v-model",label:"External controls using v-model"},{href:"#dynamic-tabs--tabs-end-slot",label:"Dynamic tabs + tabs-end slot"}]}]},titleLead:'<h1 id="tabs" class="bv-no-focus-ring"><span class="bd-content-title">Tabs</span></h1> <p class="bd-lead">Create a widget of tabbable panes of <em>local content</em>. The tabs component is built upon navs and cards internally, and provides full keyboard navigation control of the tabs.</p>',body:'<p>For navigation based tabs (i.e. tabs that would change the URL), use the <a href="/docs/components/nav" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-nav&gt;</code></a> component instead.</p> <h2 id="basic-usage" class="bv-no-focus-ring"><span class="bd-content-title">Basic usage<a class="anchorjs-link" href="#basic-usage" aria-labelledby="basic-usage"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;First&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Second&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs.vue --&gt;</span></pre></div><p><strong>Tip:</strong> You should supply each child <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> component a unique <code class="text-nowrap" translate="no">key</code> value if dynamically adding or removing <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> components (i.e. <code class="text-nowrap" translate="no">v-if</code> or for loops). The <code class="text-nowrap" translate="no">key</code> attribute is a special Vue attribute, see <a href="https://vuejs.org/v2/api/#key" target="_blank" rel="noopener">https://vuejs.org/v2/api/#key</a>.</p> <h2 id="cards-integration" class="bv-no-focus-ring"><span class="bd-content-title">Cards integration<a class="anchorjs-link" href="#cards-integration" aria-labelledby="cards-integration"></a></span></h2> <p>Tabs support integrating with Bootstrap cards. Just add the <code class="text-nowrap" translate="no">card</code> property to <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> and place it inside a <code class="text-nowrap" translate="no">&lt;b-card&gt;</code> component. Note that you should add the<code class="text-nowrap" translate="no">no-body</code> prop on the <code class="text-nowrap" translate="no">&lt;b-card&gt;</code> component in order to properly decorate the card header and remove the extra padding introduced by <code class="text-nowrap" translate="no">card-body</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-card.vue --&gt;</span></pre></div><p>When <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> is in <code class="text-nowrap" translate="no">card</code> mode, each <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> sub-component will automatically have the <code class="text-nowrap" translate="no">card-body</code> class applied (this class provides the padding around the tab content). To disable the <code class="text-nowrap" translate="no">card-body</code> class, set the <code class="text-nowrap" translate="no">no-body</code> prop on the <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> sub component.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Picture 1&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/600/200/?image=21&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Image 21&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 1 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Picture 2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/600/200/?image=25&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Image 25&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 2 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">no-body</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Picture 3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-img</span> <span class="hljs-attr">bottom</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/600/200/?image=26&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Image 26&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-card-img</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-footer</span>&gt;</span>Picture 3 footer<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-footer</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Text&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-title</span>&gt;</span>This tab does not have the <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>no-body<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> prop set<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>\n          Quis magna Lorem anim amet ipsum do mollit sit cillum voluptate ex nulla tempor. Laborum\n          consequat non elit enim exercitation cillum aliqua consequat id aliqua. Esse ex\n          consectetur mollit voluptate est in duis laboris ad sit ipsum anim Lorem. Incididunt\n          veniam velit elit elit veniam Lorem aliqua quis ullamco deserunt sit enim elit aliqua\n          esse irure.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-card-no-body.vue --&gt;</span></pre></div><p><strong>Note:</strong> Setting the <code class="text-nowrap" translate="no">no-body</code> prop on <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> will have no affect when <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> is not in <code class="text-nowrap" translate="no">card</code> mode (as the <code class="text-nowrap" translate="no">card-body</code> class is only set when in <code class="text-nowrap" translate="no">card</code> mode).</p> <p>Refer to the <a href="/docs/components/card" class="font-weight-bold">Cards documentation</a> for more details on card components.</p> <h2 id="pills-variant" class="bv-no-focus-ring"><span class="bd-content-title">Pills variant<a class="anchorjs-link" href="#pills-variant" aria-labelledby="pills-variant"></a></span></h2> <p>Tabs use the <code class="text-nowrap" translate="no">tabs</code> styling by default. Just add <code class="text-nowrap" translate="no">pills</code> property to <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> for the pill style variant.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-pills.vue --&gt;</span></pre></div><h2 id="fill-and-justify" class="bv-no-focus-ring"><span class="bd-content-title">Fill and justify<a class="anchorjs-link" href="#fill-and-justify" aria-labelledby="fill-and-justify"></a></span></h2> <p>Force your <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> controls to extend the full available width.</p> <h3 id="fill" class="bv-no-focus-ring"><span class="bd-content-title">Fill<a class="anchorjs-link" href="#fill" aria-labelledby="fill"></a></span></h3> <p>To proportionately fill all available space with your tab controls, set the <code class="text-nowrap" translate="no">fill</code> prop. Notice that all horizontal space is occupied, but not every control has the same width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">fill</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;First&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Second&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Very, very long title&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the tab with the very, very long title<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-fill.vue --&gt;</span></pre></div><h3 id="justified" class="bv-no-focus-ring"><span class="bd-content-title">Justified<a class="anchorjs-link" href="#justified" aria-labelledby="justified"></a></span></h3> <p>For equal-width controls, use the <code class="text-nowrap" translate="no">justified</code> prop instead. All horizontal space will be occupied by the controls, but unlike using <code class="text-nowrap" translate="no">fill</code> above, every control will be the same width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">justified</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;First&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Second&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Very, very long title&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the tab with the very, very long title<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-justified.vue --&gt;</span></pre></div><h2 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h2> <p>To align your tab controls, use the <code class="text-nowrap" translate="no">align</code> prop. Available values are <code class="text-nowrap" translate="no">left</code>, <code class="text-nowrap" translate="no">center</code> and <code class="text-nowrap" translate="no">right</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;First&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Second&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-alignment.vue --&gt;</span></pre></div><h2 id="bottom-placement-of-tab-controls" class="bv-no-focus-ring"><span class="bd-content-title">Bottom placement of tab controls<a class="anchorjs-link" href="#bottom-placement-of-tab-controls" aria-labelledby="bottom-placement-of-tab-controls"></a></span></h2> <p>Visually move the tab controls to the bottom by setting the prop <code class="text-nowrap" translate="no">end</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-bottom.vue --&gt;</span></pre></div><p><strong>Caveats:</strong></p> <ul> <li>Bottom placement visually works best with the <code class="text-nowrap" translate="no">pills</code> variant. When using the default <code class="text-nowrap" translate="no">tabs</code> variant, you may want to provided your own custom styling classes, as Bootstrap v4 CSS assumes the tabs will always be placed on the top of the tabs content.</li> <li>To provide a better user experience with bottom placed controls, ensure that the content of each tab pane is the same height and fits completely within the visible viewport, otherwise the user will need to scroll up to read the start of the tabbed content.</li> </ul> <h2 id="vertical-tabs" class="bv-no-focus-ring"><span class="bd-content-title">Vertical tabs<a class="anchorjs-link" href="#vertical-tabs" aria-labelledby="vertical-tabs"></a></span></h2> <p>Have the tab controls placed on the lefthand side by setting the <code class="text-nowrap" translate="no">vertical</code> prop to <code class="text-nowrap" translate="no">true</code>. Vertical tabs work with or without <code class="text-nowrap" translate="no">card</code> mode enabled.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical.vue --&gt;</span></pre></div><p>Visually move the tab controls to the right hand side by setting the <code class="text-nowrap" translate="no">end</code> prop:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span> <span class="hljs-attr">end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical-end.vue --&gt;</span></pre></div><p>The width of the vertical tab controls will expand to fit the width of the tab title. To control the width, set a <a href="/docs/reference/size-props#sizing-utility-classes" class="font-weight-bold">width utility class</a> via the prop <code class="text-nowrap" translate="no">nav-wrapper-class</code>. You can use values such as <code class="text-nowrap" translate="no">w-25</code> (25% width), <code class="text-nowrap" translate="no">w-50</code> (50% width), etc., or column classes such as <code class="text-nowrap" translate="no">col-2</code>, <code class="text-nowrap" translate="no">col-3</code>, etc.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">pills</span> <span class="hljs-attr">card</span> <span class="hljs-attr">vertical</span> <span class="hljs-attr">nav-wrapper-class</span>=<span class="hljs-string">&quot;w-50&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-vertical-width.vue --&gt;</span></pre></div><p>Vertical placement visually works best with the <code class="text-nowrap" translate="no">pills</code> variant. When using the default <code class="text-nowrap" translate="no">tabs</code> variant, you may want to provided your own custom styling classes, as Bootstrap v4 CSS assumes the tab controls will always be placed on the top of the tabs content.</p> <p><strong>Note:</strong> <em>overflowing text may occur if your width is narrower than the tab title. You may need additional custom styling.</em></p> <h2 id="active-classes" class="bv-no-focus-ring"><span class="bd-content-title">Active classes<a class="anchorjs-link" href="#active-classes" aria-labelledby="active-classes"></a></span></h2> <p>To apply classes to the currently active control or tab use the <code class="text-nowrap" translate="no">active-nav-item-class</code> and <code class="text-nowrap" translate="no">active-tab-class</code> props.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>\n    <span class="hljs-attr">active-nav-item-class</span>=<span class="hljs-string">&quot;font-weight-bold text-uppercase text-danger&quot;</span>\n    <span class="hljs-attr">active-tab-class</span>=<span class="hljs-string">&quot;font-weight-bold text-success&quot;</span>\n    <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;First&quot;</span> <span class="hljs-attr">active</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the first tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Second&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m the second tab<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>I&#x27;m a disabled tab!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-classes.vue --&gt;</span></pre></div><h2 id="fade-animation" class="bv-no-focus-ring"><span class="bd-content-title">Fade animation<a class="anchorjs-link" href="#fade-animation" aria-labelledby="fade-animation"></a></span></h2> <p>Fade is enabled by default when changing tabs. It can disabled with <code class="text-nowrap" translate="no">no-fade</code> property.</p> <h2 id="add-tabs-without-content" class="bv-no-focus-ring"><span class="bd-content-title">Add tabs without content<a class="anchorjs-link" href="#add-tabs-without-content" aria-labelledby="add-tabs-without-content"></a></span></h2> <p>If you want to add extra tabs that do not have any content, you can put them in <code class="text-nowrap" translate="no">tabs-start</code> or <code class="text-nowrap" translate="no">tabs-end</code> slot(s):</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Add your b-tab components here --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tabs-end</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;presentation&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;() =&gt; {}&quot;</span>&gt;</span>Another tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;presentation&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item align-self-center&quot;</span>&gt;</span>Plain text<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-item-slot.vue --&gt;</span></pre></div><p>Use the <code class="text-nowrap" translate="no">tabs-start</code> slot to place extra tab buttons before the content tab buttons, and use the <code class="text-nowrap" translate="no">tabs-end</code> slot to place extra tab buttons after the content tab buttons.</p> <p><strong>Note:</strong> extra (contentless) tab buttons should be a <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> or have a root element of <code class="text-nowrap" translate="no">&lt;li&gt;</code> and class <code class="text-nowrap" translate="no">nav-item</code> for proper rendering and semantic markup.</p> <h2 id="add-custom-content-to-tab-title" class="bv-no-focus-ring"><span class="bd-content-title">Add custom content to tab title<a class="anchorjs-link" href="#add-custom-content-to-tab-title" aria-labelledby="add-custom-content-to-tab-title"></a></span></h2> <p>If you want to add custom content to tab title, like HTML code, icons, or another non-interactive Vue component, this possible by using <code class="text-nowrap" translate="no">title</code> slot of <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">active</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;grow&quot;</span> <span class="hljs-attr">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span> I&#x27;m <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>custom<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>title<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-3&quot;</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">title</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-spinner</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;border&quot;</span> <span class="hljs-attr">small</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-spinner</span>&gt;</span> Tab 2\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-3&quot;</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-title-slot.vue --&gt;</span></pre></div><p><strong>Do not</strong> place interactive elements/components inside the title slot. The tab button is a link which does not support child interactive elements per the HTML5 spec.</p> <h2 id="apply-custom-classes-to-the-generated-nav-tabs-or-pills" class="bv-no-focus-ring"><span class="bd-content-title">Apply custom classes to the generated nav-tabs or pills<a class="anchorjs-link" href="#apply-custom-classes-to-the-generated-nav-tabs-or-pills" aria-labelledby="apply-custom-classes-to-the-generated-nav-tabs-or-pills"></a></span></h2> <p>The tab selectors are based on Bootstrap v4&#39;s <code class="text-nowrap" translate="no">nav</code> markup ( i.e. <code class="text-nowrap" translate="no">ul.nav &gt; li.nav-item &gt; a.nav-link</code>). In some situations, you may want to add classes to the <code class="text-nowrap" translate="no">&lt;li&gt;</code> (nav-item) and/or the <code class="text-nowrap" translate="no">&lt;a&gt;</code> (nav-link) on a per tab basis. To do so, simply supply the classname to the <code class="text-nowrap" translate="no">title-item-class</code> prop (for the <code class="text-nowrap" translate="no">&lt;li&gt;</code> element) or <code class="text-nowrap" translate="no">title-link-class</code> prop (for the <code class="text-nowrap" translate="no">&lt;a&gt;</code> element). Value&#39;s can be passed as a string or array of strings.</p> <p><strong>Note:</strong> <em>The <code class="text-nowrap" translate="no">active</code> class is automatically applied to the active tabs <code class="text-nowrap" translate="no">&lt;a&gt;</code> element. You may need to accommodate your custom classes for this.</em></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;tabIndex&quot;</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">&quot;linkClass(0)&quot;</span>&gt;</span>Tab contents 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">&quot;linkClass(1)&quot;</span>&gt;</span>Tab contents 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 3&quot;</span> <span class="hljs-attr">:title-link-class</span>=<span class="hljs-string">&quot;linkClass(2)&quot;</span>&gt;</span>Tab contents 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabIndex</span>: <span class="hljs-number">0</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">linkClass</span>(<span class="hljs-params">idx</span>)</span> {\n        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.tabIndex === idx) {\n          <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;bg-primary&#x27;</span>, <span class="hljs-string">&#x27;text-light&#x27;</span>]\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;bg-light&#x27;</span>, <span class="hljs-string">&#x27;text-info&#x27;</span>]\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-with-classes.vue --&gt;</span></pre></div><h2 id="lazy-loading-tab-content" class="bv-no-focus-ring"><span class="bd-content-title">Lazy loading tab content<a class="anchorjs-link" href="#lazy-loading-tab-content" aria-labelledby="lazy-loading-tab-content"></a></span></h2> <p>Sometimes it&#39;s preferred to load components &amp; data only when activating a tab, instead of loading all tabs (and associated data) when rendering the <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> set.</p> <p>Individual <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> components can be lazy loaded via the <code class="text-nowrap" translate="no">lazy</code> prop, which when set doesn&#39;t mount the content of the <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> until it is activated (shown), and will be un-mounted when the tab is deactivated (hidden):</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- This tabs content will always be mounted --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Regular tab&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I&#x27;m always mounted<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- This tabs content will not be mounted until the tab is shown --&gt;</span>\n  <span class="hljs-comment">&lt;!-- and will be un-mounted when hidden --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Lazy tab&quot;</span> <span class="hljs-attr">lazy</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I&#x27;m lazy mounted!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-lazy-tab.vue --&gt;</span></pre></div><p>One can also make all tab&#39;s lazy by setting the <code class="text-nowrap" translate="no">lazy</code> prop on the parent <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> component:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">lazy</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 1&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I&#x27;m lazy mounted!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tab 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b-alert</span> <span class="hljs-attr">show</span>&gt;</span>I&#x27;m lazy mounted too!<span class="hljs-tag">&lt;/<span class="hljs-name">b-alert</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-lazy.vue --&gt;</span></pre></div><h2 id="keyboard-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-labelledby="keyboard-navigation"></a></span></h2> <p>Keyboard navigation is enabled by default for ARIA compliance with tablists when a tab button has focus.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Keypress</th> <th>Action</th> </tr> </thead> <tbody><tr> <td><kbd class="notranslate" translate="no">Left</kbd> or <kbd class="notranslate" translate="no">Up</kbd></td> <td>Activate the previous non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Right</kbd> or <kbd class="notranslate" translate="no">Down</kbd></td> <td>Activate the next non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Left</kbd> or <kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Up</kbd></td> <td>Activate the first non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Home</kbd></td> <td>Activate the first non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Right</kbd> or <kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Down</kbd></td> <td>Activate the last non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">End</kbd></td> <td>Activate the last non-disabled tab</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Tab</kbd></td> <td>Move focus to the active tab content</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Tab</kbd></td> <td>Move focus to the previous control on the page</td> </tr> </tbody></table> </div><p>Disable keyboard navigation by setting the prop <code class="text-nowrap" translate="no">no-key-nav</code>. Behavior will now default to regular browser navigation with TAB key.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Keypress</th> <th>Action</th> </tr> </thead> <tbody><tr> <td><kbd class="notranslate" translate="no">Tab</kbd></td> <td>Move to the next tab button or control on the page</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Tab</kbd></td> <td>Move to the previous tab button or control on the page</td> </tr> <tr> <td><kbd class="notranslate" translate="no">Enter</kbd> or <kbd class="notranslate" translate="no">Space</kbd></td> <td>Activate current focused button&#39;s tab</td> </tr> </tbody></table> </div><h2 id="programmatically-activating-and-deactivating-tabs" class="bv-no-focus-ring"><span class="bd-content-title">Programmatically activating and deactivating tabs<a class="anchorjs-link" href="#programmatically-activating-and-deactivating-tabs" aria-labelledby="programmatically-activating-and-deactivating-tabs"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code> <code class="text-nowrap" translate="no">v-model</code> to control which tab is active by setting the <code class="text-nowrap" translate="no">v-model</code> to the index (zero-based) of the tab to be shown (see example below).</p> <p>Alternatively, you can use the <code class="text-nowrap" translate="no">active</code> prop on each <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> with the <code class="text-nowrap" translate="no">.sync</code> modifier to activate the tab, or to detect if a particular tab is active.</p> <p>Each <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> instance also provides two public methods to activate or deactivate the tab. The methods are <code class="text-nowrap" translate="no">.activate()</code> and <code class="text-nowrap" translate="no">.deactivate()</code>, respectively. If activation or deactivation fails (i.e. a tab is disabled or no tab is available to move activation to), then the currently active tab will remain active and the method will return <code class="text-nowrap" translate="no">false</code>. You will need a reference to the <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> in order to use these methods.</p> <h2 id="preventing-a-b-tab-from-being-activated" class="bv-no-focus-ring"><span class="bd-content-title">Preventing a <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> from being activated<a class="anchorjs-link" href="#preventing-a-b-tab-from-being-activated" aria-labelledby="preventing-a-b-tab-from-being-activated"></a></span></h2> <p>To prevent a tab from activating, simply set the <code class="text-nowrap" translate="no">disabled</code> prop on the <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> component.</p> <p>Alternatively, you can listen for the <code class="text-nowrap" translate="no">activate-tab</code> event, which provides an option to prevent the tab from activating. The <code class="text-nowrap" translate="no">activate-tab</code> event is emitted with three arguments:</p> <ul> <li><code class="text-nowrap" translate="no">newTabIndex</code>: The index of the tab that is going to be activated</li> <li><code class="text-nowrap" translate="no">prevTabIndex</code>: The index of the currently active tab</li> <li><code class="text-nowrap" translate="no">bvEvent</code>: The <code class="text-nowrap" translate="no">BvEvent</code> object. Call <code class="text-nowrap" translate="no">bvEvent.preventDefault()</code> to prevent <code class="text-nowrap" translate="no">newTabIndex</code> from being activated</li> </ul> <p>For accessibility reasons, when using the <code class="text-nowrap" translate="no">activate-tab</code> event to prevent a tab from activating, you should provide some means of notification to the user as to why the tab is not able to be activated. It is recommended to use the <code class="text-nowrap" translate="no">disabled</code> attribute on the <code class="text-nowrap" translate="no">&lt;b-tab&gt;</code> component instead of using the <code class="text-nowrap" translate="no">activate-tab</code> event (as <code class="text-nowrap" translate="no">disabled</code> is more intuitive for screen reader users).</p> <h2 id="advanced-examples" class="bv-no-focus-ring"><span class="bd-content-title">Advanced examples<a class="anchorjs-link" href="#advanced-examples" aria-labelledby="advanced-examples"></a></span></h2> <h3 id="external-controls-using-v-model" class="bv-no-focus-ring"><span class="bd-content-title">External controls using <code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#external-controls-using-v-model" aria-labelledby="external-controls-using-v-model"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Tabs with card integration --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;tabIndex&quot;</span> <span class="hljs-attr">small</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;General&quot;</span>&gt;</span>I&#x27;m the first fading tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Edit profile&quot;</span>&gt;</span>\n          I&#x27;m the second tab\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span>&gt;</span>I&#x27;m the card in tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Premium Plan&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Sibzamini!<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Info&quot;</span>&gt;</span>I&#x27;m the last tab<span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n\n    <span class="hljs-comment">&lt;!-- Control buttons--&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;tabIndex--&quot;</span>&gt;</span>Previous<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;tabIndex++&quot;</span>&gt;</span>Next<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-muted&quot;</span>&gt;</span>Current Tab: {{ tabIndex }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabIndex</span>: <span class="hljs-number">1</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-controls.vue --&gt;</span></pre></div><h3 id="dynamic-tabs--tabs-end-slot" class="bv-no-focus-ring"><span class="bd-content-title">Dynamic tabs + tabs-end slot<a class="anchorjs-link" href="#dynamic-tabs--tabs-end-slot" aria-labelledby="dynamic-tabs--tabs-end-slot"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">no-body</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-tabs</span> <span class="hljs-attr">card</span>&gt;</span>\n        <span class="hljs-comment">&lt;!-- Render Tabs, supply a unique `key` to each tab --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-tab</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in tabs&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;&#x27;dyn-tab-&#x27; + i&quot;</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#x27;Tab &#x27; + i&quot;</span>&gt;</span>\n          Tab contents {{ i }}\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-right&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;closeTab(i)&quot;</span>&gt;</span>\n            Close tab\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-tab</span>&gt;</span>\n\n        <span class="hljs-comment">&lt;!-- New Tab Button (Using tabs-end slot) --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">tabs-end</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;presentation&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;newTab&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n        <span class="hljs-comment">&lt;!-- Render this if no tabs --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">empty</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center text-muted&quot;</span>&gt;</span>\n            There are no open tabs<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n            Open a new tab using the <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span> button above.\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tabs</span>: [],\n        <span class="hljs-attr">tabCounter</span>: <span class="hljs-number">0</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">closeTab</span>(<span class="hljs-params">x</span>)</span> {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.tabs.length; i++) {\n          <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.tabs[i] === x) {\n            <span class="hljs-built_in">this</span>.tabs.splice(i, <span class="hljs-number">1</span>)\n          }\n        }\n      },\n      <span class="hljs-function"><span class="hljs-title">newTab</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.tabs.push(<span class="hljs-built_in">this</span>.tabCounter++)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tabs-dynamic.vue --&gt;</span></pre></div>'}}}]);