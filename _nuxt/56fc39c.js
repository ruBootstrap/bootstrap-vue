(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{584:function(n,l){n.exports={baseTOC:{top:"#модальное-окно",title:"Модальное окно",toc:[{href:"#обзор",label:"Обзор"},{href:"#переключатель-видимости-модального-окна",label:"Переключатель видимости модального окна",toc:[{href:"#использование-директивы-v-b-modal",label:"Использование директивы v-b-modal"},{href:"#использование-методов-экземпляра-thisbvmodalshow-и-thisbvmodalhide",label:"Использование методов экземпляра this.$bvModal.show() и this.$bvModal.hide()"},{href:"#использование-методов-компонента-show-hide-и-toggle",label:"Использование методов компонента show(), hide() и toggle()"},{href:"#использование-свойства-v-model",label:"Использование свойства v-model"},{href:"#использование-методов-области-видимости-слота",label:"Использование методов области видимости слота"},{href:"#отправка-событий-на-root",label:"Отправка событий на $root"},{href:"#предотвратить-закрытие",label:"Предотвратить закрытие"}]},{href:"#модальное-содержимое",label:"Модальное содержимое",toc:[{href:"#использование-сетки",label:"Использование сетки"},{href:"#подсказки-и-всплывающие-окна",label:"Подсказки и всплывающие окна"}]},{href:"#отложенная-загрузка-и-статические-модальные-окна",label:"Отложенная загрузка и статические модальные окна"},{href:"#стиль-опции-и-персонализация",label:"Стиль, опции и персонализация",toc:[{href:"#модальный-размер",label:"Модальный размер"},{href:"#прокрутка-длинного-контента",label:"Прокрутка длинного контента"},{href:"#вертикально-центрированное-модальное-окно",label:"Вертикально центрированное модальное окно"},{href:"#варианты",label:"Варианты"},{href:"#скрытие-фона",label:"Скрытие фона"},{href:"#отключить-анимацию-открытия-и-закрытия",label:"Отключить анимацию открытия и закрытия"},{href:"#размер-кнопки-нижнего-колонтитула",label:"Размер кнопки нижнего колонтитула"},{href:"#отключение-встроенных-кнопок-нижнего-колонтитула",label:"Отключение встроенных кнопок нижнего колонтитула"},{href:"#пользовательский-рендеринг-со-слотами",label:"Пользовательский рендеринг со слотами"}]},{href:"#множественная-модальная-поддержка",label:"Множественная модальная поддержка"},{href:"#модальные-окна-сообщений",label:"Модальные окна сообщений",toc:[{href:"#окно-сообщения-ok",label:"Окно сообщения OK"},{href:"#окно-сообщения-confirm",label:"Окно сообщения Confirm"},{href:"#примечания-к-окну-сообщения",label:"Примечания к окну сообщения"},{href:"#расширенное-использование-окна-сообщений",label:"Расширенное использование окна сообщений"}]},{href:"#прослушивание-модальных-изменений-через-события-root",label:"Прослушивание модальных изменений через события $root"},{href:"#доступность",label:"Доступность",toc:[{href:"#модальные-атрибуты-aria",label:"Модальные атрибуты ARIA"},{href:"#автофокус-при-открытии",label:"Автофокус при открытии"},{href:"#возврат-фокуса-к-элементу-запуска",label:"Возврат фокуса к элементу запуска"},{href:"#клавиатурная-навигация",label:"Клавиатурная навигация"},{href:"#доступность-директивы-v-b-modal",label:"Доступность директивы v-b-modal"}]}]},titleLead:'<h1 id="модальное-окно" class="bv-no-focus-ring"><span class="bd-content-title">Модальное окно</span></h1> <p class="bd-lead">Модальные окна оптимизированы, но гибкие диалоговые подсказки основаны на JavaScript и CSS. Они поддерживают ряд вариантов использования, от уведомлений пользователей до полностью настраиваемого контента, и содержат несколько полезных подкомпонентов, размеров, вариантов, доступности и многого другого.</p>',body:'<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-1</span>&gt;</span>Запустить демонстрацию модального окна<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>Привет из модального окна!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal.vue --&gt;</span></pre></div><h2 id="обзор" class="bv-no-focus-ring"><span class="bd-content-title">Обзор<a class="anchorjs-link" href="#обзор" aria-labelledby="обзор"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> по умолчанию имеет кнопки <strong>OK</strong> и <strong>Cancel</strong> в нижнем колонтитуле. Эти кнопки можно настроить, установив различные свойства компонента. Вы можете настроить размер кнопок, отключить кнопки, скрыть кнопку <strong>Cancel</strong> (т. е. <code class="text-nowrap" translate="no">ok-only</code>), выбрать вариант (например, <code class="text-nowrap" translate="no">danger</code> для красной кнопки <strong>OK</strong>) с помощью свойств <code class="text-nowrap" translate="no">ok-variant</code> и <code class="text-nowrap" translate="no">cancel-variant</code>, а также предоставлять настраиваемое содержимое кнопки, используя свойства <code class="text-nowrap" translate="no">ok-title</code> и <code class="text-nowrap" translate="no">cancel-title</code>, или используя именованные слоты <code class="text-nowrap" translate="no">modal-ok</code> и <code class="text-nowrap" translate="no">modal-cancel</code>.</p> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> поддерживает закрытие по ESC (включено по умолчанию), закрытие по щелчку фона (включено по умолчанию) и кнопку закрытия <code class="text-nowrap" translate="no">X</code> в заголовке (включено по умолчанию). Эти функции можно отключить, установив параметры <code class="text-nowrap" translate="no">no-close-on-esc</code>, <code class="text-nowrap" translate="no">no-close-on-backdrop</code> и <code class="text-nowrap" translate="no">hide-header-close</code> соответственно.</p> <p>Вы можете переопределить модальный заголовок с помощью именованного слота <code class="text-nowrap" translate="no">modal-title</code>, полностью переопределить заголовок с помощью слота <code class="text-nowrap" translate="no">modal-header</code> и полностью переопределить нижний колонтитул с помощью слота <code class="text-nowrap" translate="no">modal-footer</code>.</p> <p><strong>Примечание</strong>: при использовании слота <code class="text-nowrap" translate="no">modal-footer</code> кнопки <strong>OK</strong> и <strong>Cancel</strong> по умолчанию не будут присутствовать. Кроме того, если вы используете слот <code class="text-nowrap" translate="no">modal-header</code>, кнопка закрытия заголовка по умолчанию <code class="text-nowrap" translate="no">X</code> не будет присутствовать, и вы не сможете использовать слот <code class="text-nowrap" translate="no">modal-title</code>.</p> <p>Модальные окна не будут отображать свое содержимое в документе до тех пор, пока они не будут показаны (отложено отрисованы). Видимые модальные окна отображаются <strong>добавленными к элементу <code class="text-nowrap" translate="no">&lt;body&gt;</code></strong>. Размещение компонента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> не повлияет на макет, так как он всегда отображается как узел комментария-заполнителя (<code class="text-nowrap" translate="no">&lt;!----&gt;</code>). Вы можете вернуться к поведению более старых версий BootstrapVue с помощью <a href="#lazy-loading-and-static-modals" class="font-weight-bold">свойства <code class="text-nowrap" translate="no">static</code></a>.</p> <h2 id="переключатель-видимости-модального-окна" class="bv-no-focus-ring"><span class="bd-content-title">Переключатель видимости модального окна<a class="anchorjs-link" href="#переключатель-видимости-модального-окна" aria-labelledby="переключатель-видимости-модального-окна"></a></span></h2> <p>Есть несколько методов, которые вы можете использовать для переключения видимости <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>.</p> <h3 id="использование-директивы-v-b-modal" class="bv-no-focus-ring"><span class="bd-content-title">Использование директивы <code class="text-nowrap" translate="no">v-b-modal</code><a class="anchorjs-link" href="#использование-директивы-v-b-modal" aria-labelledby="использование-директивы-v-b-modal"></a></span></h3> <p>Другие элементы могут легко отображать модальные окна с помощью директивы <code class="text-nowrap" translate="no">v-b-modal</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Using modifiers --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.my-modal</span>&gt;</span>Показать модалку<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Using value --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal</span>=<span class="hljs-string">&quot;&#x27;my-modal&#x27;&quot;</span>&gt;</span>Показать модалку<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- The modal --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my-modal&quot;</span>&gt;</span>Привет из моей модалки!<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-directive.vue --&gt;</span></pre></div><p>Этот подход автоматически вернет фокус на элемент триггера после закрытия модального окна (аналогично функциональности Bootstrap по умолчанию). Другие подходы к переключению модальной видимости могут потребовать дополнительного кода для реализации этой функции специальных возможностей.</p> <p>Дополнительные сведения см. в разделе <a href="#accessibility" class="font-weight-bold">Специальные возможности</a> ниже.</p> <h3 id="использование-методов-экземпляра-thisbvmodalshow-и-thisbvmodalhide" class="bv-no-focus-ring"><span class="bd-content-title">Использование методов экземпляра <code class="text-nowrap" translate="no">this.$bvModal.show()</code> и <code class="text-nowrap" translate="no">this.$bvModal.hide()</code><a class="anchorjs-link" href="#использование-методов-экземпляра-thisbvmodalshow-и-thisbvmodalhide" aria-labelledby="использование-методов-экземпляра-thisbvmodalshow-и-thisbvmodalhide"></a></span></h3> <p>Когда BootstrapVue установлен как плагин или используется плагин <code class="text-nowrap" translate="no">ModalPlugin</code>, BootstrapVue будет внедрять объект <code class="text-nowrap" translate="no">$bvModal</code> в каждый экземпляр Vue (компоненты, приложения). <code class="text-nowrap" translate="no">this.$bvModal</code> предоставляет несколько методов, два из которых предназначены для отображения и скрытия модальных окон:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Метод</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">this.$bvModal.show(id)</code></td> <td>Показать модальное окно с указанным <code class="text-nowrap" translate="no">id</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">this.$bvModal.hide(id)</code></td> <td>Скрыть модальное окно с указанным <code class="text-nowrap" translate="no">id</code></td> </tr> </tbody></table> </div><p>Оба метода возвращаются сразу после вызова.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;show-btn&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$bvModal.show(&#x27;bv-modal-example&#x27;)&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bv-modal-example&quot;</span> <span class="hljs-attr">hide-footer</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">modal-title</span>&gt;</span>\n      Использование методов <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>$bvModal<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-block text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>Привет из этого модального окна!<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$bvModal.hide(&#x27;bv-modal-example&#x27;)&quot;</span>&gt;</span>Закрой меня<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-bv-modal-hide-show.vue --&gt;</span></pre></div><p>Объект <code class="text-nowrap" translate="no">this.$bvModal</code> также используется для отображения <a href="#modal-message-boxes" class="font-weight-bold">модальных окон сообщений</a>.</p> <h3 id="использование-методов-компонента-show-hide-и-toggle" class="bv-no-focus-ring"><span class="bd-content-title">Использование методов компонента <code class="text-nowrap" translate="no">show()</code>, <code class="text-nowrap" translate="no">hide()</code> и <code class="text-nowrap" translate="no">toggle()</code><a class="anchorjs-link" href="#использование-методов-компонента-show-hide-и-toggle" aria-labelledby="использование-методов-компонента-show-hide-и-toggle"></a></span></h3> <p>You can access modal using <code class="text-nowrap" translate="no">ref</code> attribute and then call the <code class="text-nowrap" translate="no">show()</code>, <code class="text-nowrap" translate="no">hide()</code> or <code class="text-nowrap" translate="no">toggle()</code> methods.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;show-btn&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showModal&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;toggle-btn&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleModal&quot;</span>&gt;</span>Переключить модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;my-modal&quot;</span> <span class="hljs-attr">hide-footer</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Использование методов компонента&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-block text-center&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>Привет из моей модалки!<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-danger&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hideModal&quot;</span>&gt;</span>Закрой меня<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-warning&quot;</span> <span class="hljs-attr">block</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleModal&quot;</span>&gt;</span>Переключи меня<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">showModal</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.$refs[<span class="hljs-string">&#x27;my-modal&#x27;</span>].show()\n      },\n      <span class="hljs-function"><span class="hljs-title">hideModal</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.$refs[<span class="hljs-string">&#x27;my-modal&#x27;</span>].hide()\n      },\n      <span class="hljs-function"><span class="hljs-title">toggleModal</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-comment">// Мы передаем идентификатор кнопки, на которую мы хотим вернуть фокус,</span>\n        <span class="hljs-comment">// когда модальное окно скрыто</span>\n        <span class="hljs-built_in">this</span>.$refs[<span class="hljs-string">&#x27;my-modal&#x27;</span>].toggle(<span class="hljs-string">&#x27;#toggle-btn&#x27;</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-methods.vue --&gt;</span></pre></div><p>Метод <code class="text-nowrap" translate="no">hide()</code> принимает необязательный строковый аргумент <code class="text-nowrap" translate="no">trigger</code> для определения того, что вызвало закрытие модального окна. См. подробности в разделе <a href="#prevent-closing" class="font-weight-bold">Предотвращение закрытия</a> ниже.</p> <p><strong>Примечание:</strong> Рекомендуется использовать методы <code class="text-nowrap" translate="no">this.$bvModal.show()</code> и <code class="text-nowrap" translate="no">this.$bvModal.hide()</code> (упомянутые в предыдущем разделе) вместо методов <code class="text-nowrap" translate="no">$ref</code>.</p> <h3 id="использование-свойства-v-model" class="bv-no-focus-ring"><span class="bd-content-title">Использование свойства <code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#использование-свойства-v-model" aria-labelledby="использование-свойства-v-model"></a></span></h3> <p>Свойство <code class="text-nowrap" translate="no">v-model</code> всегда автоматически синхронизируется с видимым состоянием <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, и вы можете показать/скрыть его с помощью <code class="text-nowrap" translate="no">v-model</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;modalShow = !modalShow&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;modalShow&quot;</span>&gt;</span>Привет из модального окна!<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">modalShow</span>: <span class="hljs-literal">false</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-v-model.vue --&gt;</span></pre></div><p>При использовании свойства <code class="text-nowrap" translate="no">v-model</code> <strong>не</strong> используйте свойство <code class="text-nowrap" translate="no">visible</code> одновременно.</p> <h3 id="использование-методов-области-видимости-слота" class="bv-no-focus-ring"><span class="bd-content-title">Использование методов области видимости слота<a class="anchorjs-link" href="#использование-методов-области-видимости-слота" aria-labelledby="использование-методов-области-видимости-слота"></a></span></h3> <p>Обратитесь к разделу <a href="#custom-rendering-with-slots" class="font-weight-bold">Пользовательский рендеринг со слотами</a> по использованию различных методов, передаваемых слотам с заданной областью действия для закрытия модальных окон.</p> <h3 id="отправка-событий-на-root" class="bv-no-focus-ring"><span class="bd-content-title">Отправка событий на $root<a class="anchorjs-link" href="#отправка-событий-на-root" aria-labelledby="отправка-событий-на-root"></a></span></h3> <p>Вы можете генерировать события <code class="text-nowrap" translate="no">bv::show::modal</code>, <code class="text-nowrap" translate="no">bv::hide::modal</code> и <code class="text-nowrap" translate="no">bv::toggle::modal</code> в <code class="text-nowrap" translate="no">$root</code> с первым аргументом, установленным в идентификатор модального окна. Необязательный второй аргумент может указать элемент, на который нужно вернуть фокус после закрытия модального окна. Вторым аргументом может быть селектор CSS, ссылка на элемент или ссылка на компонент (корневой элемент компонента будет сфокусирован).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showModal&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;btnShow&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleModal&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;btnToggle&quot;</span>&gt;</span>Переключить модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-1&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-block&quot;</span>&gt;</span>Привет из моей модалки!<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hideModal&quot;</span>&gt;</span>Закрой меня<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleModal&quot;</span>&gt;</span>Переключи меня<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre></div><div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-function"><span class="hljs-title">showModal</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::show::modal&#x27;</span>, <span class="hljs-string">&#x27;modal-1&#x27;</span>, <span class="hljs-string">&#x27;#btnShow&#x27;</span>)\n    },\n    <span class="hljs-function"><span class="hljs-title">hideModal</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::hide::modal&#x27;</span>, <span class="hljs-string">&#x27;modal-1&#x27;</span>, <span class="hljs-string">&#x27;#btnShow&#x27;</span>)\n    },\n    <span class="hljs-function"><span class="hljs-title">toggleModal</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::toggle::modal&#x27;</span>, <span class="hljs-string">&#x27;modal-1&#x27;</span>, <span class="hljs-string">&#x27;#btnToggle&#x27;</span>)\n    }\n  }\n}</pre></div><p><strong>Примечание:</strong> Рекомендуется использовать методы <code class="text-nowrap" translate="no">this.$bvModal.show()</code> и <code class="text-nowrap" translate="no">this.$bvModal.hide()</code> (упомянутые в предыдущем разделе) вместо генерации событий <code class="text-nowrap" translate="no">$root</code>.</p> <h3 id="предотвратить-закрытие" class="bv-no-focus-ring"><span class="bd-content-title">Предотвратить закрытие<a class="anchorjs-link" href="#предотвратить-закрытие" aria-labelledby="предотвратить-закрытие"></a></span></h3> <p>Чтобы предотвратить закрытие <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> (например, при сбое проверки). вы можете вызвать метод <code class="text-nowrap" translate="no">.preventDefault()</code> объекта события, переданного вашему <code class="text-nowrap" translate="no">ok</code> (кнопка <strong>OK</strong>), <code class="text-nowrap" translate="no">cancel</code> (кнопка <strong>Cancel</strong>), <code class="text-nowrap" translate="no">close</code> (кнопка закрытия модального заголовка ) и <code class="text-nowrap" translate="no">hide</code> обработчики событий. Обратите внимание, что <code class="text-nowrap" translate="no">.preventDefault()</code>, при использовании <strong>должен</strong> вызываться синхронно, так как асинхронность не поддерживается.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-prevent-closing</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      Представленные имена:\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;submittedNames.length === 0&quot;</span>&gt;</span>--<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">v-else</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0 pl-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;name in submittedNames&quot;</span>&gt;</span>{{ name }}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-prevent-closing&quot;</span>\n      <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;modal&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Введите ваше имя&quot;</span>\n      @<span class="hljs-attr">show</span>=<span class="hljs-string">&quot;resetModal&quot;</span>\n      @<span class="hljs-attr">hidden</span>=<span class="hljs-string">&quot;resetModal&quot;</span>\n      @<span class="hljs-attr">ok</span>=<span class="hljs-string">&quot;handleOk&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;form&quot;</span> @<span class="hljs-attr">submit.stop.prevent</span>=<span class="hljs-string">&quot;handleSubmit&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Имя&quot;</span>\n          <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;name-input&quot;</span>\n          <span class="hljs-attr">invalid-feedback</span>=<span class="hljs-string">&quot;Имя обязательно&quot;</span>\n          <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;nameState&quot;</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;name-input&quot;</span>\n            <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span>\n            <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;nameState&quot;</span>\n            <span class="hljs-attr">required</span>\n          &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">nameState</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">submittedNames</span>: []\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">checkFormValidity</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">const</span> valid = <span class="hljs-built_in">this</span>.$refs.form.checkValidity()\n        <span class="hljs-built_in">this</span>.nameState = valid\n        <span class="hljs-keyword">return</span> valid\n      },\n      <span class="hljs-function"><span class="hljs-title">resetModal</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.nameState = <span class="hljs-literal">null</span>\n      },\n      <span class="hljs-function"><span class="hljs-title">handleOk</span>(<span class="hljs-params">bvModalEvent</span>)</span> {\n        <span class="hljs-comment">// Предотвратить закрытие модального окна</span>\n        bvModalEvent.preventDefault()\n        <span class="hljs-comment">// Обработчик отправки триггера</span>\n        <span class="hljs-built_in">this</span>.handleSubmit()\n      },\n      <span class="hljs-function"><span class="hljs-title">handleSubmit</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-comment">// Выйти, если форма недействительна</span>\n        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.checkFormValidity()) {\n          <span class="hljs-keyword">return</span>\n        }\n        <span class="hljs-comment">// Вставьте имя в представленные имена</span>\n        <span class="hljs-built_in">this</span>.submittedNames.push(<span class="hljs-built_in">this</span>.name)\n        <span class="hljs-comment">// Скрыть модальное окно вручную</span>\n        <span class="hljs-built_in">this</span>.$nextTick(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.$bvModal.hide(<span class="hljs-string">&#x27;modal-prevent-closing&#x27;</span>)\n        })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-prevent-closing.vue --&gt;</span></pre></div><p><strong>Примечание</strong>: события <code class="text-nowrap" translate="no">ok</code>, <code class="text-nowrap" translate="no">cancel</code> и <code class="text-nowrap" translate="no">close</code> генерируются модальными встроенными кнопками <strong>OK</strong>, <strong>Cancel</strong> и закрытие заголовка (<strong>X</strong>) соответственно. Эти события не будут генерироваться по умолчанию, если вы разместили свои собственные кнопки в слоте <code class="text-nowrap" translate="no">modal-footer</code> или скрыли нижний колонтитул. В этом случае используйте событие <code class="text-nowrap" translate="no">hide</code> для управления отменой закрытия модального окна. Событие <code class="text-nowrap" translate="no">hide</code> генерируется всегда, даже если генерируются <code class="text-nowrap" translate="no">ok</code>, <code class="text-nowrap" translate="no">cancel</code> и <code class="text-nowrap" translate="no">close</code>.</p> <p>Объект событий <code class="text-nowrap" translate="no">ok</code>, <code class="text-nowrap" translate="no">cancel</code>, <code class="text-nowrap" translate="no">close</code> и <code class="text-nowrap" translate="no">hide</code> (<code class="text-nowrap" translate="no">BvModalEvent</code>) содержит несколько свойств и методов:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Свойство или метод</th> <th>Тип</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">preventDefault()</code></td> <td>Метод</td> <td>При вызове предотвращает закрытие модального окна</td> </tr> <tr> <td><code class="text-nowrap" translate="no">trigger</code></td> <td>Свойство</td> <td>Будет одним из: <code class="text-nowrap" translate="no">ok</code> (по умолчанию нажато <strong>OK</strong>), <code class="text-nowrap" translate="no">cancel</code> (по умолчанию нажато <strong>Cancel</strong>), <code class="text-nowrap" translate="no">esc</code> (если была нажата клавиша <kbd class="notranslate" translate="no">Esc</kbd>), <code class="text-nowrap" translate="no">backdrop</code> (если был нажат фон), <code class="text-nowrap" translate="no">headerclose</code> (если была нажата кнопка X в заголовке), первый аргумент, предоставленный методу <code class="text-nowrap" translate="no">hide()</code> или <code class="text-nowrap" translate="no">null</code> в противном случае.</td> </tr> <tr> <td><code class="text-nowrap" translate="no">target</code></td> <td>Свойство</td> <td>Ссылка на модальный элемент</td> </tr> <tr> <td><code class="text-nowrap" translate="no">vueTarget</code></td> <td>Свойство</td> <td>Ссылка на модальный экземпляр Vue VM</td> </tr> <tr> <td><code class="text-nowrap" translate="no">componentId</code></td> <td>Свойство</td> <td>Идентификатор модального окна</td> </tr> </tbody></table> </div><p>Вы можете установить значение <code class="text-nowrap" translate="no">trigger</code>, передав аргумент методу <code class="text-nowrap" translate="no">hide()</code> компонента для расширенного управления (т.е. определения того, какая кнопка или действие вызвало скрытие модального окна).</p> <p><strong>Примечание:</strong> <code class="text-nowrap" translate="no">ok</code>, <code class="text-nowrap" translate="no">cancel</code> или <code class="text-nowrap" translate="no">close</code> будут генерироваться только в том случае, если аргумент <code class="text-nowrap" translate="no">hide()</code> строго равен <code class="text-nowrap" translate="no">&#39;ok&#39;</code>, <code class="text-nowrap" translate="no">&#39;cancel&#39;</code> или <code class="text-nowrap" translate="no">&#39;headerclose&#39;</code> соответственно. Аргумент, переданный в <code class="text-nowrap" translate="no">hide()</code> будет помещен в свойство <code class="text-nowrap" translate="no">trigger</code> объекта события.</p> <h2 id="модальное-содержимое" class="bv-no-focus-ring"><span class="bd-content-title">Модальное содержимое<a class="anchorjs-link" href="#модальное-содержимое" aria-labelledby="модальное-содержимое"></a></span></h2> <h3 id="использование-сетки" class="bv-no-focus-ring"><span class="bd-content-title">Использование сетки<a class="anchorjs-link" href="#использование-сетки" aria-labelledby="использование-сетки"></a></span></h3> <p>Используйте сетку Bootstrap внутри модального окна, вставив <code class="text-nowrap" translate="no">&lt;b-container fluid&gt;</code> внутри модального тела. Затем используйте обычную систему сетки <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> (или <code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code>) и <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> как и везде.</p> <h3 id="подсказки-и-всплывающие-окна" class="bv-no-focus-ring"><span class="bd-content-title">Подсказки и всплывающие окна<a class="anchorjs-link" href="#подсказки-и-всплывающие-окна" aria-labelledby="подсказки-и-всплывающие-окна"></a></span></h3> <p>Подсказки и всплывающие окна могут быть размещены в модальных окнах по мере необходимости. Когда модальные окна закрыты, любые всплывающие подсказки и всплывающие окна также автоматически закрываются. Всплывающие подсказки и всплывающие окна автоматически добавляются к модальному элементу (для обеспечения правильной z-индексации), хотя вы можете переопределить, где они добавляются, указав идентификатор контейнера (подробности см. в документации по всплывающим подсказкам и всплывающим окнам).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modalPopover</span>&gt;</span>Показать модалку<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modalPopover&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Modal with Popover&quot;</span> <span class="hljs-attr">ok-only</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      This\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-popover</span>=<span class="hljs-string">&quot;&#x27;Popover inside a modal!&#x27;&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Popover&quot;</span>&gt;</span>Кнопка<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      вызывает всплывающее окно при нажатии.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      Эта <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">v-b-tooltip</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Подсказка в модальном окне!&quot;</span>&gt;</span>ссылка<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> будет показывать всплывающую подсказку при наведении.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-popover.vue --&gt;</span></pre></div><h2 id="отложенная-загрузка-и-статические-модальные-окна" class="bv-no-focus-ring"><span class="bd-content-title">Отложенная загрузка и статические модальные окна<a class="anchorjs-link" href="#отложенная-загрузка-и-статические-модальные-окна" aria-labelledby="отложенная-загрузка-и-статические-модальные-окна"></a></span></h2> <p>По умолчанию модальные окна не будут отображать свое содержимое в документе, пока они не будут показаны (лениво отрисованы). Модальные окна, которые при отображении добавляются к элементу <code class="text-nowrap" translate="no">&lt;body&gt;</code>. Компонент <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> не повлияет на макет, так как он отображается как узел комментария-заполнителя (<code class="text-nowrap" translate="no">&lt;!----&gt;</code>) в позиции DOM, в которой он размещен. Из-за процесса портала может потребоваться два или более <code class="text-nowrap" translate="no">$nextTick</code> для отображения изменений содержимого в цели.</p> <p>Модальные окна могут отображаться <em>на месте</em> в документе (т. е. там, где в документе находится компонент <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> ), установив свойство <code class="text-nowrap" translate="no">static</code> в значение <code class="text-nowrap" translate="no">true</code>. Обратите внимание, что содержимое модального окна будет отображаться в DOM, даже если модальное окно не отображается/не отображается, когда <code class="text-nowrap" translate="no">static</code> равно <code class="text-nowrap" translate="no">true</code>. Чтобы статические модальные окна <code class="text-nowrap" translate="no">static</code> отображались лениво, также установите параметр <code class="text-nowrap" translate="no">lazy</code> в значение <code class="text-nowrap" translate="no">true</code>. Затем модальное окно появится в документе <em>только</em> когда оно будет видимым. Обратите внимание, что в статическом режиме <code class="text-nowrap" translate="no">static</code> размещение компонента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> <em>может повлиять на макет</em> вашего документа и модального окна.</p> <p>Свойство <code class="text-nowrap" translate="no">lazy</code> не будет иметь никакого эффекта, если свойство <code class="text-nowrap" translate="no">static</code> не равно <code class="text-nowrap" translate="no">true</code> (нестатические модальные окна будут <em>всегда</em> отображаться лениво).</p> <h2 id="стиль-опции-и-персонализация" class="bv-no-focus-ring"><span class="bd-content-title">Стиль, опции и персонализация<a class="anchorjs-link" href="#стиль-опции-и-персонализация" aria-labelledby="стиль-опции-и-персонализация"></a></span></h2> <h3 id="модальный-размер" class="bv-no-focus-ring"><span class="bd-content-title">Модальный размер<a class="anchorjs-link" href="#модальный-размер" aria-labelledby="модальный-размер"></a></span></h3> <p>Модальные окна имеют три необязательных размера, доступных через свойство <code class="text-nowrap" translate="no">size</code>. Эти размеры срабатывают в определенных точках останова, чтобы избежать горизонтальных полос прокрутки на более узких окнах просмотра. Допустимые необязательные размеры: <code class="text-nowrap" translate="no">sm</code>, <code class="text-nowrap" translate="no">lg</code> и <code class="text-nowrap" translate="no">xl</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-xl</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>xl modal<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-lg</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>lg modal<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-sm</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>sm modal<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-xl&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;xl&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Extra Large Modal&quot;</span>&gt;</span>Привет, очень большое модальное окно!<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-lg&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Large Modal&quot;</span>&gt;</span>Привет, большое модальное окно!<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-sm&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Small Modal&quot;</span>&gt;</span>Привет, маленькое модальное окно!<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-sizes.vue --&gt;</span></pre></div><p>Свойство <code class="text-nowrap" translate="no">size</code> сопоставляет размер с классами <code class="text-nowrap" translate="no">.modal-&lt;size&gt;</code>.</p> <h3 id="прокрутка-длинного-контента" class="bv-no-focus-ring"><span class="bd-content-title">Прокрутка длинного контента<a class="anchorjs-link" href="#прокрутка-длинного-контента" aria-labelledby="прокрутка-длинного-контента"></a></span></h3> <p>Когда модальные окна становятся слишком длинными для области просмотра или устройства пользователя, они прокручиваются независимо от самой страницы. Попробуйте демо ниже, чтобы увидеть, что мы имеем в виду.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-tall</span>&gt;</span>Запустить переполненное модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-tall&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Overflowing Content&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 20&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>\n      Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n      in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-scroll-overflow.vue --&gt;</span></pre></div><p>Вы также можете создать модальное окно с возможностью прокрутки, которое позволяет прокручивать тело модального окна, установив для параметра <code class="text-nowrap" translate="no">scrollable</code> значение <code class="text-nowrap" translate="no">true</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-scrollable</span>&gt;</span>Запустить модальное окно с прокруткой<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-scrollable&quot;</span> <span class="hljs-attr">scrollable</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Scrollable Content&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 20&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>\n      Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n      in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-scrollable-content.vue --&gt;</span></pre></div><h3 id="вертикально-центрированное-модальное-окно" class="bv-no-focus-ring"><span class="bd-content-title">Вертикально центрированное модальное окно<a class="anchorjs-link" href="#вертикально-центрированное-модальное-окно" aria-labelledby="вертикально-центрированное-модальное-окно"></a></span></h3> <p>Вертикально центрируйте ваш модальный экран в окне просмотра, установив свойство <code class="text-nowrap" translate="no">centered</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-center</span>&gt;</span>Запуск по центру модального окна<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-center&quot;</span> <span class="hljs-attr">centered</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>Вертикально центрированное модальное окно!<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-center-vertically.vue --&gt;</span></pre></div><p>Не стесняйтесь смешивать вертикальное <code class="text-nowrap" translate="no">centered</code> с <code class="text-nowrap" translate="no">scrollable</code>.</p> <h3 id="варианты" class="bv-no-focus-ring"><span class="bd-content-title">Варианты<a class="anchorjs-link" href="#варианты" aria-labelledby="варианты"></a></span></h3> <p>Управляйте заголовком, нижним колонтитулом, фоном и текстом основного текста, устанавливая свойства <code class="text-nowrap" translate="no">header-bg-variant</code>, <code class="text-nowrap" translate="no">header-text-variant</code>, <code class="text-nowrap" translate="no">body-bg-variant</code>, <code class="text-nowrap" translate="no">body-text-variant</code>, <code class="text-nowrap" translate="no">footer-bg-variant</code> и <code class="text-nowrap" translate="no">footer-text-variant</code>. Используйте любой из стандартных вариантов Bootstrap, таких как <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">warning</code>, <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">success</code>, <code class="text-nowrap" translate="no">dark</code>, <code class="text-nowrap" translate="no">light</code> и т. д.</p> <p>Варианты нижней границы заголовка и верхней границы нижнего колонтитула можно контролировать с помощью свойств <code class="text-nowrap" translate="no">header-border-variant</code> и <code class="text-nowrap" translate="no">footer-border-variant</code> соответственно.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show=true&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Показать модалку<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;show&quot;</span>\n      <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Modal Variants&quot;</span>\n      <span class="hljs-attr">:header-bg-variant</span>=<span class="hljs-string">&quot;headerBgVariant&quot;</span>\n      <span class="hljs-attr">:header-text-variant</span>=<span class="hljs-string">&quot;headerTextVariant&quot;</span>\n      <span class="hljs-attr">:body-bg-variant</span>=<span class="hljs-string">&quot;bodyBgVariant&quot;</span>\n      <span class="hljs-attr">:body-text-variant</span>=<span class="hljs-string">&quot;bodyTextVariant&quot;</span>\n      <span class="hljs-attr">:footer-bg-variant</span>=<span class="hljs-string">&quot;footerBgVariant&quot;</span>\n      <span class="hljs-attr">:footer-text-variant</span>=<span class="hljs-string">&quot;footerTextVariant&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1 text-center&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Фон<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Текст<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Хедер<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;headerBgVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;headerTextVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Боди<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;bodyBgVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;bodyTextVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Футер<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;footerBgVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n              <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;footerTextVariant&quot;</span>\n              <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;variants&quot;</span>\n            &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">modal-footer</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-100&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-left&quot;</span>&gt;</span>Содержимое модального нижнего колонтитула<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n            <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>\n            <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n            <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-right&quot;</span>\n            @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;show=false&quot;</span>\n          &gt;</span>\n            Закрыть\n          <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">variants</span>: [<span class="hljs-string">&#x27;primary&#x27;</span>, <span class="hljs-string">&#x27;secondary&#x27;</span>, <span class="hljs-string">&#x27;success&#x27;</span>, <span class="hljs-string">&#x27;warning&#x27;</span>, <span class="hljs-string">&#x27;danger&#x27;</span>, <span class="hljs-string">&#x27;info&#x27;</span>, <span class="hljs-string">&#x27;light&#x27;</span>, <span class="hljs-string">&#x27;dark&#x27;</span>],\n        <span class="hljs-attr">headerBgVariant</span>: <span class="hljs-string">&#x27;dark&#x27;</span>,\n        <span class="hljs-attr">headerTextVariant</span>: <span class="hljs-string">&#x27;light&#x27;</span>,\n        <span class="hljs-attr">bodyBgVariant</span>: <span class="hljs-string">&#x27;light&#x27;</span>,\n        <span class="hljs-attr">bodyTextVariant</span>: <span class="hljs-string">&#x27;dark&#x27;</span>,\n        <span class="hljs-attr">footerBgVariant</span>: <span class="hljs-string">&#x27;warning&#x27;</span>,\n        <span class="hljs-attr">footerTextVariant</span>: <span class="hljs-string">&#x27;dark&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-variants.vue --&gt;</span></pre></div><p>Вы также можете применять произвольные классы к контейнеру модального диалога, содержимому (само модальное окно), заголовку, телу и нижнему колонтитулу через свойства <code class="text-nowrap" translate="no">modal-class</code>, <code class="text-nowrap" translate="no">content-class</code>, <code class="text-nowrap" translate="no">header-class</code>, <code class="text-nowrap" translate="no">body-class</code> и <code class="text-nowrap" translate="no">footer-class</code> соответственно. Свойства принимают либо строку, либо массив строк.</p> <h3 id="скрытие-фона" class="bv-no-focus-ring"><span class="bd-content-title">Скрытие фона<a class="anchorjs-link" href="#скрытие-фона" aria-labelledby="скрытие-фона"></a></span></h3> <p>Скройте фон модального окна, установив свойство <code class="text-nowrap" translate="no">hide-backdrop</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-no-backdrop</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-no-backdrop&quot;</span> <span class="hljs-attr">hide-backdrop</span> <span class="hljs-attr">content-class</span>=<span class="hljs-string">&quot;shadow&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>\n      Мы добавили служебный класс <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>&#x27;shadow&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span> в модальное содержимое для дополнительного эффекта.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- modal-no-backdrop.vue --&gt;</span></pre></div><p>Обратите внимание, что щелчок за пределами модального окна все равно закроет модальное окно, даже если фон скрыт. Вы можете отключить это поведение, установив свойство <code class="text-nowrap" translate="no">no-close-on-backdrop</code> на <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>.</p> <h3 id="отключить-анимацию-открытия-и-закрытия" class="bv-no-focus-ring"><span class="bd-content-title">Отключить анимацию открытия и закрытия<a class="anchorjs-link" href="#отключить-анимацию-открытия-и-закрытия" aria-labelledby="отключить-анимацию-открытия-и-закрытия"></a></span></h3> <p>Чтобы отключить затухающий переход/анимацию при открытии и закрытии модального окна, просто установите свойство <code class="text-nowrap" translate="no">no-fade</code> в компоненте <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>.</p> <h3 id="размер-кнопки-нижнего-колонтитула" class="bv-no-focus-ring"><span class="bd-content-title">Размер кнопки нижнего колонтитула<a class="anchorjs-link" href="#размер-кнопки-нижнего-колонтитула" aria-labelledby="размер-кнопки-нижнего-колонтитула"></a></span></h3> <p>Хотите маленькие или большие кнопки в нижнем колонтитуле по умолчанию? Просто установите свойство <code class="text-nowrap" translate="no">button-size</code> в <code class="text-nowrap" translate="no">&#39;sm&#39;</code> для маленьких кнопок или <code class="text-nowrap" translate="no">&#39;lg&#39;</code> для больших кнопок.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-footer-sm</span>&gt;</span>Маленькие кнопки нижнего колонтитула<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-footer-lg</span>&gt;</span>Большие кнопки нижнего колонтитула<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-footer-sm&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>Этот модал имеет маленькие кнопки нижнего колонтитула<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-footer-lg&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span> <span class="hljs-attr">button-size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>У этого модального окна большие кнопки нижнего колонтитула<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- modal-footer-btn-sizes.vue --&gt;</span></pre></div><p>Свойство <code class="text-nowrap" translate="no">button-size</code> не действует, если вы предоставили свой собственный нижний колонтитул через слот <a href="#custom-rendering-with-slots" class="font-weight-bold"><code class="text-nowrap" translate="no">modal-footer</code></a>.</p> <h3 id="отключение-встроенных-кнопок-нижнего-колонтитула" class="bv-no-focus-ring"><span class="bd-content-title">Отключение встроенных кнопок нижнего колонтитула<a class="anchorjs-link" href="#отключение-встроенных-кнопок-нижнего-колонтитула" aria-labelledby="отключение-встроенных-кнопок-нижнего-колонтитула"></a></span></h3> <p>Вы можете программно отключить встроенные кнопки нижнего колонтитула.</p> <p>Вы можете отключить кнопки <strong>Cancel</strong> и <strong>OK</strong> по отдельности, установив для свойств <code class="text-nowrap" translate="no">cancel-disabled</code> и <code class="text-nowrap" translate="no">ok-disabled</code> соответственно значение <code class="text-nowrap" translate="no">true</code>. Установите свойство на <code class="text-nowrap" translate="no">false</code>, чтобы снова активировать кнопку.</p> <p>Чтобы одновременно отключить кнопки <strong>Cancel</strong> и <strong>OK</strong>, просто установите для свойства <code class="text-nowrap" translate="no">busy</code> значение <code class="text-nowrap" translate="no">true</code>. Установите значение <code class="text-nowrap" translate="no">false</code>, чтобы снова активировать обе кнопки.</p> <h3 id="пользовательский-рендеринг-со-слотами" class="bv-no-focus-ring"><span class="bd-content-title">Пользовательский рендеринг со слотами<a class="anchorjs-link" href="#пользовательский-рендеринг-со-слотами" aria-labelledby="пользовательский-рендеринг-со-слотами"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> предоставляет несколько именованных слотов (некоторые из которых не являются обязательными), которые вы можете использовать для настройки содержимого различных разделов модального окна.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Слот</th> <th>Необязательно</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">default</code></td> <td>Да</td> <td>Основное содержание модального окна</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-title</code></td> <td>Да</td> <td>Контент для размещения в заголовке модального окна</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-header</code></td> <td>Да</td> <td>Контент разместить в шапке. Заменяет весь заголовок, включая кнопку закрытия</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-footer</code></td> <td>Да</td> <td>Контент для размещения в футере. Заменяет весь нижний колонтитул, включая кнопки</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-ok</code></td> <td>Нет</td> <td>Содержимое для размещения внутри кнопки OK нижнего колонтитула</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-cancel</code></td> <td>Нет</td> <td>Содержимое для размещения внутри кнопки CANCEL нижнего колонтитула</td> </tr> <tr> <td><code class="text-nowrap" translate="no">modal-header-close</code></td> <td>Нет</td> <td>Содержимое для размещения в заголовке кнопка CLOSE (<code class="text-nowrap" translate="no">x</code>)</td> </tr> </tbody></table> </div><p>Область действия, доступная для слотов, которые поддерживают необязательную область видимости:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Метод или Свойство</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">ok()</code></td> <td>Закрывает модальное окно и запускает события <code class="text-nowrap" translate="no">ok</code> и <code class="text-nowrap" translate="no">hide</code>, с <code class="text-nowrap" translate="no">bvModalEvent.trigger = &#39;ok&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">cancel()</code></td> <td>Закрывает модальное окно и запускает события <code class="text-nowrap" translate="no">cancel</code> и <code class="text-nowrap" translate="no">hide</code>, с <code class="text-nowrap" translate="no">bvModalEvent.trigger = &#39;cancel&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">close()</code></td> <td>Закрывает модальное окно и запускает события <code class="text-nowrap" translate="no">close</code> и <code class="text-nowrap" translate="no">hide</code>, с <code class="text-nowrap" translate="no">bvModalEvent.trigger = &#39;headerclose&#39;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">hide(trigger)</code></td> <td>Закрывает модальное окно и запускает событие <code class="text-nowrap" translate="no">hide</code>, с <code class="text-nowrap" translate="no">bvModalEvent.trigger = trigger</code> (триггер не является обязательным)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">visible</code></td> <td>Состояние видимости модального окна. <code class="text-nowrap" translate="no">true</code> если модальное окно видимо, и <code class="text-nowrap" translate="no">false</code>, если не видно</td> </tr> </tbody></table> </div><h4 id="пример-модального-окна-с-использованием-слотов-с-пользовательской-областью-действия" class="bv-no-focus-ring"><span class="bd-content-title">Пример модального окна с использованием слотов с пользовательской областью действия<a class="anchorjs-link" href="#пример-модального-окна-с-использованием-слотов-с-пользовательской-областью-действия" aria-labelledby="пример-модального-окна-с-использованием-слотов-с-пользовательской-областью-действия"></a></span></h4> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$bvModal.show(&#x27;modal-scoped&#x27;)&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-scoped&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">modal-header</span>=<span class="hljs-string">&quot;{ close }&quot;</span>&gt;</span>\n      <span class="hljs-comment">&lt;!-- Эмулировать встроенное модальное действие кнопки закрытия заголовка --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-danger&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;close()&quot;</span>&gt;</span>\n        Закрыть модальное кно\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>Заголовок модального окна<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;{ hide }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Тело модального окна с кнопкой<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide()&quot;</span>&gt;</span>Скрыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">modal-footer</span>=<span class="hljs-string">&quot;{ ok, cancel, hide }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>Кастомный футер<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n      <span class="hljs-comment">&lt;!-- Эмулировать встроенный модальный нижний колонтитул в порядке и отменить действия кнопки --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;ok()&quot;</span>&gt;</span>\n        Сохранить\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;danger&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;cancel()&quot;</span>&gt;</span>\n        Отменить\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-comment">&lt;!-- Кнопка с пользовательским значением триггера закрытия --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;hide(&#x27;forget&#x27;)&quot;</span>&gt;</span>\n        Забыть это\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-scoped-slots.vue --&gt;</span></pre></div><h2 id="множественная-модальная-поддержка" class="bv-no-focus-ring"><span class="bd-content-title">Множественная модальная поддержка<a class="anchorjs-link" href="#множественная-модальная-поддержка" aria-labelledby="множественная-модальная-поддержка"></a></span></h2> <p>В отличие от родного Bootstrap v4, BootstrapVue поддерживает одновременное открытие нескольких модальных окон.</p> <p>Чтобы отключить стек для определенного модального окна, просто установите свойство <code class="text-nowrap" translate="no">no-stacking</code> в компоненте <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>. Это скроет модальное окно до того, как будет показано другое модальное окно.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-multi-1</span>&gt;</span>Открыть Первое модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-multi-1&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Первое модальное окно&quot;</span> <span class="hljs-attr">ok-only</span> <span class="hljs-attr">no-stacking</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>Первое модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-multi-2</span>&gt;</span>Открыть Второе модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-multi-2&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Второе модальное окно&quot;</span> <span class="hljs-attr">ok-only</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2&quot;</span>&gt;</span>Второе модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-modal.modal-multi-3</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>Открыть Третье модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;modal-multi-3&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Третье модальное окно&quot;</span> <span class="hljs-attr">ok-only</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-1&quot;</span>&gt;</span>Третье модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-multiple.vue --&gt;</span></pre></div><p><strong>Примечания:</strong></p> <ul> <li>Избегайте вложения <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> <em>внутри</em> другого <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, так как он может быть &quot;ограничен&quot; границами родительского модального диалога (особенно при использовании статических модальных окон).</li> <li>Непрозрачный фон будет казаться темнее для каждого открытого модального окна. Это ожидаемое поведение, так как каждый фон открывается поверх других модальных окон и фонов.</li> </ul> <h2 id="модальные-окна-сообщений" class="bv-no-focus-ring"><span class="bd-content-title">Модальные окна сообщений<a class="anchorjs-link" href="#модальные-окна-сообщений" aria-labelledby="модальные-окна-сообщений"></a></span></h2> <p>BootstrapVue предоставляет несколько встроенных методов Message Box для открытого объекта <code class="text-nowrap" translate="no">this.$bvModal</code>. Эти методы позволяют генерировать простые модальные сообщения в стиле OK и Confirm из любой точки вашего приложения без необходимости явного размещения компонента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> на ваших страницах.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Метод</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">this.$bvModal.msgBoxOk(message, options)</code></td> <td>Откройте модальное окно с <code class="text-nowrap" translate="no">message</code> в качестве содержимого и одной кнопкой OK</td> </tr> <tr> <td><code class="text-nowrap" translate="no">this.$bvModal.msgBoxConfirm(message, options)</code></td> <td>Откройте модальное окно с <code class="text-nowrap" translate="no">message</code> в качестве содержимого и кнопками CANCEL и OK</td> </tr> </tbody></table> </div><p>Аргумент <code class="text-nowrap" translate="no">options</code> — это необязательный объект конфигурации для добавления заголовков и оформления модального окна сообщения. Свойства объекта соответствуют свойствам <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, за исключением формата <samp class="notranslate" translate="no">camelCase</samp> вместо <samp class="notranslate" translate="no">kebab-case</samp>.</p> <p>Оба метода возвращают <code class="text-nowrap" translate="no">Promise</code> (требуется полифилл для поддержки IE 11 и более старых браузеров), который преобразуется в значение, когда модальное окно скрывается. <code class="text-nowrap" translate="no">.msgBoxOk()</code> всегда принимает значение <code class="text-nowrap" translate="no">true</code>, тогда как <code class="text-nowrap" translate="no">.msgBoxConfirm()</code> принимает значение <code class="text-nowrap" translate="no">true</code> (нажата кнопка OK), <code class="text-nowrap" translate="no">false</code> (нажата кнопка CANCEL) или <code class="text-nowrap" translate="no">null</code> (если модальное окно было закрыто щелчком фона, нажатием <kbd class="notranslate" translate="no">Esc</kbd> или каким-либо другим способом.</p> <p>Если <code class="text-nowrap" translate="no">message</code> не указано, оба метода немедленно вернутся со значением <code class="text-nowrap" translate="no">undefined</code>.</p> <p>Вы можете использовать стили кода <code class="text-nowrap" translate="no">.then(..).catch(...)</code> или асинхронный <code class="text-nowrap" translate="no">await</code> (асинхронный <code class="text-nowrap" translate="no">await</code> требует современных браузеров или транспилера).</p> <h3 id="окно-сообщения-ok" class="bv-no-focus-ring"><span class="bd-content-title">Окно сообщения OK<a class="anchorjs-link" href="#окно-сообщения-ok" aria-labelledby="окно-сообщения-ok"></a></span></h3> <p>Пример окон сообщений OK</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsgBoxOne&quot;</span>&gt;</span>Простой msgBoxOk<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n     Возвращаемое значение: {{ String(boxOne) }}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsgBoxTwo&quot;</span>&gt;</span>msgBoxOk с опциями<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n     Возвращаемое значение: {{ String(boxTwo) }}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">boxOne</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">boxTwo</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">showMsgBoxOne</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.boxOne = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.$bvModal.msgBoxOk(<span class="hljs-string">&#x27;Действие завершено&#x27;</span>)\n          .then(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n            <span class="hljs-built_in">this</span>.boxOne = value\n          })\n          .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> {\n            <span class="hljs-comment">// An error occurred</span>\n          })\n      },\n      <span class="hljs-function"><span class="hljs-title">showMsgBoxTwo</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.boxTwo = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.$bvModal.msgBoxOk(<span class="hljs-string">&#x27;Данные успешно отправлены&#x27;</span>, {\n          <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Подтверждение&#x27;</span>,\n          <span class="hljs-attr">size</span>: <span class="hljs-string">&#x27;sm&#x27;</span>,\n          <span class="hljs-attr">buttonSize</span>: <span class="hljs-string">&#x27;sm&#x27;</span>,\n          <span class="hljs-attr">okVariant</span>: <span class="hljs-string">&#x27;success&#x27;</span>,\n          <span class="hljs-attr">headerClass</span>: <span class="hljs-string">&#x27;p-2 border-bottom-0&#x27;</span>,\n          <span class="hljs-attr">footerClass</span>: <span class="hljs-string">&#x27;p-2 border-top-0&#x27;</span>,\n          <span class="hljs-attr">centered</span>: <span class="hljs-literal">true</span>\n        })\n          .then(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n            <span class="hljs-built_in">this</span>.boxTwo = value\n          })\n          .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> {\n            <span class="hljs-comment">// Произошла ошибка</span>\n          })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-msg-box-ok.vue --&gt;</span></pre></div><h3 id="окно-сообщения-confirm" class="bv-no-focus-ring"><span class="bd-content-title">Окно сообщения Confirm<a class="anchorjs-link" href="#окно-сообщения-confirm" aria-labelledby="окно-сообщения-confirm"></a></span></h3> <p>Пример окна сообщения Confirm</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsgBoxOne&quot;</span>&gt;</span>Простой msgBoxConfirm<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n     Возвращаемое значение: {{ String(boxOne) }}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-1&quot;</span>&gt;</span>\n     <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsgBoxTwo&quot;</span>&gt;</span>msgBoxConfirm with options<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n     Возвращаемое значение: {{ String(boxTwo) }}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">boxOne</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">boxTwo</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">showMsgBoxOne</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.boxOne = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.$bvModal.msgBoxConfirm(<span class="hljs-string">&#x27;Уверены ли вы?&#x27;</span>)\n          .then(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n            <span class="hljs-built_in">this</span>.boxOne = value\n          })\n          .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> {\n            <span class="hljs-comment">// An error occurred</span>\n          })\n      },\n      <span class="hljs-function"><span class="hljs-title">showMsgBoxTwo</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.boxTwo = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.$bvModal.msgBoxConfirm(<span class="hljs-string">&#x27;Пожалуйста, подтвердите, что вы хотите удалить все.&#x27;</span>, {\n          <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Пожалуйста, подтвердите&#x27;</span>,\n          <span class="hljs-attr">size</span>: <span class="hljs-string">&#x27;sm&#x27;</span>,\n          <span class="hljs-attr">buttonSize</span>: <span class="hljs-string">&#x27;sm&#x27;</span>,\n          <span class="hljs-attr">okVariant</span>: <span class="hljs-string">&#x27;danger&#x27;</span>,\n          <span class="hljs-attr">okTitle</span>: <span class="hljs-string">&#x27;YES&#x27;</span>,\n          <span class="hljs-attr">cancelTitle</span>: <span class="hljs-string">&#x27;NO&#x27;</span>,\n          <span class="hljs-attr">footerClass</span>: <span class="hljs-string">&#x27;p-2&#x27;</span>,\n          <span class="hljs-attr">hideHeaderClose</span>: <span class="hljs-literal">false</span>,\n          <span class="hljs-attr">centered</span>: <span class="hljs-literal">true</span>\n        })\n          .then(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> {\n            <span class="hljs-built_in">this</span>.boxTwo = value\n          })\n          .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> {\n            <span class="hljs-comment">// An error occurred</span>\n          })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-modal-msg-box-confirm.vue --&gt;</span></pre></div><h3 id="примечания-к-окну-сообщения" class="bv-no-focus-ring"><span class="bd-content-title">Примечания к окну сообщения<a class="anchorjs-link" href="#примечания-к-окну-сообщения" aria-labelledby="примечания-к-окну-сообщения"></a></span></h3> <ul> <li>Внедрение <code class="text-nowrap" translate="no">this.$bvModal</code> доступно только при использовании полного плагина <code class="text-nowrap" translate="no">BootstrapVue</code> или плагина <code class="text-nowrap" translate="no">ModalPlugin</code>. Он недоступен при импорте только компонента <code class="text-nowrap" translate="no">b-modal</code>. Чтобы просто импортировать инъекцию, используйте плагин <code class="text-nowrap" translate="no">BVModalPlugin</code>.</li> <li>Новая инъекция <code class="text-nowrap" translate="no">$bvModal</code> (примесь) создается для каждой виртуальной машины Vue (т. е. каждого экземпляра компонента), и ее нельзя использовать через прямой доступ к <code class="text-nowrap" translate="no">Vue.prototype</code>, так как ей нужен доступ к контексту <code class="text-nowrap" translate="no">this</code> и <code class="text-nowrap" translate="no">$root</code>.</li> <li>Окна сообщений требуют поддержки <code class="text-nowrap" translate="no">Promise</code> в браузере. Если ваше приложение предназначено для старых браузеров, таких как IE 11, включите полифилл, обеспечивающий поддержку <code class="text-nowrap" translate="no">Promise</code>. Если поддержка <code class="text-nowrap" translate="no">Promise</code> не обнаружена, то методы окна сообщения немедленно вернут <code class="text-nowrap" translate="no">undefined</code>.</li> <li>Окна сообщений являются расширением компонента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> и, следовательно, поддерживают большинство свойств <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> (в формате <samp class="notranslate" translate="no">camelCase</samp>), за исключением следующих свойств: <code class="text-nowrap" translate="no">lazy</code>, <code class="text-nowrap" translate="no">static</code>, <code class="text-nowrap" translate="no">busy</code>, <code class="text-nowrap" translate="no">visible</code>, <code class="text-nowrap" translate="no">noStacking</code>, <code class="text-nowrap" translate="no">okOnly</code>, <code class="text-nowrap" translate="no">okDisabled</code> и <code class="text-nowrap" translate="no">cancelDisabled</code>.</li> <li>Когда <code class="text-nowrap" translate="no">title</code> (или <code class="text-nowrap" translate="no">titleHtml</code>) <em>не указан</em> в опциях, заголовок не будет отображаться.</li> <li>Когда <code class="text-nowrap" translate="no">title</code> (или <code class="text-nowrap" translate="no">titleHtml</code>) <em>указан</em> в опциях, кнопка закрытия заголовка не отображается по умолчанию. Вы можете включить кнопку закрытия заголовка, установив <code class="text-nowrap" translate="no">hideHeaderClose: false</code> в параметрах.</li> <li>Окна сообщений будут выдавать ошибку (отклонение обещания), если они будут закрыты/уничтожены до того, как они будут скрыты. Всегда включайте обработчик отклонения <code class="text-nowrap" translate="no">.catch(errHandler)</code>, если используется асинхронный код стиля <code class="text-nowrap" translate="no">await</code>.</li> <li>При использовании Vue Router (или аналогичного) окна сообщений будут закрываться и отклоняться, если маршрут изменится до того, как модальное окно скроется. Если вы хотите, чтобы окно сообщения оставалось открытым при изменении маршрута, используйте <code class="text-nowrap" translate="no">this.$root.$bvModal</code> insвместо <code class="text-nowrap" translate="no">this.$bvModal</code>.</li> <li>Окна сообщений не могут быть созданы во время рендеринга на стороне сервера (SSR).</li> <li>Окно сообщения <code class="text-nowrap" translate="no">message</code> в настоящее время не поддерживает строки HTML, однако вы можете передать <em>массив</em> из <code class="text-nowrap" translate="no">VNodes</code> в качестве <code class="text-nowrap" translate="no">message</code> для точного управления разметкой. Вы можете использовать метод Vue <a href="https://vuejs.org/v2/guide/render-function.html#createElement-Arguments" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">this.$createElement</code></a> для создания VNodes. Это также можно сделать для модального заголовка (путем передачи VNodes в параметр <code class="text-nowrap" translate="no">title</code>), текста кнопки OK (через опцию <code class="text-nowrap" translate="no">okTitle</code>), и текста кнопки CANCEL (через опцию <code class="text-nowrap" translate="no">cancelTitle</code>).</li> </ul> <h3 id="расширенное-использование-окна-сообщений" class="bv-no-focus-ring"><span class="bd-content-title">Расширенное использование окна сообщений<a class="anchorjs-link" href="#расширенное-использование-окна-сообщений" aria-labelledby="расширенное-использование-окна-сообщений"></a></span></h3> <p>При использовании методов <code class="text-nowrap" translate="no">this.$bvModal.msgBoxOk(...)</code> или <code class="text-nowrap" translate="no">this.$bvModal.msgBoxConfirm(...)</code> для создания модальных окон вы можете захотеть, чтобы модальное содержимое было чем-то большим, чем просто строковое сообщение. Как упоминалось в разделе <a href="#message-box-notes" class="font-weight-bold">заметки окна сообщения</a> выше, вы можете передать <em>массивы</em> виртуальных узлов в качестве сообщения и заголовка для более сложного содержимого.</p> <p>Используйте метод Vue <a href="https://vuejs.org/v2/guide/render-function.html#createElement-Arguments" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">this.$createElement</code></a> для создания VNodes.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;showMsgOk&quot;</span>&gt;</span>Показать окно сообщения OK с пользовательским содержимым<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">showMsgOk</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">const</span> h = <span class="hljs-built_in">this</span>.$createElement\n        <span class="hljs-comment">// Использование строки HTML</span>\n        <span class="hljs-keyword">const</span> titleVNode = h(<span class="hljs-string">&#x27;div&#x27;</span>, { <span class="hljs-attr">domProps</span>: { <span class="hljs-attr">innerHTML</span>: <span class="hljs-string">&#x27;Title from &lt;i&gt;HTML&lt;i&gt; string&#x27;</span> } })\n        <span class="hljs-comment">// Более сложная структура</span>\n        <span class="hljs-keyword">const</span> messageVNode = h(<span class="hljs-string">&#x27;div&#x27;</span>, { <span class="hljs-attr">class</span>: [<span class="hljs-string">&#x27;foobar&#x27;</span>] }, [\n          h(<span class="hljs-string">&#x27;p&#x27;</span>, { <span class="hljs-attr">class</span>: [<span class="hljs-string">&#x27;text-center&#x27;</span>] }, [\n            <span class="hljs-string">&#x27; Flashy &#x27;</span>,\n            h(<span class="hljs-string">&#x27;strong&#x27;</span>, <span class="hljs-string">&#x27;msgBoxOk&#x27;</span>),\n            <span class="hljs-string">&#x27; message &#x27;</span>,\n          ]),\n          h(<span class="hljs-string">&#x27;p&#x27;</span>, { <span class="hljs-attr">class</span>: [<span class="hljs-string">&#x27;text-center&#x27;</span>] }, [h(<span class="hljs-string">&#x27;b-spinner&#x27;</span>)]),\n          h(<span class="hljs-string">&#x27;b-img&#x27;</span>, {\n            <span class="hljs-attr">props</span>: {\n              <span class="hljs-attr">src</span>: <span class="hljs-string">&#x27;https://picsum.photos/id/20/250/250&#x27;</span>,\n              <span class="hljs-attr">thumbnail</span>: <span class="hljs-literal">true</span>,\n              <span class="hljs-attr">center</span>: <span class="hljs-literal">true</span>,\n              <span class="hljs-attr">fluid</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">rounded</span>: <span class="hljs-string">&#x27;circle&#x27;</span>\n            }\n          })\n        ])\n        <span class="hljs-comment">// Мы должны передать сгенерированные VNodes как массивы</span>\n        <span class="hljs-built_in">this</span>.$bvModal.msgBoxOk([messageVNode], {\n          <span class="hljs-attr">title</span>: [titleVNode],\n          <span class="hljs-attr">buttonSize</span>: <span class="hljs-string">&#x27;sm&#x27;</span>,\n          <span class="hljs-attr">centered</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">size</span>: <span class="hljs-string">&#x27;sm&#x27;</span>\n        })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- modal-msg-box-advanced.vue --&gt;</span></pre></div><h2 id="прослушивание-модальных-изменений-через-события-root" class="bv-no-focus-ring"><span class="bd-content-title">Прослушивание модальных изменений через события $root<a class="anchorjs-link" href="#прослушивание-модальных-изменений-через-события-root" aria-labelledby="прослушивание-модальных-изменений-через-события-root"></a></span></h2> <p>Чтобы прослушать любое модальное открытие, используйте:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.$root.$on(<span class="hljs-string">&#x27;bv::modal::show&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">bvEvent, modalId</span>) =&gt;</span> {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Модальное окно скоро будет показано&#x27;</span>, bvEvent, modalId)\n    })\n  }\n}</pre></div><p>Обратитесь к разделу <a href="#comp-ref-b-modal" class="font-weight-bold">События</a> этой документации для получения полного списка генерируемых событий.</p> <h2 id="доступность" class="bv-no-focus-ring"><span class="bd-content-title">Доступность<a class="anchorjs-link" href="#доступность" aria-labelledby="доступность"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> предоставляет несколько функций специальных возможностей, включая автофокус, возврат фокуса, <em>фиксацию</em> фокуса клавиатуры (вкладки) и автоматические атрибуты <code class="text-nowrap" translate="no">aria-*</code>.</p> <p><strong>Примечание:</strong> Эффект анимации этого компонента зависит от медиа-запроса <code class="text-nowrap" translate="no">prefers-reduced-motion</code>. Дополнительную информацию см. в <a href="/docs/reference/accessibility" class="font-weight-bold">разделе с уменьшенным движением в нашей документации по специальным возможностям</a>.</p> <h3 id="модальные-атрибуты-aria" class="bv-no-focus-ring"><span class="bd-content-title">Модальные атрибуты ARIA<a class="anchorjs-link" href="#модальные-атрибуты-aria" aria-labelledby="модальные-атрибуты-aria"></a></span></h3> <p>Атрибуты <code class="text-nowrap" translate="no">aria-labelledby</code> и <code class="text-nowrap" translate="no">aria-describedby</code> автоматически появляются в модальном окне в большинстве случаев.</p> <ul> <li>Атрибут <code class="text-nowrap" translate="no">aria-labelledby</code> <strong>отсутствует</strong>, если вы скрыли заголовок, указали свой собственный заголовок или не указали модальный заголовок. Рекомендуется указать заголовок для ваших модальных окон (при использовании встроенного заголовка). Вы можете визуально скрыть заголовок заголовка, но сделать его доступным для программ чтения с экрана, установив свойство <code class="text-nowrap" translate="no">title-sr-only</code>. Если у вас нет заголовка, вы можете указать метку для модального окна, передав строку в свойство <code class="text-nowrap" translate="no">aria-label</code>.</li> <li>Атрибут <code class="text-nowrap" translate="no">aria-describedby</code> всегда будет указывать на содержимое тела модального окна.</li> <li>Если свойство <code class="text-nowrap" translate="no">aria-label</code> указано со строковым значением, атрибут <code class="text-nowrap" translate="no">aria-labelledby</code> не будет отображаться, даже если у вас есть заголовок/заголовок для вашего модального окна.</li> </ul> <p>Свойства <code class="text-nowrap" translate="no">aria-label</code> и <code class="text-nowrap" translate="no">title-sr-only</code> были добавлены в версии <code class="text-nowrap" translate="no">v2.0.0-rc.27</code>.</p> <h3 id="автофокус-при-открытии" class="bv-no-focus-ring"><span class="bd-content-title">Автофокус при открытии<a class="anchorjs-link" href="#автофокус-при-открытии" aria-labelledby="автофокус-при-открытии"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> будет автоматически фокусировать модальный <em>контейнер</em> при открытии.</p> <p>Вы можете предварительно сфокусировать элемент внутри <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, прослушивая событие <code class="text-nowrap" translate="no">shown</code> и вызывая метод <code class="text-nowrap" translate="no">focus()</code> элемента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>. <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> не будет пытаться сфокусироваться, если элемент уже имеет фокус внутри <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span> @<span class="hljs-attr">shown</span>=<span class="hljs-string">&quot;focusMyElement&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>&gt;</span>У меня нет фокуса<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-comment">&lt;!-- Элемент для получения фокуса при открытии модального окна --&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;focusThis&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span></pre></div><div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-function"><span class="hljs-title">focusMyElement</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">this</span>.$refs.focusThis.focus()\n    }\n  }\n}</pre></div><p>В качестве альтернативы, если вы используете элементы управления формы <code class="text-nowrap" translate="no">b-form-*</code>, вы можете использовать свойство <code class="text-nowrap" translate="no">autofocus</code>, чтобы автоматически фокусировать элемент управления формы при открытии модального окна. Обратите внимание, что свойство <code class="text-nowrap" translate="no">autofocus</code> не будет работать с <code class="text-nowrap" translate="no">b-modal</code>, если свойство <code class="text-nowrap" translate="no">static</code> используется без набора свойств <code class="text-nowrap" translate="no">lazy</code>, так как <code class="text-nowrap" translate="no">autofocus</code> происходит, когда элементы управления <code class="text-nowrap" translate="no">b-form-*</code> <em>монтируются в ДОМ</em>.</p> <p>Если вы хотите автоматически сфокусировать одну из <em>встроенных</em> модальных кнопок (<code class="text-nowrap" translate="no">ok</code>, <code class="text-nowrap" translate="no">cancel</code> или кнопку <code class="text-nowrap" translate="no">close</code> в заголовке, вы можете установить свойство <code class="text-nowrap" translate="no">auto-focus-button</code> в одно из значений <code class="text-nowrap" translate="no">&#39;ok&#39;</code>, <code class="text-nowrap" translate="no">&#39;cancel&#39;</code> или <code class="text-nowrap" translate="no">&#39;close&#39;</code> и <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> будут фокусировать указанную кнопку, если она существует. Эта функция также доступна для модальных окон сообщений.</p> <p class="alert alert-warning"> <strong>Примечание:</strong> <strong>не рекомендуется</strong> автофокусировать ввод или элемент управления внутри модального окна по соображениям доступности, так как пользователи программ чтения с экрана не будут знать контекст того, где находится ввод (объявление модального окна может не произноситься) . Лучше всего позволить <code class="notranslate" translate="no">&lt;b-modal&gt;</code> сфокусировать контейнер модального окна, позволяя сообщить модальную информацию пользователю, а затем позволить пользователю перейти к вводу с помощью табуляции. </p> <h3 id="возврат-фокуса-к-элементу-запуска" class="bv-no-focus-ring"><span class="bd-content-title">Возврат фокуса к элементу запуска<a class="anchorjs-link" href="#возврат-фокуса-к-элементу-запуска" aria-labelledby="возврат-фокуса-к-элементу-запуска"></a></span></h3> <p>Из соображений доступности желательно возвращать фокус элементу, вызвавшему открытие модального окна, когда оно закрывается.</p> <p><code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> попытается автоматически определить, какой элемент имел фокус до того, как модальное окно было открыто, и вернет фокус этому элементу, когда модальное окно скроется, если это возможно. Однако предоставляется несколько методов и опций, позволяющих вам указать элемент, на который нужно вернуть фокус после того, как модальное окно скрыто.</p> <h4 id="укажите-элемент-возврата-фокуса-с-помощью-свойства-return-focus" class="bv-no-focus-ring"><span class="bd-content-title">Укажите элемент возврата фокуса с помощью свойства <code class="text-nowrap" translate="no">return-focus</code><a class="anchorjs-link" href="#укажите-элемент-возврата-фокуса-с-помощью-свойства-return-focus" aria-labelledby="укажите-элемент-возврата-фокуса-с-помощью-свойства-return-focus"></a></span></h4> <p>Вы также можете указать элемент, на который будет возвращаться фокус при закрытии модального окна, установив для свойства <code class="text-nowrap" translate="no">return-focus</code> одно из следующих значений:</p> <ul> <li>Строка селектора запросов CSS (или идентификатор элемента с префиксом <code class="text-nowrap" translate="no">#</code>)</li> <li>Ссылка на компонент (которая монтируется на фокусируемом элементе, таком как <code class="text-nowrap" translate="no">&lt;b-button&gt;</code>)</li> <li>Ссылка на элемент DOM, который можно сфокусировать</li> </ul> <p>Если переданный элемент не может быть сфокусирован, тогда браузер определит, что имеет фокус (обычно <code class="text-nowrap" translate="no">&lt;body&gt;</code>, что нежелательно)</p> <p>Этот метод возврата фокуса удобен, когда вы используете методы <code class="text-nowrap" translate="no">show()</code> и <code class="text-nowrap" translate="no">hide()</code> или свойство <code class="text-nowrap" translate="no">v-model</code> элемента <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>. Обратите внимание, что это свойство имеет приоритет над другими методами указания возвращаемого элемента фокуса.</p> <h4 id="автоматический-возврат-фокуса" class="bv-no-focus-ring"><span class="bd-content-title">Автоматический возврат фокуса<a class="anchorjs-link" href="#автоматический-возврат-фокуса" aria-labelledby="автоматический-возврат-фокуса"></a></span></h4> <p>Когда <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> открывается с помощью директивы <code class="text-nowrap" translate="no">v-b-modal</code> для элемента, фокус автоматически возвращается к этому элементу при закрытии <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, если элемент не был указан через свойство <code class="text-nowrap" translate="no">return-focus</code>.</p> <h4 id="укажите-возврат-фокуса-через-событие" class="bv-no-focus-ring"><span class="bd-content-title">Укажите возврат фокуса через событие<a class="anchorjs-link" href="#укажите-возврат-фокуса-через-событие" aria-labelledby="укажите-возврат-фокуса-через-событие"></a></span></h4> <p>При использовании события <code class="text-nowrap" translate="no">bv::show::modal</code> (генерируемого в <code class="text-nowrap" translate="no">$root</code>) вы можете указать второй аргумент, который является элементом, на который нужно вернуть фокус. Этот аргумент принимает те же типы, что и свойство <code class="text-nowrap" translate="no">return-focus</code>.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::show::modal&#x27;</span>, <span class="hljs-string">&#x27;modal-1&#x27;</span>, <span class="hljs-string">&#x27;#focusThisOnClose&#x27;</span>)</pre></div><p><em>Совет:</em> если вы используете событие клика (или подобное) для запуска модального окна для открытия, передайте свойство события <code class="text-nowrap" translate="no">target</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$root.$emit(&#x27;bv::show::modal&#x27;, &#x27;modal-1&#x27;, $event.target)&quot;</span>&gt;</span>Открыть модальное окно<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre></div><p><strong>Примечание:</strong> Если для <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code> установлено свойство <code class="text-nowrap" translate="no">return-focus</code>, то элемент, указанный в событии, будет проигнорирован.</p> <h3 id="клавиатурная-навигация" class="bv-no-focus-ring"><span class="bd-content-title">Клавиатурная навигация<a class="anchorjs-link" href="#клавиатурная-навигация" aria-labelledby="клавиатурная-навигация"></a></span></h3> <p>При перемещении по элементам внутри <code class="text-nowrap" translate="no">&lt;b-modal&gt;</code>, если фокус попытается оставить модальное окно в документе, он вернется в модальное окно.</p> <p>Избегайте установки <code class="text-nowrap" translate="no">tabindex</code> для элементов внутри модального окна на любое значение, отличное от <code class="text-nowrap" translate="no">0</code> или <code class="text-nowrap" translate="no">-1</code>. Это затруднит навигацию и работу с содержимым страницы для людей, которые полагаются на вспомогательные технологии, и может сделать некоторые из ваших элементов недоступными с помощью навигации с помощью клавиатуры.</p> <p>Если некоторые элементы за пределами модального окна должны быть сфокусированы (например, для TinyMCE), вы можете добавить их в качестве селекторов CSS в свойство <code class="text-nowrap" translate="no">ignore-enforce-focus-selector</code> <span class="badge badge-secondary">2.4.0+</span>, например:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-modal</span>\n  <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;some-modal-id&quot;</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Modal with TinyMCE Editor&quot;</span>\n  <span class="hljs-attr">ignore-enforce-focus-selector</span>=<span class="hljs-string">&quot;.tox-tinymce-aux, .moxman-window, .tam-assetmanager-root&quot;</span>\n&gt;</span>\n  <span class="hljs-comment">&lt;!-- Модальный контент с редактором TinyMCE здесь --&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-modal</span>&gt;</span></pre></div><p>В некоторых случаях может потребоваться полностью отключить функцию принудительного фокуса. Вы можете сделать это, установив свойство <code class="text-nowrap" translate="no">no-enforce-focus</code>, хотя это <em>крайне не рекомендуется</em> из соображений доступности.</p> <h3 id="доступность-директивы-v-b-modal" class="bv-no-focus-ring"><span class="bd-content-title">Доступность директивы <code class="text-nowrap" translate="no">v-b-modal</code><a class="anchorjs-link" href="#доступность-директивы-v-b-modal" aria-labelledby="доступность-директивы-v-b-modal"></a></span></h3> <p>Примечания о доступности директивы <code class="text-nowrap" translate="no">v-b-modal</code>:</p> <ul> <li>Если элемент не является <code class="text-nowrap" translate="no">&lt;button&gt;</code> (или компонентом, который отображает <code class="text-nowrap" translate="no">&lt;button&gt;</code>), ARIA <code class="text-nowrap" translate="no">role</code> будет установлена на <code class="text-nowrap" translate="no">button</code>, а прослушиватели событий нажатия клавиши для <kbd class="notranslate" translate="no">Enter</kbd> и <kbd class="notranslate" translate="no">Space</kbd> будут добавлены вместе с прослушивателем кликов <code class="text-nowrap" translate="no">click</code>.</li> <li>Если элемент не является <code class="text-nowrap" translate="no">&lt;button&gt;</code> или <code class="text-nowrap" translate="no">&lt;a&gt;</code> (или компонентом, который отображает любой из них), то к элементу будет добавлен <code class="text-nowrap" translate="no">tabindex</code> равный <code class="text-nowrap" translate="no">0</code>, чтобы обеспечить доступность, если нет уже является набором <code class="text-nowrap" translate="no">tabindex</code>.</li> </ul>'}}}]);