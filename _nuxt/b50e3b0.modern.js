(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{472:function(n,t){n.exports={baseTOC:{top:"#nav",title:"Nav",toc:[{href:"#overview",label:"Overview"},{href:"#link-appearance",label:"Link appearance",toc:[{href:"#tab-style",label:"Tab style"},{href:"#pill-style",label:"Pill style"},{href:"#small",label:"Small"}]},{href:"#fill-and-justify",label:"Fill and justify",toc:[{href:"#fill",label:"Fill"},{href:"#justified",label:"Justified"}]},{href:"#alignment",label:"Alignment"},{href:"#vertical-variation",label:"Vertical variation"},{href:"#dropdown-support",label:"Dropdown support",toc:[{href:"#optionally-scoped-default-slot",label:"Optionally scoped default slot"},{href:"#lazy-dropdown",label:"Lazy dropdown"},{href:"#dropdown-placement",label:"Dropdown placement"},{href:"#dropdown-implementation-note",label:"Dropdown implementation note"}]},{href:"#nav-text-content",label:"Nav text content"},{href:"#nav-inline-forms",label:"Nav inline forms"},{href:"#tabbed-local-content-support",label:"Tabbed local content support"},{href:"#card-integration",label:"Card integration",toc:[{href:"#using-with-vue-router",label:"Using with Vue Router"}]},{href:"#accessibility",label:"Accessibility",toc:[{href:"#tabbed-interface-accessibility",label:"Tabbed interface accessibility"}]},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="nav" class="bv-no-focus-ring"><span class="bd-content-title">Nav</span></h1> <p class="bd-lead">Navigation available in Bootstrap share general markup and styles, from the base <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> class to the <code class="text-nowrap" translate="no">active</code> and <code class="text-nowrap" translate="no">disabled</code> states. Swap modifier props to switch between each style.</p>',body:'<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav.vue --&gt;</span></pre></div><h2 id="overview" class="bv-no-focus-ring"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-labelledby="overview"></a></span></h2> <p>The base <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> component is built with flexbox and provides a strong foundation for building all types of navigation components. It includes some style overrides (for working with lists), some link padding for larger hit areas, and basic disabled styling. No active states are included in the base nav.</p> <p><code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> supports the following child components:</p> <ul> <li><code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> for actionable links (or router-links)</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> for dropdowns</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code> for plain text content</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code> for inline forms</li> </ul> <h2 id="link-appearance" class="bv-no-focus-ring"><span class="bd-content-title">Link appearance<a class="anchorjs-link" href="#link-appearance" aria-labelledby="link-appearance"></a></span></h2> <p>Two style variations are supported: <code class="text-nowrap" translate="no">tabs</code> and <code class="text-nowrap" translate="no">pills</code>, which support <code class="text-nowrap" translate="no">active</code> state styling. These variants are mutually exclusive - use only one style or the other.</p> <h3 id="tab-style" class="bv-no-focus-ring"><span class="bd-content-title">Tab style<a class="anchorjs-link" href="#tab-style" aria-labelledby="tab-style"></a></span></h3> <p>Make the nav look like tabs by setting the <code class="text-nowrap" translate="no">tabs</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">tabs</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-tabs.vue --&gt;</span></pre></div><h3 id="pill-style" class="bv-no-focus-ring"><span class="bd-content-title">Pill style<a class="anchorjs-link" href="#pill-style" aria-labelledby="pill-style"></a></span></h3> <p>Use the pill style by setting the <code class="text-nowrap" translate="no">pills</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">pills</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-pills.vue --&gt;</span></pre></div><h3 id="small" class="bv-no-focus-ring"><span class="bd-content-title">Small<a class="anchorjs-link" href="#small" aria-labelledby="small"></a></span></h3> <p>Make the nav smaller by setting the <code class="text-nowrap" translate="no">small</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">small</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-small.vue --&gt;</span></pre></div><h2 id="fill-and-justify" class="bv-no-focus-ring"><span class="bd-content-title">Fill and justify<a class="anchorjs-link" href="#fill-and-justify" aria-labelledby="fill-and-justify"></a></span></h2> <p>Force your <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> content to extend the full available width.</p> <h3 id="fill" class="bv-no-focus-ring"><span class="bd-content-title">Fill<a class="anchorjs-link" href="#fill" aria-labelledby="fill"></a></span></h3> <p>To proportionately fill all available space with your <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> components, set the <code class="text-nowrap" translate="no">fill</code> prop. Notice that all horizontal space is occupied, but not every nav item has the same width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">tabs</span> <span class="hljs-attr">fill</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link with a long name <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-fill.vue --&gt;</span></pre></div><h3 id="justified" class="bv-no-focus-ring"><span class="bd-content-title">Justified<a class="anchorjs-link" href="#justified" aria-labelledby="justified"></a></span></h3> <p>For equal-width elements, set the <code class="text-nowrap" translate="no">justified</code> prop instead. All horizontal space will be occupied by nav links, but unlike <code class="text-nowrap" translate="no">fill</code> above, every <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> will be the same width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">tabs</span> <span class="hljs-attr">justified</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link with a long name <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-justified.vue --&gt;</span></pre></div><h2 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h2> <p>To align your <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> components, use the <code class="text-nowrap" translate="no">align</code> prop. Available values are <code class="text-nowrap" translate="no">left</code>, <code class="text-nowrap" translate="no">center</code> and <code class="text-nowrap" translate="no">right</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">tabs</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link with a long name <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-alignment.vue --&gt;</span></pre></div><h2 id="vertical-variation" class="bv-no-focus-ring"><span class="bd-content-title">Vertical variation<a class="anchorjs-link" href="#vertical-variation" aria-labelledby="vertical-variation"></a></span></h2> <p>By default <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> appear on a horizontal line. Stack your navigation by setting the <code class="text-nowrap" translate="no">vertical</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">vertical</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-25&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Another Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-vertical.vue --&gt;</span></pre></div><h2 id="dropdown-support" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown support<a class="anchorjs-link" href="#dropdown-support" aria-labelledby="dropdown-support"></a></span></h2> <p>Use <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> to place dropdown items within your nav.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">pills</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item-dropdown</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my-nav-dropdown&quot;</span>\n      <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span>\n      <span class="hljs-attr">toggle-class</span>=<span class="hljs-string">&quot;nav-link-custom&quot;</span>\n      <span class="hljs-attr">right</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>One<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Two<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Three<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-item-dropdown.vue --&gt;</span></pre></div><p>Sometimes you want to add your own class names to the generated dropdown toggle button, that by default have the classes <code class="text-nowrap" translate="no">nav-link</code> and <code class="text-nowrap" translate="no">dropdown-toggle</code>. Use the <code class="text-nowrap" translate="no">toggle-class</code> prop to add them (like above) which will render HTML similar to:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my-nav-dropdown&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item b-nav-dropdown dropdown&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">a</span>\n    <span class="hljs-attr">role</span>=<span class="hljs-string">&quot;button&quot;</span>\n    <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#my-nav-dropdown&quot;</span>\n    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;my-nav-dropdown__BV_button_&quot;</span>\n    <span class="hljs-attr">aria-haspopup</span>=<span class="hljs-string">&quot;true&quot;</span>\n    <span class="hljs-attr">aria-expanded</span>=<span class="hljs-string">&quot;false&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-link dropdown-toggle nav-link-custom&quot;</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></pre></div><p>Refer to <a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a> for a list of supported sub-components.</p> <h3 id="optionally-scoped-default-slot" class="bv-no-focus-ring"><span class="bd-content-title">Optionally scoped default slot<a class="anchorjs-link" href="#optionally-scoped-default-slot" aria-labelledby="optionally-scoped-default-slot"></a></span></h3> <p>The dropdown default slot is optionally scoped with the following scope available:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property or Method</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">hide()</code></td> <td>Can be used to close the dropdown menu. Accepts an optional boolean argument, which if <code class="text-nowrap" translate="no">true</code> returns focus to the toggle button</td> </tr> </tbody></table> </div><h3 id="lazy-dropdown" class="bv-no-focus-ring"><span class="bd-content-title">Lazy dropdown<a class="anchorjs-link" href="#lazy-dropdown" aria-labelledby="lazy-dropdown"></a></span></h3> <p>By default, <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> renders the menu contents in the DOM even when the menu is not shown. When there are a large number of dropdowns rendered on the same page, performance could be impacted due to larger overall memory utilization. You can instruct <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> to render the menu contents only when it is shown by setting the <code class="text-nowrap" translate="no">lazy</code> prop to true.</p> <h3 id="dropdown-placement" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown placement<a class="anchorjs-link" href="#dropdown-placement" aria-labelledby="dropdown-placement"></a></span></h3> <p>Use the dropdown props <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">dropup</code>, <code class="text-nowrap" translate="no">dropright</code>, <code class="text-nowrap" translate="no">dropleft</code>, <code class="text-nowrap" translate="no">no-flip</code>, and <code class="text-nowrap" translate="no">offset</code> to control the positioning of <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code>.</p> <p>Refer to the <a href="/docs/components/dropdown#positioning" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> positioning section</a> for details on the effects and usage of these props.</p> <h3 id="dropdown-implementation-note" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown implementation note<a class="anchorjs-link" href="#dropdown-implementation-note" aria-labelledby="dropdown-implementation-note"></a></span></h3> <p>Note that the toggle button is actually rendered as a link <code class="text-nowrap" translate="no">&lt;a&gt;</code> tag with <code class="text-nowrap" translate="no">role=&quot;button&quot;</code> for styling purposes, and typically has the <code class="text-nowrap" translate="no">href</code> set to <code class="text-nowrap" translate="no">#</code> unless an ID is provided via the <code class="text-nowrap" translate="no">id</code> prop.</p> <p>The toggle will prevent scroll-top-top behaviour (via JavaScript) when clicking the toggle link. In some cases when using SSR, and the user clicks the toggle button <em>before</em> Vue has had a chance to hydrate the component, the page will scroll to top. In these cases, simply providing a unique ID via the <code class="text-nowrap" translate="no">id</code> prop will prevent the unwanted scroll-to-top behaviour.</p> <h2 id="nav-text-content" class="bv-no-focus-ring"><span class="bd-content-title">Nav text content<a class="anchorjs-link" href="#nav-text-content" aria-labelledby="nav-text-content"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code> child component to place plain text content into the nav:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#1&quot;</span>&gt;</span>Link 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#2&quot;</span>&gt;</span>Link 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-text</span>&gt;</span>Plain text<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-text</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-text.vue --&gt;</span></pre></div><h2 id="nav-inline-forms" class="bv-no-focus-ring"><span class="bd-content-title">Nav inline forms<a class="anchorjs-link" href="#nav-inline-forms" aria-labelledby="nav-inline-forms"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code> child component to place an <em>inline</em> form into the nav:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">pills</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#1&quot;</span> <span class="hljs-attr">active</span>&gt;</span>Link 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#2&quot;</span>&gt;</span>Link 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-form</span> @<span class="hljs-attr">submit.stop.prevent</span>=<span class="hljs-string">&quot;alert(&#x27;Form Submitted&#x27;)&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Input&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>Ok<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-nav-form.vue --&gt;</span></pre></div><p>Refer to the <a href="/docs/components/form#inline-form" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form&gt;</code> inline</a> documentation for additional details on placing form controls.</p> <h2 id="tabbed-local-content-support" class="bv-no-focus-ring"><span class="bd-content-title">Tabbed local content support<a class="anchorjs-link" href="#tabbed-local-content-support" aria-labelledby="tabbed-local-content-support"></a></span></h2> <p>See the <a href="/docs/components/tabs" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code></a> component for creating tabbable panes of local content (not suited for navigation).</p> <h2 id="card-integration" class="bv-no-focus-ring"><span class="bd-content-title">Card integration<a class="anchorjs-link" href="#card-integration" aria-labelledby="card-integration"></a></span></h2> <p>Use a <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> in a <a href="/docs/components/card" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-card&gt;</code></a> header, by enabling the <code class="text-nowrap" translate="no">card-header</code> prop on <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> and setting either the <code class="text-nowrap" translate="no">pills</code> or <code class="text-nowrap" translate="no">tabs</code> props:</p> <p><strong>Tabs style:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Card Title&quot;</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-header</span> <span class="hljs-attr">header-tag</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">card-header</span> <span class="hljs-attr">tabs</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Inactive<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-header</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>\n        With supporting text below as a natural lead-in to additional content.\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Go somewhere<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-body</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- nav-card-tabs.vue --&gt;</span></pre></div><p><strong>Pill style:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Card Title&quot;</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-header</span> <span class="hljs-attr">header-tag</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">card-header</span> <span class="hljs-attr">pills</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Inactive<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-header</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>\n        With supporting text below as a natural lead-in to additional content.\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Go somewhere<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-body</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- nav-card-pills.vue --&gt;</span></pre></div><p><strong>Plain style:</strong></p> <p>The <code class="text-nowrap" translate="no">card-header</code> prop is only needed when you are applying <code class="text-nowrap" translate="no">tabs</code> or <code class="text-nowrap" translate="no">pills</code> style. Note that Bootstrap v4 SCSS does not have special styling for <code class="text-nowrap" translate="no">active</code> state plain style nav items.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Card Title&quot;</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-header</span> <span class="hljs-attr">header-tag</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">active</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span>&gt;</span>Inactive<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-header</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-card-text</span>&gt;</span>\n        With supporting text below as a natural lead-in to additional content.\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-text</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Go somewhere<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-body</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- nav-card-plain.vue --&gt;</span></pre></div><p>The <code class="text-nowrap" translate="no">card-header</code> prop has no styling effect if the <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> is in <code class="text-nowrap" translate="no">vertical</code> mode.</p> <h3 id="using-with-vue-router" class="bv-no-focus-ring"><span class="bd-content-title">Using with Vue Router<a class="anchorjs-link" href="#using-with-vue-router" aria-labelledby="using-with-vue-router"></a></span></h3> <p>Have your card <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> control vue router nested routes via <code class="text-nowrap" translate="no">&lt;router-view&gt;</code> or <code class="text-nowrap" translate="no">&lt;nuxt-child&gt;</code> components, to created tabbed content that changes with route URL:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no">// On page with route `/some/route`\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Card Title&quot;</span> <span class="hljs-attr">no-body</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-header</span> <span class="hljs-attr">header-tag</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav</span> <span class="hljs-attr">card-header</span> <span class="hljs-attr">tabs</span>&gt;</span>\n        <span class="hljs-comment">&lt;!-- &lt;b-nav-item&gt;&#x27;s with child routes. Note the trailing slash on the first &lt;b-nav-item&gt; --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/some/route/&quot;</span> <span class="hljs-attr">exact</span> <span class="hljs-attr">exact-active-class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>Active<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/some/route/foo&quot;</span> <span class="hljs-attr">exact</span> <span class="hljs-attr">exact-active-class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>Foo<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/some/route/bar&quot;</span> <span class="hljs-attr">exact</span> <span class="hljs-attr">exact-active-class</span>=<span class="hljs-string">&quot;active&quot;</span>&gt;</span>Bar<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-header</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card-body</span>&gt;</span>\n      <span class="hljs-comment">&lt;!-- Child route gets rendered in &lt;router-view&gt; or &lt;nuxt-child&gt; --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span>\n      <span class="hljs-comment">&lt;!-- Or if using Nuxt.js\n      &lt;nuxt-child&gt;&lt;/nuxt-child&gt;\n      --&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card-body</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre></div><p>Note: Vue Router does not support defining active routes with hashes (<code class="text-nowrap" translate="no">#</code>), which is why you must define the &quot;tab&quot; content as child routes.</p> <p><strong>Example router config for above:</strong></p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> routes = [\n  {\n    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/some/route&#x27;</span>,\n    <span class="hljs-comment">// We don&#x27;t provide a name on this parent route, but rather</span>\n    <span class="hljs-comment">// set the name on the default child route instead</span>\n    <span class="hljs-comment">// name: &#x27;some-route&#x27;,</span>\n    <span class="hljs-attr">component</span>: SomeRouteComponent,\n    <span class="hljs-comment">// Child route &quot;tabs&quot;</span>\n    <span class="hljs-attr">children</span>: [\n      <span class="hljs-comment">// Note we provide the above parent route name on the default child tab</span>\n      <span class="hljs-comment">// route to ensure this tab is rendered by default when using named routes</span>\n      { <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-attr">component</span>: DefaultTabComponent, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;some-route&#x27;</span> },\n      { <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-attr">component</span>: FooTabComponent },\n      { <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attr">component</span>: BarTabComponent }\n    ]\n  }\n]</pre></div><p>One can also use Vue Router <a href="https://router.vuejs.org/guide/essentials/named-routes.html#named-routes" target="_blank" rel="noopener">named routes</a> and/or route params instead of path based routes.</p> <p>For more details see:</p> <ul> <li><a href="https://router.vuejs.org/api/#router-view" target="_blank" rel="noopener">Vue Router <code class="text-nowrap" translate="no">&lt;router-view&gt;</code></a></li> <li><a href="https://nuxtjs.org/api/components-nuxt-child" target="_blank" rel="noopener">Nuxt.JS <code class="text-nowrap" translate="no">&lt;nuxt-child&gt;</code></a></li> </ul> <h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p>If you&#39;re using <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> to provide a navigation bar, be sure to add a <code class="text-nowrap" translate="no">role=&quot;navigation&quot;</code> to the most logical parent container of <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code>, or wrap a <code class="text-nowrap" translate="no">&lt;nav&gt;</code> element around <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code>. Do <strong>not</strong> add the role to the <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> itself, as this would prevent it from being announced as an actual list by assistive technologies.</p> <p>When using a <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> in your <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code>, be sure to assign a unique <code class="text-nowrap" translate="no">id</code> prop value to the <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> so that the appropriate <code class="text-nowrap" translate="no">aria-*</code> attributes can be automatically generated.</p> <h3 id="tabbed-interface-accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Tabbed interface accessibility<a class="anchorjs-link" href="#tabbed-interface-accessibility" aria-labelledby="tabbed-interface-accessibility"></a></span></h3> <p>Note that navigation bars, even if visually styled as tabs, should <strong>not</strong> be given <code class="text-nowrap" translate="no">role=&quot;tablist&quot;</code>, <code class="text-nowrap" translate="no">role=&quot;tab&quot;</code> or <code class="text-nowrap" translate="no">role=&quot;tabpanel&quot;</code> attributes. These are only appropriate for <a href="/docs/components/tabs" class="font-weight-bold">tabbed interfaces</a> that do not change the URL or <code class="text-nowrap" translate="no">$route</code>, as described in the <a href="https://www.w3.org/TR/wai-aria-practices/#tabpanel" target="_blank" rel="noopener">WAI ARIA Authoring Practices</a>. See <a href="/docs/components/tabs" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code></a> for dynamic tabbed interfaces that are compliant with WAI ARIA.</p> <p>Tabbed interfaces should avoid using dropdown menus, as this causes both usability and accessibility issues:</p> <ul> <li>From a usability perspective, the fact that the currently displayed tab’s trigger element is not immediately visible (as it’s inside the closed dropdown menu) can cause confusion.</li> <li>From an accessibility point of view, there is currently no sensible way to map this sort of construct to a standard WAI ARIA pattern, meaning that it cannot be easily made understandable to users of assistive technologies.</li> </ul> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/components/tabs" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-tabs&gt;</code></a> to create tabbable panes of local content, even via dropdown menus.</li> <li><a href="/docs/components/navbar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-navbar&gt;</code></a> a wrapper that positions branding, navigation, and other elements in a concise header.</li> <li><a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a> for sub-components that you can place inside <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code></li> <li><a href="/docs/reference/router-links" class="font-weight-bold">Router Link Support reference</a> for information about router-link specific props available on <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code></li> </ul>'}}}]);