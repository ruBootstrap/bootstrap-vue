(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{483:function(n,t){n.exports={baseTOC:{top:"#время",title:"Время",toc:[{href:"#обзор",label:"Обзор"},{href:"#возвращаемое-значение-v-model",label:"Возвращаемое значение v-model"},{href:"#отключено-и-только-для-чтения",label:"Отключено и только для чтения"},{href:"#стайлинг",label:"Стайлинг",toc:[{href:"#включение-секундной-кнопки",label:"Включение секундной кнопки"},{href:"#скрытие-верхнего-выбранного-заголовка-времени",label:"Скрытие верхнего выбранного заголовка времени"},{href:"#граница-и-отступы",label:"Граница и отступы"},{href:"#слот-по-умолчанию",label:"Слот по умолчанию"}]},{href:"#события",label:"События",toc:[{href:"#событие-input",label:"Событие input"},{href:"#событие-context",label:"Событие context"}]},{href:"#интернационализация",label:"Интернационализация",toc:[{href:"#понимание-hourcycle",label:"Понимание hourCycle"},{href:"#принудительный-12--или-24-часовой-интерфейс",label:"Принудительный 12- или 24-часовой интерфейс"}]},{href:"#доступность",label:"Доступность"},{href:"#замечания-по-реализации",label:"Замечания по реализации"},{href:"#смотрите-также",label:"Смотрите также"}]},titleLead:'<h1 id="время" class="bv-no-focus-ring"><span class="bd-content-title">Время</span></h1> <p class="bd-lead">Пользовательский компонент BootstrapVue <code class="text-nowrap" translate="no">&lt;b-time&gt;</code> создает виджет выбора времени, совместимый с WAI-ARIA, который можно использовать для управления другими компонентами или для создания настраиваемых входных данных для выбора времени.</p>',body:'<h2 id="обзор" class="bv-no-focus-ring"><span class="bd-content-title">Обзор<a class="anchorjs-link" href="#обзор" aria-labelledby="обзор"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> совместим со специальными возможностями WAI-ARIA и оптимизирован для управления с клавиатуры (стрелка, страница вверх/вниз, главная и конечная клавиши). Также поддерживается интернационализация, и по умолчанию используется локаль браузера или страницы, если локали не указаны.</p> <p>Если вам нужно средство выбора времени в качестве пользовательского элемента управления формой, вместо этого используйте компонент <a href="/docs/components/form-timepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code></a>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;auto&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span> @<span class="hljs-attr">context</span>=<span class="hljs-string">&quot;onContext&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Значение: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>&#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">onContext</span>(<span class="hljs-params">ctx</span>)</span> {\n        <span class="hljs-built_in">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time.vue --&gt;</span></pre></div><h2 id="возвращаемое-значение-v-model" class="bv-no-focus-ring"><span class="bd-content-title">Возвращаемое значение <code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#возвращаемое-значение-v-model" aria-labelledby="возвращаемое-значение-v-model"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> всегда возвращает строку в формате <code class="text-nowrap" translate="no">HH:mm:ss</code>, который является тем же форматом, который возвращается собственными элементами управления браузера <code class="text-nowrap" translate="no">&lt;input type=&quot;time&quot;&gt;</code>. Значение будет находиться в диапазоне от <code class="text-nowrap" translate="no">&#39;00:00:00&#39;</code> до <code class="text-nowrap" translate="no">&#39;23:59:59&#39;</code> (24-часовой формат с использованием синтаксиса часового цикла <code class="text-nowrap" translate="no">&#39;h23&#39;</code>)</p> <p>Если время не выбрано, то <code class="text-nowrap" translate="no">&lt;b-time&gt;</code> возвращает пустую строку (<code class="text-nowrap" translate="no">&#39;&#39;</code>).</p> <h2 id="отключено-и-только-для-чтения" class="bv-no-focus-ring"><span class="bd-content-title">Отключено и только для чтения<a class="anchorjs-link" href="#отключено-и-только-для-чтения" aria-labelledby="отключено-и-только-для-чтения"></a></span></h2> <p>Установка параметра <code class="text-nowrap" translate="no">disabled</code> удалит всю интерактивность компонента <code class="text-nowrap" translate="no">&lt;b-time&gt;</code>. Установка свойства <code class="text-nowrap" translate="no">readonly</code> отключит выбор времени, но сохранит фокус на вращающихся кнопках.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Select time interactive state&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;state&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Отключено<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;readonly&quot;</span>&gt;</span>Только чтение<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>Нормальное<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;disabled&quot;</span>\n      <span class="hljs-attr">:readonly</span>=<span class="hljs-string">&quot;readonly&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">state</span>: <span class="hljs-string">&#x27;disabled&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">disabled</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;disabled&#x27;</span>\n      },\n      <span class="hljs-function"><span class="hljs-title">readonly</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;readonly&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-disabled-readonly.vue --&gt;</span></pre></div><h2 id="стайлинг" class="bv-no-focus-ring"><span class="bd-content-title">Стайлинг<a class="anchorjs-link" href="#стайлинг" aria-labelledby="стайлинг"></a></span></h2> <h3 id="включение-секундной-кнопки" class="bv-no-focus-ring"><span class="bd-content-title">Включение секундной кнопки<a class="anchorjs-link" href="#включение-секундной-кнопки" aria-labelledby="включение-секундной-кнопки"></a></span></h3> <p>По умолчанию секундная кнопка не отображается. Чтобы включить раздел секунд, установите свойство <code class="text-nowrap" translate="no">show-seconds</code> в значение <code class="text-nowrap" translate="no">true</code>, чтобы активировать кнопку выбора секунд. Когда <code class="text-nowrap" translate="no">show-seconds</code> равно <code class="text-nowrap" translate="no">false</code> (или не указано), возвращаемое значение всегда будет иметь секундную часть строки времени, установленную на <code class="text-nowrap" translate="no">00</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">show-seconds</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>Значение: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-show-seconds.vue --&gt;</span></pre></div><h3 id="скрытие-верхнего-выбранного-заголовка-времени" class="bv-no-focus-ring"><span class="bd-content-title">Скрытие верхнего выбранного заголовка времени<a class="anchorjs-link" href="#скрытие-верхнего-выбранного-заголовка-времени" aria-labelledby="скрытие-верхнего-выбранного-заголовка-времени"></a></span></h3> <p>По умолчанию текущее выбранное время будет отображаться в верхней части компонента времени в формате, соответствующем языку локали.</p> <p>Вы можете скрыть этот заголовок с помощью параметра <code class="text-nowrap" translate="no">hide-header</code>. Обратите внимание, что это только визуально скрывает выбранное время, оставляя его доступным для пользователей программ чтения с экрана в виде области <code class="text-nowrap" translate="no">aria-live</code>.</p> <h3 id="граница-и-отступы" class="bv-no-focus-ring"><span class="bd-content-title">Граница и отступы<a class="anchorjs-link" href="#граница-и-отступы" aria-labelledby="граница-и-отступы"></a></span></h3> <p>Хотите контроль времени с рамкой с отступами? Используйте служебные классы Bootstrap border и padding, чтобы добавить границы и отступы:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;border rounded p-2&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;ru&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-border-padding.vue --&gt;</span></pre></div><h3 id="слот-по-умолчанию" class="bv-no-focus-ring"><span class="bd-content-title">Слот по умолчанию<a class="anchorjs-link" href="#слот-по-умолчанию" aria-labelledby="слот-по-умолчанию"></a></span></h3> <p>Предоставьте необязательный контент в нижней части интерфейса времени с помощью слота <code class="text-nowrap" translate="no">default</code>. Слот можно использовать для добавления таких кнопок, как Now или Reset, и т.д.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">show-seconds</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;ru&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-flex&quot;</span> <span class="hljs-attr">dir</span>=<span class="hljs-string">&quot;ltr&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-danger&quot;</span>\n        <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;value&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clearTime&quot;</span>\n      &gt;</span>\n        Очистить время\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n        <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-primary&quot;</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-auto&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;setNow&quot;</span>\n      &gt;</span>\n        Установить сейчас\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">setNow</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">const</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n        <span class="hljs-comment">// Grab the HH:mm:ss part of the time string</span>\n        <span class="hljs-built_in">this</span>.value = now.toTimeString().slice(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>)\n      },\n      <span class="hljs-function"><span class="hljs-title">clearTime</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.value = <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-default-slot.vue --&gt;</span></pre></div><h2 id="события" class="bv-no-focus-ring"><span class="bd-content-title">События<a class="anchorjs-link" href="#события" aria-labelledby="события"></a></span></h2> <h3 id="событие-input" class="bv-no-focus-ring"><span class="bd-content-title">Событие <code class="text-nowrap" translate="no">input</code><a class="anchorjs-link" href="#событие-input" aria-labelledby="событие-input"></a></span></h3> <p>Событие <code class="text-nowrap" translate="no">&#39;input&#39;</code> генерируется при обновлении <code class="text-nowrap" translate="no">v-model</code>. Событие имеет единственный аргумент, который представляет собой выбранное время в виде строки. Значение представляет собой строку в формате <code class="text-nowrap" translate="no">&#39;HH:mm:ss&#39;</code> (или пустую строку, если время не выбрано). Допустимые значения находятся в диапазоне от <code class="text-nowrap" translate="no">&#39;00:00:00&#39;</code> до <code class="text-nowrap" translate="no">23:59:59&#39;</code>.</p> <p>Если свойство <code class="text-nowrap" translate="no">show-seconds</code> не установлено, доля секунд значения времени всегда будет равна <code class="text-nowrap" translate="no">&#39;00&#39;</code>.</p> <p>Если установлены свойства <code class="text-nowrap" translate="no">disabled</code> или <code class="text-nowrap" translate="no">readonly</code>, событие <code class="text-nowrap" translate="no">&#39;input&#39;</code> <strong>не</strong> генерируется.</p> <h3 id="событие-context" class="bv-no-focus-ring"><span class="bd-content-title">Событие <code class="text-nowrap" translate="no">context</code><a class="anchorjs-link" href="#событие-context" aria-labelledby="событие-context"></a></span></h3> <p>Событие <code class="text-nowrap" translate="no">&#39;context&#39;</code> генерируется всякий раз, когда пользователь выбирает время или пользователь изменяет значение одной из кнопок. Он также будет сгенерирован при создании компонента (непосредственно перед вставкой в DOM) или при изменении разрешенной локали.</p> <p>Событие не будет генерироваться, когда установлены свойства <code class="text-nowrap" translate="no">disabled</code> или <code class="text-nowrap" translate="no">readonly</code> (за исключением начального генерирования при создании компонента времени).</p> <p>Событию <code class="text-nowrap" translate="no">&#39;context&#39;</code> передается объект контекста в качестве единственного аргумента со следующими свойствами:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Свойство</th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">value</code></td> <td>Текущее значение в виде строки <code class="text-nowrap" translate="no">HH:mm:ss</code> или пустой строки <code class="text-nowrap" translate="no">&#39;&#39;</code>, если время не выбрано</td> </tr> <tr> <td><code class="text-nowrap" translate="no">formatted</code></td> <td>Текущее значение, отформатированное в разрешенной локали, или значение свойства <code class="text-nowrap" translate="no">label-no-time</code>, если время не выбрано</td> </tr> <tr> <td><code class="text-nowrap" translate="no">hours</code></td> <td>Текущий выбранный час (всегда 24 часа, формат <code class="text-nowrap" translate="no">h23&#39;</code>) в виде числа или <code class="text-nowrap" translate="no">null</code>, если час не указан</td> </tr> <tr> <td><code class="text-nowrap" translate="no">minutes</code></td> <td>Текущее выбранное значение минут в виде числа или <code class="text-nowrap" translate="no">null</code>, если минут нет</td> </tr> <tr> <td><code class="text-nowrap" translate="no">seconds</code></td> <td>Текущее выбранное значение секунд в виде числа или <code class="text-nowrap" translate="no">null</code>, если нет секунд</td> </tr> <tr> <td><code class="text-nowrap" translate="no">locale</code></td> <td>Языковой стандарт, определяемый средством выбора времени, он <em>может</em> отличаться от запрошенного языкового стандарта</td> </tr> <tr> <td><code class="text-nowrap" translate="no">isRTL</code></td> <td>Будет <code class="text-nowrap" translate="no">true</code>, если локаль RTL (справа налево)</td> </tr> <tr> <td><code class="text-nowrap" translate="no">hour12</code></td> <td>Логическое значение, указывающее, использует ли интерфейс 12-часовой формат</td> </tr> <tr> <td><code class="text-nowrap" translate="no">hourCycle</code></td> <td>Строка, представляющая тип часового цикла, используемый для кнопок вращения: <code class="text-nowrap" translate="no">&#39;h11&#39;</code>, <code class="text-nowrap" translate="no">&#39;h12&#39;</code>, <code class="text-nowrap" translate="no">&#39;h23&#39;</code> или <code class="text-nowrap" translate="no">&#39;h24&#39;</code></td> </tr> </tbody></table> </div><p>Обратитесь к <a href="#internationalization" class="font-weight-bold">разделу интернационализации</a> для получения информации о свойствах контекста <code class="text-nowrap" translate="no">locale</code>, <code class="text-nowrap" translate="no">hour12</code> и <code class="text-nowrap" translate="no">hourCycle</code>.</p> <h2 id="интернационализация" class="bv-no-focus-ring"><span class="bd-content-title">Интернационализация<a class="anchorjs-link" href="#интернационализация" aria-labelledby="интернационализация"></a></span></h2> <p>Интернационализация интерфейса времени обеспечивается через <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">Intl.DateTimeFormat</code></a> и <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">Intl.NumberFormat</code></a>, за исключением меток, применяемых к элементам контроля времени (арии-метки, выбранный статус и т.д.). Вы должны предоставить свои собственные переводы для этих ярлыков. Доступные локали будут зависеть от браузера (не все браузеры поддерживают все локали).</p> <p>По умолчанию <code class="text-nowrap" translate="no">&lt;b-time&gt;</code> будет использовать локаль браузера по умолчанию, но вы можете указать локаль (или локали) для использования с помощью свойства <code class="text-nowrap" translate="no">locale</code>. Свойство принимает либо одну строку локали, либо массив строк локали (перечисленных в порядке от наиболее предпочтительной локали до наименее предпочтительной).</p> <p>Генерируемое событие <code class="text-nowrap" translate="no">&#39;context&#39;</code> будет включать в себя, к какой локали разрешен контроль времени (которая может не совпадать с запрошенной локалью, в зависимости от поддерживаемых локалей <code class="text-nowrap" translate="no">Intl</code>).</p> <p>Для рендеринга на стороне сервера (SSR) при использовании Node.js убедитесь, что используемая среда выполнения Node.js поддерживает <code class="text-nowrap" translate="no">Intl</code> и локали, которые вы будете использовать. Подробности см. в <a href="https://nodejs.org/api/intl.html" target="_blank" rel="noopener">документации поддержки Node Intl</a>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-locales&quot;</span>&gt;</span>Локаль:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-locales&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;locale&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;locales&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;auto&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-time</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n        <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;labels[locale] || {}&quot;</span>\n        <span class="hljs-attr">:locale</span>=<span class="hljs-string">&quot;locale&quot;</span>\n        <span class="hljs-attr">show-seconds</span>\n        @<span class="hljs-attr">context</span>=<span class="hljs-string">&quot;onContext&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-time</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>&#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\n  export default {\n    data() {\n      return {\n        value: &#x27;&#x27;,\n        context: null,\n        locale: &#x27;ru-RU&#x27;,\n        locales: [\n          { value: &#x27;ru-RU&#x27;, text: &#x27;Russian (ru-RU)&#x27; },\n          { value: &#x27;en-US&#x27;, text: &#x27;English US (en-US)&#x27; },\n          { value: &#x27;de&#x27;, text: &#x27;German (de)&#x27; },\n          { value: &#x27;ar-EG&#x27;, text: &#x27;Arabic Egyptian (ar-EG)&#x27; },\n          { value: &#x27;zh&#x27;, text: &#x27;Chinese (zh)&#x27; }\n        ],\n        labels: {\n          &#x27;ru-RU: {\n            labelHours: &#x27;Часы&#x27;,\n            labelMinutes: &#x27;Минуты&#x27;,\n            labelSeconds: &#x27;Секунды&#x27;,\n            labelIncrement: &#x27;Приращение&#x27;,\n            labelDecrement: &#x27;Уменьшение&#x27;,\n            labelSelected: &#x27;Выбранное время&#x27;,\n            labelNoTimeSelected: &#x27;Время не выбрано&#x27;\n          },\n          de: {\n            labelHours: &#x27;Stunden&#x27;,\n            labelMinutes: &#x27;Minuten&#x27;,\n            labelSeconds: &#x27;Sekunden&#x27;,\n            labelIncrement: &#x27;Erhöhen&#x27;,\n            labelDecrement: &#x27;Verringern&#x27;,\n            labelSelected: &#x27;Ausgewählte Zeit&#x27;,\n            labelNoTimeSelected: &#x27;Keine Zeit ausgewählt&#x27;\n          },\n          &#x27;ar-EG&#x27;: {\n            labelHours: &#x27;ساعات&#x27;,\n            labelMinutes: &#x27;الدقائق&#x27;,\n            labelSeconds: &#x27;ثواني&#x27;,\n            labelAmpm: &#x27;صباحا مساء&#x27;,\n            labelAm: &#x27;ص&#x27;,\n            labelPm: &#x27;م&#x27;,\n            labelIncrement: &#x27;زيادة&#x27;,\n            labelDecrement: &#x27;إنقاص&#x27;,\n            labelSelected: &#x27;الوقت المحدد&#x27;,\n            labelNoTimeSelected: &#x27;لا وقت المختار&#x27;\n          },\n          zh: {\n            labelHours: &#x27;小时&#x27;,\n            labelMinutes: &#x27;分钟&#x27;,\n            labelSeconds: &#x27;秒&#x27;,\n            labelAmpm: &#x27;上午下午&#x27;,\n            labelAm: &#x27;上午&#x27;,\n            labelPm: &#x27;下午&#x27;,\n            labelIncrement: &#x27;增量&#x27;,\n            labelDecrement: &#x27;减量&#x27;,\n            labelSelected: &#x27;选定时间&#x27;,\n            labelNoTimeSelected: &#x27;没有选择时间&#x27;\n          }\n        }\n      }\n    },\n    methods: {\n      onContext(ctx) {\n        this.context = ctx\n      }\n    }\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-time-i18n.vue --&gt;</span></pre></div><h3 id="понимание-hourcycle" class="bv-no-focus-ring"><span class="bd-content-title">Понимание <code class="text-nowrap" translate="no">hourCycle</code><a class="anchorjs-link" href="#понимание-hourcycle" aria-labelledby="понимание-hourcycle"></a></span></h3> <p>Во всем мире используются 2 основных типа хронометража (часов): 12-часовой формат и 24-часовой формат. Свойство <code class="text-nowrap" translate="no">hourCycle</code> позволяет вам получить доступ к типу часов, используемому конкретной локалью. Тип часового цикла может иметь несколько различных значений, которые перечислены в таблице ниже. <code class="text-nowrap" translate="no">hourCycle</code> сигнализирует о том, как время <code class="text-nowrap" translate="no">&#39;00:00:00&#39;</code> (начало дня) должно быть представлено/отформатировано для пользователя определенной локали. <a href="#context-event" class="font-weight-bold">Событие<code class="text-nowrap" translate="no">&#39;context&#39;</code></a> включает разрешенное значение <code class="text-nowrap" translate="no">hourCycle</code>.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th><code class="text-nowrap" translate="no">hourCycle</code></th> <th>Описание</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">&#39;h12&#39;</code></td> <td>Часовая система с использованием <code class="text-nowrap" translate="no">1</code>–<code class="text-nowrap" translate="no">12</code>. 12-часовые часы с полуночью, начинающейся в 12:00</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h23&#39;</code></td> <td>Часовая система с использованием <code class="text-nowrap" translate="no">0</code>–<code class="text-nowrap" translate="no">23</code>. 24-часовой формат, с полуночью, начинающейся в 0:00</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h11&#39;</code></td> <td>Часовая система с использованием <code class="text-nowrap" translate="no">0</code>–<code class="text-nowrap" translate="no">11</code>. 12-часовые часы с полуночью, начинающейся в 0:00</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h24&#39;</code></td> <td>Часовая система с использованием <code class="text-nowrap" translate="no">1</code>–<code class="text-nowrap" translate="no">24</code>. 24-часовой формат, с полуночью, начинающейся в 24:00</td> </tr> </tbody></table> </div><p>Собственный HTML5 <code class="text-nowrap" translate="no">&lt;input type=&quot;date&quot;&gt;</code> возвращает значение времени в формате <code class="text-nowrap" translate="no">&#39;h23&#39;</code>, а <code class="text-nowrap" translate="no">&lt;b-time&gt;</code> также возвращает v-model в формате <code class="text-nowrap" translate="no">&#39;h23&#39;</code>. Это значение может отличаться от того, что представляется пользователю через графический интерфейс (кнопки прокрутки) компонента <code class="text-nowrap" translate="no">&lt;b-time&gt;</code>, в зависимости от <a href="#internationalization" class="font-weight-bold">выбранной локали</a>.</p> <p><strong>Примечание:</strong> IE 11 <em>не поддерживает</em> разрешение значения локали <code class="text-nowrap" translate="no">hourCycle</code>, поэтому мы предполагаем либо <code class="text-nowrap" translate="no">h12</code> или <code class="text-nowrap" translate="no">h23</code> на основе разрешенного значения <code class="text-nowrap" translate="no">hour12</code>.</p> <h3 id="принудительный-12--или-24-часовой-интерфейс" class="bv-no-focus-ring"><span class="bd-content-title">Принудительный 12- или 24-часовой интерфейс<a class="anchorjs-link" href="#принудительный-12--или-24-часовой-интерфейс" aria-labelledby="принудительный-12--или-24-часовой-интерфейс"></a></span></h3> <p>12-часовой ввод по сравнению с 24-часовым определяется языковым стандартом клиентских браузеров по умолчанию (или языковым стандартом, полученным из свойства <code class="text-nowrap" translate="no">locale</code>). Чтобы принудительно использовать 12-часовой пользовательский интерфейс, установите для параметра <code class="text-nowrap" translate="no">hour12</code> значение <code class="text-nowrap" translate="no">true</code>. Чтобы принудительно использовать 24-часовой пользовательский интерфейс, установите для параметра <code class="text-nowrap" translate="no">hour12</code> значение <code class="text-nowrap" translate="no">false</code>. По умолчанию для свойства <code class="text-nowrap" translate="no">hour12</code> установлено значение <code class="text-nowrap" translate="no">null</code>, которое использует разрешенную локаль, чтобы определить, какой интерфейс использовать.</p> <p>Настройка свойства <code class="text-nowrap" translate="no">hour12</code> будет влиять на то, какой <a href="#understanding-the-hourcycle" class="font-weight-bold"><code class="text-nowrap" translate="no">hourCycle</code></a> разрешается для форматирования кнопки прокрутки часов. Обратите внимание, что хотя это может повлиять на формат кнопки прокручивания часов, но результат отформатированной строки времени <em>может</em> отображать формат <code class="text-nowrap" translate="no">&#39;h12</code> или <code class="text-nowrap" translate="no">&#39;h23&#39;</code> из-за ограничений в клиентской поддержке <code class="text-nowrap" translate="no">Intl.DateTimeFormat</code> для конкретной локали. Поэтому <strong>рекомендуется оставить свойство <code class="text-nowrap" translate="no">hour12</code> равным <code class="text-nowrap" translate="no">null</code> (по умолчанию)</strong>, чтобы показать форматирование времени/часа по умолчанию в локали.</p> <h2 id="доступность" class="bv-no-focus-ring"><span class="bd-content-title">Доступность<a class="anchorjs-link" href="#доступность" aria-labelledby="доступность"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> предоставляет множество специальных возможностей, таких как области <code class="text-nowrap" translate="no">aria-live</code>, роли, метки aria, сочетания клавиш и полная навигация с помощью клавиатуры для работы с большинством программ чтения с экрана.</p> <p>Клавиатурная навигация:</p> <ul> <li><kbd class="notranslate" translate="no">ArrowUp</kbd> Увеличивает текущее значение выбранной кнопки вращения</li> <li><kbd class="notranslate" translate="no">ArrowDown</kbd> Уменьшает текущее значение выбранной кнопки вращения</li> <li><kbd class="notranslate" translate="no">Home</kbd> Устанавливает выбранную кнопку прокрутки на минимальное значение</li> <li><kbd class="notranslate" translate="no">End</kbd> Устанавливает выбранную кнопку прокрутки на максимальное значение</li> <li><kbd class="notranslate" translate="no">PageUp</kbd> Увеличивает значение выбранной кнопки на шаг кнопки на большее значение</li> <li><kbd class="notranslate" translate="no">PageDown</kbd> Уменьшает значение выбранной кнопки на шаг кнопки на большее значение</li> <li><kbd class="notranslate" translate="no">ArrowRight</kbd> Перемещает фокус на следующую кнопку вращения в компоненте</li> <li><kbd class="notranslate" translate="no">ArrowLeft</kbd> Перемещает фокус на предыдущую кнопку прокрутки в компоненте</li> </ul> <p>Некоторые свойства <code class="text-nowrap" translate="no">label-*</code> не видны на экране, но используются для маркировки различных элементов в календаре для пользователей программ чтения с экрана. например свойство <code class="text-nowrap" translate="no">label-selected</code> добавляется к элементу, отображающему выбранное значение.</p> <p>При интернационализации средства выбора даты важно также обновить свойства <code class="text-nowrap" translate="no">label-*</code> с соответствующими переведенными строками, чтобы пользователи программ чтения с экрана, использующие разные языки, слышали правильные подсказки и описания.</p> <h2 id="замечания-по-реализации" class="bv-no-focus-ring"><span class="bd-content-title">Замечания по реализации<a class="anchorjs-link" href="#замечания-по-реализации" aria-labelledby="замечания-по-реализации"></a></span></h2> <p>Компонент <code class="text-nowrap" translate="no">&lt;b-time&gt;</code> основан на пользовательском компоненте BootstrapVue <a href="/docs/components/form-spinbutton" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-spinbutton&gt;</code></a>.</p> <p><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> использует служебные классы Bootstrap для границ и flex, а также классы кнопок (<code class="text-nowrap" translate="no">btn-*</code>) и класс <code class="text-nowrap" translate="no">form-control</code>. Пользовательский SCSS/CSS BootstrapVue также требуется для правильного стиля.</p> <h2 id="смотрите-также" class="bv-no-focus-ring"><span class="bd-content-title">Смотрите также<a class="anchorjs-link" href="#смотрите-также" aria-labelledby="смотрите-также"></a></span></h2> <ul> <li><a href="/docs/components/form-timepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> Ввод пользовательской формы выбора времени</a></li> <li><a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code> Виджет выбора даты календаря</a></li> <li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> Ввод пользовательской формы выбора даты</a></li> </ul>'}}}]);