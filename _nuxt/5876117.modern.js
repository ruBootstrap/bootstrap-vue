(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{451:function(n,t){n.exports={baseTOC:{top:"#form",title:"Form",toc:[{href:"#introduction-to-forms-and-controls",label:"Introduction to forms and controls"},{href:"#inline-form",label:"Inline form",toc:[{href:"#alternatives-to-hidden-labels",label:"Alternatives to hidden labels"}]},{href:"#related-form-control-and-layout-components",label:"Related form control and layout components"},{href:"#form-helper-components",label:"Form helper components",toc:[{href:"#form-text-helper",label:"Form text helper"},{href:"#feedback-helpers",label:"Feedback helpers"},{href:"#datalist-helper",label:"Datalist helper"}]},{href:"#validation",label:"Validation",toc:[{href:"#validation-mechanisms",label:"Validation mechanisms"}]}]},titleLead:'<h1 id="form" class="bv-no-focus-ring"><span class="bd-content-title">Form</span></h1> <p class="bd-lead">BootstrapVue form component and helper components that optionally support inline form styles and validation states. Pair them up with other BootstrapVue form control components for an easy customized, and responsive, layout with a consistent look and feel.</p>',body:'<h2 id="introduction-to-forms-and-controls" class="bv-no-focus-ring"><span class="bd-content-title">Introduction to forms and controls<a class="anchorjs-link" href="#introduction-to-forms-and-controls" aria-labelledby="introduction-to-forms-and-controls"></a></span></h2> <p>Be sure to use an appropriate <code class="text-nowrap" translate="no">type</code> on all inputs (e.g., <code class="text-nowrap" translate="no">email</code> for email address or <code class="text-nowrap" translate="no">number</code> for numerical information) to take advantage of newer input controls like email verification, number selection, and more.</p> <p>Here&#39;s a quick example to demonstrate BootstrapVue&#39;s form styles. Keep reading for documentation on supported components, form layout, and more.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form</span> @<span class="hljs-attr">submit</span>=<span class="hljs-string">&quot;onSubmit&quot;</span> @<span class="hljs-attr">reset</span>=<span class="hljs-string">&quot;onReset&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;show&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-group-1&quot;</span>\n        <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Email address:&quot;</span>\n        <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;input-1&quot;</span>\n        <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;We&#x27;ll never share your email with anyone else.&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-1&quot;</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;form.email&quot;</span>\n          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span>\n          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter email&quot;</span>\n          <span class="hljs-attr">required</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-group-2&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Your Name:&quot;</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;input-2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-2&quot;</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;form.name&quot;</span>\n          <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter name&quot;</span>\n          <span class="hljs-attr">required</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-group-3&quot;</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Food:&quot;</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;input-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-3&quot;</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;form.food&quot;</span>\n          <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;foods&quot;</span>\n          <span class="hljs-attr">required</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-group-4&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;form.checked&quot;</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;checkboxes-4&quot;</span>\n          <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        &gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;me&quot;</span>&gt;</span>Check me out<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;that&quot;</span>&gt;</span>Check that out<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Submit<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-card</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&quot;Form Data Result&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-0&quot;</span>&gt;</span>{{ form }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-card</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">form</span>: {\n          <span class="hljs-attr">email</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n          <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n          <span class="hljs-attr">food</span>: <span class="hljs-literal">null</span>,\n          <span class="hljs-attr">checked</span>: []\n        },\n        <span class="hljs-attr">foods</span>: [{ <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Select One&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span> }, <span class="hljs-string">&#x27;Carrots&#x27;</span>, <span class="hljs-string">&#x27;Beans&#x27;</span>, <span class="hljs-string">&#x27;Tomatoes&#x27;</span>, <span class="hljs-string">&#x27;Corn&#x27;</span>],\n        <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">onSubmit</span>(<span class="hljs-params">event</span>)</span> {\n        event.preventDefault()\n        alert(<span class="hljs-built_in">JSON</span>.stringify(<span class="hljs-built_in">this</span>.form))\n      },\n      <span class="hljs-function"><span class="hljs-title">onReset</span>(<span class="hljs-params">event</span>)</span> {\n        event.preventDefault()\n        <span class="hljs-comment">// Reset our form values</span>\n        <span class="hljs-built_in">this</span>.form.email = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.form.name = <span class="hljs-string">&#x27;&#x27;</span>\n        <span class="hljs-built_in">this</span>.form.food = <span class="hljs-literal">null</span>\n        <span class="hljs-built_in">this</span>.form.checked = []\n        <span class="hljs-comment">// Trick to reset/clear native browser form validation state</span>\n        <span class="hljs-built_in">this</span>.show = <span class="hljs-literal">false</span>\n        <span class="hljs-built_in">this</span>.$nextTick(<span class="hljs-function">() =&gt;</span> {\n          <span class="hljs-built_in">this</span>.show = <span class="hljs-literal">true</span>\n        })\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form.vue --&gt;</span></pre></div><h2 id="inline-form" class="bv-no-focus-ring"><span class="bd-content-title">Inline form<a class="anchorjs-link" href="#inline-form" aria-labelledby="inline-form"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">inline</code> prop on <code class="text-nowrap" translate="no">&lt;b-form&gt;</code> to display a series of labels, form controls, and buttons on a single horizontal row. Form controls within inline forms vary slightly from their default states.</p> <ul> <li>Controls are <code class="text-nowrap" translate="no">display: flex</code>, collapsing any HTML white space and allowing you to provide alignment control with spacing and flexbox utilities.</li> <li>Controls and input groups receive <code class="text-nowrap" translate="no">width: auto</code> to override the Bootstrap default width: 100%.</li> <li>Controls <strong>only appear inline in viewports that are at least 576px wide</strong> to account for narrow viewports on mobile devices.</li> </ul> <p>You may need to manually address the width and alignment of individual form controls with <a href="/docs/reference/spacing-classes" class="font-weight-bold">spacing utilities</a> (as shown below). Lastly, be sure to always include a <code class="text-nowrap" translate="no">&lt;label&gt;</code> with each form control, even if you need to hide it from non-screenreader visitors with class <code class="text-nowrap" translate="no">.sr-only</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form</span> <span class="hljs-attr">inline</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;inline-form-input-name&quot;</span>&gt;</span>Name<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;inline-form-input-name&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2 mr-sm-2 mb-sm-0&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Jane Doe&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;inline-form-input-username&quot;</span>&gt;</span>Username<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;@&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2 mr-sm-2 mb-sm-0&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;inline-form-input-username&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2 mr-sm-2 mb-sm-0&quot;</span>&gt;</span>Remember me<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-inline.vue --&gt;</span></pre></div><p>Custom form controls and selects are also supported.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form</span> <span class="hljs-attr">inline</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-sm-2&quot;</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;inline-form-custom-select-pref&quot;</span>&gt;</span>Preference<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;inline-form-custom-select-pref&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2 mr-sm-2 mb-sm-0&quot;</span>\n      <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;[{ text: &#x27;Choose...&#x27;, value: null }, &#x27;One&#x27;, &#x27;Two&#x27;, &#x27;Three&#x27;]&quot;</span>\n      <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;null&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2 mr-sm-2 mb-sm-0&quot;</span>&gt;</span>Remember my preference<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Save<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-inline-custom.vue --&gt;</span></pre></div><p><strong>Note:</strong> <em><code class="text-nowrap" translate="no">&lt;b-form-group&gt;</code> is not supported in <code class="text-nowrap" translate="no">inline</code> forms due to layout conflicts.</em></p> <h3 id="alternatives-to-hidden-labels" class="bv-no-focus-ring"><span class="bd-content-title">Alternatives to hidden labels<a class="anchorjs-link" href="#alternatives-to-hidden-labels" aria-labelledby="alternatives-to-hidden-labels"></a></span></h3> <p>Assistive technologies such as screen readers will have trouble with your forms if you don&#39;t include a label for every input. For these inline forms, you can hide the labels using the <code class="text-nowrap" translate="no">.sr-only</code> class. There are further alternative methods of providing a label for assistive technologies, such as the <code class="text-nowrap" translate="no">aria-label</code>, <code class="text-nowrap" translate="no">aria-labelledby</code> or <code class="text-nowrap" translate="no">title</code> attributes. If none of these are present, assistive technologies may resort to using the <code class="text-nowrap" translate="no">placeholder</code> attribute, if present, but note that use of <code class="text-nowrap" translate="no">placeholder</code> as a replacement for other labelling methods is not advised.</p> <h2 id="related-form-control-and-layout-components" class="bv-no-focus-ring"><span class="bd-content-title">Related form control and layout components<a class="anchorjs-link" href="#related-form-control-and-layout-components" aria-labelledby="related-form-control-and-layout-components"></a></span></h2> <p>See also:</p> <ul> <li><a href="/docs/components/form-input" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-input&gt;</code></a> Textual and text-like inputs</li> <li><a href="/docs/components/form-textarea" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code></a> Text area inputs</li> <li><a href="/docs/components/form-select" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-select&gt;</code></a> Select input</li> <li><a href="/docs/components/form-radio" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code></a> Radio Inputs</li> <li><a href="/docs/components/form-checkbox" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code></a> Checkbox Inputs</li> <li><a href="/docs/components/form-file" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code></a> File Input</li> <li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code></a> Date picker input</li> <li><a href="/docs/components/form-spinbutton" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-spinbutton&gt;</code></a> Numerical range spinbutton input</li> <li><a href="/docs/components/form-tags" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-tags&gt;</code></a> Customizable tag input</li> <li><a href="/docs/components/form-timepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code></a> Time picker custom form input</li> <li><a href="/docs/components/form-rating" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-rating&gt;</code></a> Star rating custom form input and display</li> <li><a href="/docs/components/button" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-button&gt;</code></a> Buttons</li> <li><a href="/docs/components/form-group" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-group&gt;</code></a> Form Input wrapper to generate form-groups that support labels, help text and feedback</li> <li><a href="/docs/components/input-group" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code></a> Form Inputs with add-ons</li> <li><a href="/docs/components/layout" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code></a> Create grid rows and columns with tighter margins (available via the <a href="/docs/components/layout" class="font-weight-bold">Layout and grid components</a>)</li> </ul> <h2 id="form-helper-components" class="bv-no-focus-ring"><span class="bd-content-title">Form helper components<a class="anchorjs-link" href="#form-helper-components" aria-labelledby="form-helper-components"></a></span></h2> <p>The following helper components are available with the <code class="text-nowrap" translate="no">Form</code> plugin:</p> <ul> <li><code class="text-nowrap" translate="no">&lt;b-form-text&gt;</code> Help text blocks for inputs</li> <li><code class="text-nowrap" translate="no">&lt;b-form-invalid-feedback&gt;</code> Invalid feedback text blocks for input <code class="text-nowrap" translate="no">invalid</code> states</li> <li><code class="text-nowrap" translate="no">&lt;b-form-valid-feedback&gt;</code> Valid feedback text blocks for input <code class="text-nowrap" translate="no">valid</code> states</li> <li><code class="text-nowrap" translate="no">&lt;b-form-datalist&gt;</code> Easily create a <code class="text-nowrap" translate="no">&lt;datalist&gt;</code> for use with <code class="text-nowrap" translate="no">&lt;b-form-input&gt;</code> or plain <code class="text-nowrap" translate="no">&lt;input&gt;</code></li> </ul> <h3 id="form-text-helper" class="bv-no-focus-ring"><span class="bd-content-title">Form text helper<a class="anchorjs-link" href="#form-text-helper" aria-labelledby="form-text-helper"></a></span></h3> <p>Display a block of help text below an input with the <code class="text-nowrap" translate="no">&lt;b-form-text&gt;</code> helper component. text is displayed with a muted color and slightly smaller font-size.</p> <p><strong>Tip:</strong> Help text should be explicitly associated with the form control it relates to using the <code class="text-nowrap" translate="no">aria-describedby</code> attribute. This will ensure that assistive technologies, such as screen readers, will announce this help text when the user focuses or enters the control.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form</span> @<span class="hljs-attr">submit.stop.prevent</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;text-password&quot;</span>&gt;</span>Password<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;text-password&quot;</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;password-help-block&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-text</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password-help-block&quot;</span>&gt;</span>\n      Your password must be 8-20 characters long, contain letters and numbers, and must not\n      contain spaces, special characters, or emoji.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-text</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">b-form</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-help-text.vue --&gt;</span></pre></div><h3 id="feedback-helpers" class="bv-no-focus-ring"><span class="bd-content-title">Feedback helpers<a class="anchorjs-link" href="#feedback-helpers" aria-labelledby="feedback-helpers"></a></span></h3> <p>The <code class="text-nowrap" translate="no">&lt;b-form-valid-feedback&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-form-invalid-feedback&gt;</code> helper components will display feedback (based on input state) as a block of colored text. They rely on being placed after an input (sibling) and will show based on the browser native validation state of the input. To force them to show, set the prop <code class="text-nowrap" translate="no">force-show</code> to <code class="text-nowrap" translate="no">true</code>, or bind the controls <code class="text-nowrap" translate="no">state</code> to the <code class="text-nowrap" translate="no">state</code> prop of the feedback helper, or set the <code class="text-nowrap" translate="no">was-validated</code> class on a parent element (such as a form). See the <strong>Validation</strong> section below for additional details.</p> <p>Use the optional Boolean prop <code class="text-nowrap" translate="no">tooltip</code> to change the display from a block to a static tooltip style. The feedback will typically appear below the form control. When this mode is enabled, it is important that the parent container have a <code class="text-nowrap" translate="no">position: relative:</code> css style (or <code class="text-nowrap" translate="no">position-relative</code> class). Note that tooltip style feedback may, since its positioning is static, obscure other inputs, labels, etc.</p> <p><strong>Note:</strong> Some form controls, such as <a href="/docs/components/form-radio#contextual-states" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code></a>, <a href="/docs/components/form-checkbox#contextual-states" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code></a>, and <a href="/docs/components/form-file" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code></a> have wrapper elements which will prevent the feedback text from automatically showing (as the feedback component is not a direct sibling of the form control&#39;s input). Use the feedback component&#39;s <code class="text-nowrap" translate="no">state</code> prop (bound to the state of the form control) or the <code class="text-nowrap" translate="no">force-show</code> prop to display the feedback.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form</span>  @<span class="hljs-attr">submit.stop.prevent</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;feedback-user&quot;</span>&gt;</span>User ID<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;userId&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;validation&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;feedback-user&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-invalid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;validation&quot;</span>&gt;</span>\n        Your user ID must be 5-12 characters long.\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-invalid-feedback</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-valid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;validation&quot;</span>&gt;</span>\n        Looks Good.\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-valid-feedback</span>&gt;</span>\n     <span class="hljs-tag">&lt;/<span class="hljs-name">b-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">userId</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">validation</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.userId.length &gt; <span class="hljs-number">4</span> &amp;&amp; <span class="hljs-built_in">this</span>.userId.length &lt; <span class="hljs-number">13</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-feedback-example.vue --&gt;</span></pre></div><h3 id="datalist-helper" class="bv-no-focus-ring"><span class="bd-content-title">Datalist helper<a class="anchorjs-link" href="#datalist-helper" aria-labelledby="datalist-helper"></a></span></h3> <p>For browsers that support <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">&lt;datalist&gt;</code></a> elements, the <code class="text-nowrap" translate="no">&lt;b-form-datalist&gt;</code> helper component will allow you to quickly create a <code class="text-nowrap" translate="no">&lt;datalist&gt;</code> and child <code class="text-nowrap" translate="no">&lt;option&gt;</code> elements via an array passed to the <code class="text-nowrap" translate="no">options</code> prop.</p> <p>You may also manually provide <code class="text-nowrap" translate="no">&lt;option&gt;</code> elements inside <code class="text-nowrap" translate="no">&lt;b-form-datalist&gt;</code>. They will appear below any <code class="text-nowrap" translate="no">&lt;option&gt;</code> elements generated from the <code class="text-nowrap" translate="no">options</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;input-with-list&quot;</span>&gt;</span>Input with datalist<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">list</span>=<span class="hljs-string">&quot;input-list&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-with-list&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-datalist</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input-list&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-datalist</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">options</span>: [<span class="hljs-string">&#x27;Apple&#x27;</span>, <span class="hljs-string">&#x27;Banana&#x27;</span>, <span class="hljs-string">&#x27;Grape&#x27;</span>, <span class="hljs-string">&#x27;Kiwi&#x27;</span>, <span class="hljs-string">&#x27;Orange&#x27;</span>]\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-datalist-example.vue --&gt;</span></pre></div><p><code class="text-nowrap" translate="no">&lt;b-form-datalist&gt;</code> is also available via the shorter alias of <code class="text-nowrap" translate="no">&lt;b-datalist&gt;</code>.</p> <p>See also:</p> <ul> <li><a href="/docs/components/form-input#datalist-support" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-input&gt; datalist</code></a> for datalist usage.</li> <li><a href="/docs/components/form-select#options-property" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-select&gt;</code> <code class="text-nowrap" translate="no">options</code> prop</a> docs for details on the formats and helper props associated with <code class="text-nowrap" translate="no">options</code>.</li> </ul> <h2 id="validation" class="bv-no-focus-ring"><span class="bd-content-title">Validation<a class="anchorjs-link" href="#validation" aria-labelledby="validation"></a></span></h2> <p>Disable browser native HTML5 validation by setting the <code class="text-nowrap" translate="no">novalidate</code> prop to true on <code class="text-nowrap" translate="no">&lt;b-form&gt;</code>.</p> <p>Set the <code class="text-nowrap" translate="no">validated</code> prop, on <code class="text-nowrap" translate="no">&lt;b-form&gt;</code>, to <code class="text-nowrap" translate="no">true</code> to add the Bootstrap v4 <code class="text-nowrap" translate="no">.was-validated</code> class to the form to trigger validation states</p> <p>All of the form controls support a <code class="text-nowrap" translate="no">state</code> prop, which can be used to set the form control into one of three contextual states:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (denotes invalid state) is great for when there&#39;s a blocking or required field. A user must fill in this field properly to submit the form.</li> <li><code class="text-nowrap" translate="no">true</code> (denotes valid state) is ideal for situations when you have per-field validation throughout a form and want to encourage a user through the rest of the fields.</li> <li><code class="text-nowrap" translate="no">null</code> Displays no validation state (neither valid nor invalid)</li> </ul> <p>Refer to the <a href="https://getbootstrap.com/docs/4.5/components/forms/#validation" target="_blank" rel="noopener">Bootstrap v4 Form Validation Documentation</a> for details on the new Bootstrap v4 validation states.</p> <h3 id="validation-mechanisms" class="bv-no-focus-ring"><span class="bd-content-title">Validation mechanisms<a class="anchorjs-link" href="#validation-mechanisms" aria-labelledby="validation-mechanisms"></a></span></h3> <p>Using 3<sup>rd</sup> party Vue-based validation libraries with BootstrapVue:</p> <ul> <li>BootstrapVue <a href="/docs/reference/validation" class="font-weight-bold">Form validation reference section</a></li> </ul> <p>Additional resources:</p> <ul> <li><a href="https://getbootstrap.com/docs/4.5/components/forms/#validation" target="_blank" rel="noopener">Bootstrap v4: Form Validation Documentation</a></li> <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation#Validating_forms_using_JavaScript" target="_blank" rel="noopener">MDN: Learn Form Validation - Using JavaScript API</a></li> <li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation" target="_blank" rel="noopener">MDN: HTML5 Constraint Validation</a></li> <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/ValidityState" target="_blank" rel="noopener">MDN: Validity State API</a></li> </ul>'}}}]);