(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{465:function(n,t){n.exports={baseTOC:{top:"#input-group",title:"Input Group",toc:[{href:"#usage",label:"Usage",toc:[{href:"#using-prepend-and-append-props",label:"Using prepend and append props"},{href:"#using-named-slots",label:"Using named slots"},{href:"#using-sub-components",label:"Using sub-components"}]},{href:"#supported-form-controls",label:"Supported form-controls"},{href:"#checkbox-and-radio-addons",label:"Checkbox and radio addons",toc:[{href:"#native-checkbox-and-radio-addons",label:"Native checkbox and radio addons"},{href:"#custom-radio-checkbox-and-switch-addons",label:"Custom radio, checkbox, and switch addons"}]},{href:"#multiple-inputs",label:"Multiple inputs"},{href:"#multiple-addons",label:"Multiple addons"},{href:"#dropdown-addons",label:"Dropdown addons"},{href:"#control-sizing",label:"Control sizing",toc:[{href:"#sizing-custom-radio-checkbox-and-switch-addons",label:"Sizing custom radio, checkbox and switch addons"}]},{href:"#contextual-states",label:"Contextual states"}]},titleLead:'<h1 id="input-group" class="bv-no-focus-ring"><span class="bd-content-title">Input Group</span></h1> <p class="bd-lead">Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs.</p>',body:'<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Using props --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;$&quot;</span> <span class="hljs-attr">append</span>=<span class="hljs-string">&quot;.00&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Using slots --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-danger&quot;</span>&gt;</span>!<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Using components --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Username&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group.vue --&gt;</span></pre></div><h2 id="usage" class="bv-no-focus-ring"><span class="bd-content-title">Usage<a class="anchorjs-link" href="#usage" aria-labelledby="usage"></a></span></h2> <p>You can attach addons using either props, named slots and/or sub-components.</p> <h3 id="using-prepend-and-append-props" class="bv-no-focus-ring"><span class="bd-content-title">Using <code class="text-nowrap" translate="no">prepend</code> and <code class="text-nowrap" translate="no">append</code> props<a class="anchorjs-link" href="#using-prepend-and-append-props" aria-labelledby="using-prepend-and-append-props"></a></span></h3> <p>Values will be internally wrapped by a <code class="text-nowrap" translate="no">&lt;b-input-group-text&gt;</code> to display correctly.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;$&quot;</span> <span class="hljs-attr">append</span>=<span class="hljs-string">&quot;.00&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">append</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-using-props.vue --&gt;</span></pre></div><h3 id="using-named-slots" class="bv-no-focus-ring"><span class="bd-content-title">Using named slots<a class="anchorjs-link" href="#using-named-slots" aria-labelledby="using-named-slots"></a></span></h3> <p>if you want better control over addons, you can use <code class="text-nowrap" translate="no">prepend</code> and <code class="text-nowrap" translate="no">append</code> slots instead.</p> <p>The slot content will automatically be wrapped by <a href="#using-sub-components" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-input-group-prepend&gt;</code> or <code class="text-nowrap" translate="no">&lt;b-input-group-append&gt;</code></a> to display correctly.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prepend</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-text</span> &gt;</span>Username<span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action A<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action B<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-using-slots.vue --&gt;</span></pre></div><h3 id="using-sub-components" class="bv-no-focus-ring"><span class="bd-content-title">Using sub-components<a class="anchorjs-link" href="#using-sub-components" aria-labelledby="using-sub-components"></a></span></h3> <p>Use the <code class="text-nowrap" translate="no">&lt;b-input-group-prepend&gt;</code> or <code class="text-nowrap" translate="no">&lt;b-input-group-append&gt;</code> to add arbitrary addons wherever you like, and use these components to group buttons in your input group. Single buttons must always be wrapped in these components for proper styling.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-info&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0.00&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-primary&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-text</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-icon</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;x&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-addons-placement.vue --&gt;</span></pre></div><p>Set the <code class="text-nowrap" translate="no">is-text</code> prop on <code class="text-nowrap" translate="no">&lt;b-input-group-prepend&gt;</code> or <code class="text-nowrap" translate="no">&lt;b-input-group-append&gt;</code> if the content is textual in nature to apply proper styling. Alternatively, place the <code class="text-nowrap" translate="no">&lt;b-input-group-text&gt;</code> subcomponent inside of the <code class="text-nowrap" translate="no">&lt;b-input-group-prepend&gt;</code> or <code class="text-nowrap" translate="no">&lt;b-input-group-append&gt;</code>. This also applies when you want to use on of <a href="/docs/icons" class="font-weight-bold">BootstrapVue&#39;s icons</a>.</p> <h2 id="supported-form-controls" class="bv-no-focus-ring"><span class="bd-content-title">Supported form-controls<a class="anchorjs-link" href="#supported-form-controls" aria-labelledby="supported-form-controls"></a></span></h2> <p>The following are the form controls supported as the input-group&#39;s <em>main</em> input element:</p> <ul> <li><a href="/docs/components/form-input" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-input&gt;</code></a></li> <li><a href="/docs/components/form-textarea" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code></a></li> <li><a href="/docs/components/form-select" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-select&gt;</code></a></li> <li><a href="/docs/components/form-file" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code></a></li> <li><a href="/docs/components/form-rating" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-rating&gt;</code></a></li> <li><a href="/docs/components/form-tags" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-tags&gt;</code></a></li> <li><a href="/docs/components/form-spinbutton" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-spinbutton&gt;</code></a></li> <li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code></a></li> <li><a href="/docs/components/form-timepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code></a></li> </ul> <p><strong>Notes:</strong></p> <ul> <li>BootstrapVue uses custom SCSS/CSS to handling sizing the <code class="text-nowrap" translate="no">&lt;b-form-file&gt;</code> input when it is placed in a <code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code> which has a <a href="#control-sizing" class="font-weight-bold"><code class="text-nowrap" translate="no">size</code></a> specified.</li> <li>BootstrapVue uses custom SCSS/CSS when <code class="text-nowrap" translate="no">&lt;b-form-input type=&quot;range&quot;&gt;</code> is placed in a <code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code>.</li> <li>BootstrapVue&#39;s custom components (i.e. <code class="text-nowrap" translate="no">&lt;b-form-spinbutton&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-form-rating&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-form-tags&gt;</code>, etc.) require BootstrapVue&#39;s custom SCSS/CSS.</li> </ul> <h2 id="checkbox-and-radio-addons" class="bv-no-focus-ring"><span class="bd-content-title">Checkbox and radio addons<a class="anchorjs-link" href="#checkbox-and-radio-addons" aria-labelledby="checkbox-and-radio-addons"></a></span></h2> <p>Place any checkbox or radio within an input group&#39;s addon instead of text.</p> <p><strong>Note:</strong> Bootstrap v4.x recommends using native radio and checkbox inputs over custom radios and checkboxes, but it is possible to use as <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> with a few utility classes applied.</p> <h3 id="native-checkbox-and-radio-addons" class="bv-no-focus-ring"><span class="bd-content-title">Native checkbox and radio addons<a class="anchorjs-link" href="#native-checkbox-and-radio-addons" aria-labelledby="native-checkbox-and-radio-addons"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Checkbox for following text input&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with checkbox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;radio&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Radio for following text input&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with radio input&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-checks-radios.vue --&gt;</span></pre></div><h3 id="custom-radio-checkbox-and-switch-addons" class="bv-no-focus-ring"><span class="bd-content-title">Custom radio, checkbox, and switch addons<a class="anchorjs-link" href="#custom-radio-checkbox-and-switch-addons" aria-labelledby="custom-radio-checkbox-and-switch-addons"></a></span></h3> <p>Using <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> components as addons, using Bootstrap <a href="/docs/reference/utility-classes" class="font-weight-bold">utility classes</a> for additional styling to get them to &quot;fit&quot; in the addon:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-n2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Checkbox for following text input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with checkbox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-n2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Radio for following text input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with radio input&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-n2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Switch for following text input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with switch&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-custom-checks-radios.vue --&gt;</span></pre></div><p>In the above example, we have use the <code class="text-nowrap" translate="no">.sr-only</code> class on a <code class="text-nowrap" translate="no">&lt;span&gt;</code> to visually hide the custom control&#39;s label content (while making them still accessible to screen reader users), and used the utility class <code class="text-nowrap" translate="no">.mr-n2</code> to add a negative right margin to compensate for the &quot;gutter&quot; space between the control and the hidden label.</p> <h2 id="multiple-inputs" class="bv-no-focus-ring"><span class="bd-content-title">Multiple inputs<a class="anchorjs-link" href="#multiple-inputs" aria-labelledby="multiple-inputs"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;First and last name&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;First name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Last name&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- input-group-multiple-inputs.vue --&gt;</span></pre></div><h2 id="multiple-addons" class="bv-no-focus-ring"><span class="bd-content-title">Multiple addons<a class="anchorjs-link" href="#multiple-addons" aria-labelledby="multiple-addons"></a></span></h2> <p>Multiple add-ons are supported and can be mixed with checkbox and radio input versions.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Item&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Checkbox for following text input&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-prepend</span> <span class="hljs-attr">is-text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>$<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-prepend</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Text input with checkbox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-multiple-addons.vue --&gt;</span></pre></div><h2 id="dropdown-addons" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown addons<a class="anchorjs-link" href="#dropdown-addons" aria-labelledby="dropdown-addons"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prepend</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action A<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action B<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-secondary&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;i in 2&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action C<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Action D<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-dropdown.vue --&gt;</span></pre></div><h2 id="control-sizing" class="bv-no-focus-ring"><span class="bd-content-title">Control sizing<a class="anchorjs-link" href="#control-sizing" aria-labelledby="control-sizing"></a></span></h2> <p>Set height using the <code class="text-nowrap" translate="no">size</code> prop to <code class="text-nowrap" translate="no">sm</code> or <code class="text-nowrap" translate="no">lg</code> for small or large respectively. There is no need to set size on the individual inputs or buttons. Note however, you <em>will be required</em> to also set the size on dropdowns.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span>\n    <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;size in [&#x27;sm&#x27;,&#x27;&#x27;,&#x27;lg&#x27;]&quot;</span>\n    <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;size&quot;</span>\n    <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;size&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>\n    <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Label&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-size.vue --&gt;</span></pre></div><p>To control width, place the input inside standard Bootstrap grid column.</p> <h3 id="sizing-custom-radio-checkbox-and-switch-addons" class="bv-no-focus-ring"><span class="bd-content-title">Sizing custom radio, checkbox and switch addons<a class="anchorjs-link" href="#sizing-custom-radio-checkbox-and-switch-addons" aria-labelledby="sizing-custom-radio-checkbox-and-switch-addons"></a></span></h3> <p>If using <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> or <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> as addons, additional utility classes may be required to make everything fit correctly, depending on the size chosen:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Small&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Small text input with custom switch&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-n2 mb-n1&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Checkbox for previous text input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;Large&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Large text input with switch&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span> <span class="hljs-attr">is-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-n2&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Switch for previous text input<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-input-group-custom-checks-radios-sizing.vue --&gt;</span></pre></div><p>Specifically, when using the <code class="text-nowrap" translate="no">sm</code> size on <code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code> you will need to add a negative bottom margin, via the use of the <code class="text-nowrap" translate="no">.mb-n1</code> <a href="/docs/reference/utility-classes" class="font-weight-bold">utility class</a>.</p> <h2 id="contextual-states" class="bv-no-focus-ring"><span class="bd-content-title">Contextual states<a class="anchorjs-link" href="#contextual-states" aria-labelledby="contextual-states"></a></span></h2> <p>Bootstrap v4 currently <strong>does not</strong> support contextual state styling (i.e. valid or invalid) of input groups. However, the inputs inside the input group do support contextual state.</p>'}}}]);