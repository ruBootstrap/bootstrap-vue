(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{451:function(n,l){n.exports={baseTOC:{top:"#флажок-формы",title:"Флажок формы",toc:[{href:"#массив-опций-группы-флажков",label:"Массив опций группы флажков",toc:[{href:"#параметры-как-массив-объектов",label:"Параметры как массив объектов"},{href:"#изменение-названий-полей-опций",label:"Изменение названий полей опций"}]},{href:"#встроенные-и-сложенные-флажки",label:"Встроенные и сложенные флажки"},{href:"#control-sizing",label:"Control sizing"},{href:"#checkbox-values-and-v-model",label:"Checkbox values and v-model",toc:[{href:"#multiple-checkboxes-and-accessibility",label:"Multiple checkboxes and accessibility"}]},{href:"#button-style-checkboxes",label:"Button style checkboxes",toc:[{href:"#individual-checkbox-button-style",label:"Individual checkbox button style"},{href:"#grouped-button-style-checkboxes",label:"Grouped button style checkboxes"}]},{href:"#флажки-в-стиле-переключателя",label:"Флажки в стиле переключателя",toc:[{href:"#индивидуальный-флажок-в-стиле-переключателя",label:"Индивидуальный флажок в стиле переключателя"},{href:"#сгруппированные-флажки-стиля-переключателя",label:"Сгруппированные флажки стиля переключателя"},{href:"#размер-переключателя",label:"Размер переключателя"}]},{href:"#нестандартные-контрольные-входы-простые",label:"Нестандартные контрольные входы (простые)"},{href:"#контекстные-состояния",label:"Контекстные состояния",toc:[{href:"#контекстное-состояние-и-пример-проверки",label:"Контекстное состояние и пример проверки"},{href:"#требуемое-ограничение",label:"Требуемое ограничение"}]},{href:"#автофокус",label:"Автофокус"},{href:"#неопределенная-трисостояния-поддержка",label:"Неопределенная (трисостояния) поддержка",toc:[{href:"#неопределенное-состояние-и-доступность",label:"Неопределенное состояние и доступность"}]}]},titleLead:'<h1 id="флажок-формы" class="bv-no-focus-ring"><span class="bd-content-title">Флажок формы</span></h1> <p class="bd-lead">Для согласованности между браузерами, <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> и <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> используют ввод настраиваемого флажка Bootstrap вместо ввода флажка по умолчанию в браузере. Он построен на основе семантической и доступной разметки, поэтому является надежной заменой для ввода флажка по умолчанию.</p>',body:'<p><strong>Пример 1:</strong> Один флажок</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;checkbox-1&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;status&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkbox-1&quot;</span>\n      <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;accepted&quot;</span>\n      <span class="hljs-attr">unchecked-value</span>=<span class="hljs-string">&quot;not_accepted&quot;</span>\n    &gt;</span>\n      Я принимаю условия и использую\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Состояние: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ status }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">status</span>: <span class="hljs-string">&#x27;not_accepted&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox.vue --&gt;</span></pre></div><p><strong>Пример 2:</strong> Флажки с множественным выбором</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Using options array:&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;checkbox-group-1&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-1&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Using sub-components:&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;checkbox-group-2&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-2&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;orange&quot;</span>&gt;</span>Апельсин<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;apple&quot;</span>&gt;</span>Яблоко<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;pineapple&quot;</span>&gt;</span>Ананас<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;grape&quot;</span>&gt;</span>Виноград<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Выбрано: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [], <span class="hljs-comment">// Должна быть ссылка на массив!</span>\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Апельсин&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;orange&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Яблоко&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;apple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ананас&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pineapple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Виноград&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;grape&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-multiple.vue --&gt;</span></pre></div><p>Не стесняйтесь смешивать и сочетать свойства <code class="text-nowrap" translate="no">options</code> и <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> в <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>. Вручную помещенные входы <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> будут отображаться <em>под</em> любыми входами флажков, созданными опцией <code class="text-nowrap" translate="no">options</code>. Чтобы они отображались <em>выше</em> входов, созданных с помощью <code class="text-nowrap" translate="no">options</code>, поместите их в именованный слот <code class="text-nowrap" translate="no">first</code>.</p> <h2 id="массив-опций-группы-флажков" class="bv-no-focus-ring"><span class="bd-content-title">Массив опций группы флажков<a class="anchorjs-link" href="#массив-опций-группы-флажков" aria-labelledby="массив-опций-группы-флажков"></a></span></h2> <p><code class="text-nowrap" translate="no">options</code> могут быть массивом строк или объектов. Доступные поля:</p> <ul> <li><strong><code class="text-nowrap" translate="no">value</code></strong> Выбранное значение, которое будет установлено на <code class="text-nowrap" translate="no">v-model</code></li> <li><strong><code class="text-nowrap" translate="no">disabled</code></strong> Отключает элемент для выбора</li> <li><strong><code class="text-nowrap" translate="no">text</code></strong> Отображать текст или <strong><code class="text-nowrap" translate="no">html</code></strong> Отображать базовый встроенный HTML-код</li> </ul> <p><code class="text-nowrap" translate="no">value</code> может быть строкой, числом или простым объектом. Избегайте использования сложных типов в значениях.</p> <p>Если указаны и <code class="text-nowrap" translate="no">html</code> и <code class="text-nowrap" translate="no">text</code>, приоритет будет иметь <code class="text-nowrap" translate="no">html</code>. В поле <code class="text-nowrap" translate="no">html</code> поддерживается только базовый / собственный HTML (компоненты работать не будут). Обратите внимание, что не все браузеры будут отображать встроенный html (т.е. <code class="text-nowrap" translate="no">&lt;i&gt;</code>, <code class="text-nowrap" translate="no">&lt;strong&gt;</code> и т.д.) внутри элементов <code class="text-nowrap" translate="no">&lt;option&gt;</code> элемента <code class="text-nowrap" translate="no">&lt;select&gt;</code>.</p> <p class="alert alert-danger"> <strong>Будьте осторожны</strong> при размещении содержимого, предоставляемого пользователем, в поле <code class="notranslate" translate="no">html</code>, так как это может сделать вас уязвимым для <a class="alert-link" href="https://en.wikipedia.org/wiki/Cross-site_scripting"> <abbr title="Атаки межсайтового скриптинга">XSS attacks</abbr></a>, если вы сначала не <a class="alert-link" href="https://en.wikipedia.org/wiki/HTML_sanitization">провели обработку</a> введенную пользователем строку. </p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> }, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>]</pre></div><p>Если запись массива является строкой, она будет использоваться как для сгенерированных полей <code class="text-nowrap" translate="no">value</code> и <code class="text-nowrap" translate="no">text</code>.</p> <p>Вы можете смешивать, используя строки и <a href="#options-as-an-array-of-objects" class="font-weight-bold">объекты</a> в массиве.</p> <p>Внутри BootstrapVue преобразует указанный выше массив в следующий формат (формат <a href="#options-as-an-array-of-objects" class="font-weight-bold">массив объектов</a>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> }\n]</pre></div><h3 id="параметры-как-массив-объектов" class="bv-no-focus-ring"><span class="bd-content-title">Параметры как массив объектов<a class="anchorjs-link" href="#параметры-как-массив-объектов" aria-labelledby="параметры-как-массив-объектов"></a></span></h3> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 1&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 2&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n  { <span class="hljs-attr">html</span>: <span class="hljs-string">&#x27;&lt;b&gt;Элемент&lt;/b&gt; 3&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 4&#x27;</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 5&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">foo</span>: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attr">baz</span>: <span class="hljs-literal">true</span> } }\n]</pre></div><p>Если <code class="text-nowrap" translate="no">value</code> отсутствует, то <code class="text-nowrap" translate="no">text</code> будет использоваться как поля <code class="text-nowrap" translate="no">value</code> и <code class="text-nowrap" translate="no">text</code>. Если вы используете свойство <code class="text-nowrap" translate="no">html</code>, вы <strong>должны</strong> предоставить свойство <code class="text-nowrap" translate="no">value</code>.</p> <p>Внутри BootstrapVue преобразует указанный выше массив в следующий формат (формат <a href="#options-as-an-array-of-objects" class="font-weight-bold">массив объектов</a>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 1&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 2&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">html</span>: <span class="hljs-string">&#x27;&lt;b&gt;Элемент&lt;/b&gt; 3&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 4&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Элемент 4&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Элемент 5&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> }\n]</pre></div><h3 id="изменение-названий-полей-опций" class="bv-no-focus-ring"><span class="bd-content-title">Изменение названий полей опций<a class="anchorjs-link" href="#изменение-названий-полей-опций" aria-labelledby="изменение-названий-полей-опций"></a></span></h3> <p>Если вы хотите настроить имена свойств поля (например, используя поле <code class="text-nowrap" translate="no">name</code> для отображения <code class="text-nowrap" translate="no">text</code>), вы можете легко изменить их, установив <code class="text-nowrap" translate="no">text-field</code>, <code class="text-nowrap" translate="no">html-field</code>, <code class="text-nowrap" translate="no">value-field</code> и <code class="text-nowrap" translate="no">disabled-field</code> прописывает строку, содержащую имя свойства, которое вы хотите использовать:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n      <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>\n      <span class="hljs-attr">value-field</span>=<span class="hljs-string">&quot;item&quot;</span>\n      <span class="hljs-attr">text-field</span>=<span class="hljs-string">&quot;name&quot;</span>\n      <span class="hljs-attr">disabled-field</span>=<span class="hljs-string">&quot;notEnabled&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Выбрано: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [],\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Опция A&#x27;</span> },\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Опция B&#x27;</span> },\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Опция C&#x27;</span>, <span class="hljs-attr">notEnabled</span>: <span class="hljs-literal">true</span> },\n          { <span class="hljs-attr">item</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Опция D&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-group-options-fields.vue --&gt;</span></pre></div><h2 id="встроенные-и-сложенные-флажки" class="bv-no-focus-ring"><span class="bd-content-title">Встроенные и сложенные флажки<a class="anchorjs-link" href="#встроенные-и-сложенные-флажки" aria-labelledby="встроенные-и-сложенные-флажки"></a></span></h2> <p>Компоненты <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> по умолчанию отображают встроенные флажки, тогда как <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> отображают флажки на уровне блоков (составные).</p> <p>Установите свойство <code class="text-nowrap" translate="no">stacked</code> в <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> для размещения каждого элемента управления формой один над другим, или, если вы используете отдельные флажки не внутри <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>, установите свойство <code class="text-nowrap" translate="no">inline</code> в <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Встроенные флажки form-checkbox-group (по умолчанию)&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-1a&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Сложенные флажки form-checkbox-group&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-2a&quot;</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Отдельные сложенные флажки (по умолчанию)&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span>\n        <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;option in options&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;option.value&quot;</span>\n        <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;option.value&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-3a&quot;</span>\n      &gt;</span>\n        {{ option.text }}\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Индивидуальные встроенные флажки&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span>\n        <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;option in options&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;option.value&quot;</span>\n        <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;option.value&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavour-4a&quot;</span>\n        <span class="hljs-attr">inline</span>\n      &gt;</span>\n        {{ option.text }}\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [], <span class="hljs-comment">// Должна быть ссылка на массив!</span>\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Апельсин&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;orange&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Яблоко&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;apple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ананас&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pineapple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Виноград&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;grape&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-stacked.vue --&gt;</span></pre></div><h2 id="control-sizing" class="bv-no-focus-ring"><span class="bd-content-title">Control sizing<a class="anchorjs-link" href="#control-sizing" aria-labelledby="control-sizing"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">size</code> prop to control the size of the checkbox. The default size is medium. Supported size values are <code class="text-nowrap" translate="no">sm</code> (small) and <code class="text-nowrap" translate="no">lg</code> (large).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>Small<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span>&gt;</span>Default<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>Large<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- form-checkbox-sizes.vue --&gt;</span></pre></div><p>Sizes can be set on individual <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> components, or inherited from the size setting of <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>.</p> <p><strong>Note:</strong> Bootstrap v4.x does not natively support sizes for the custom checkbox control. However, BootstrapVue includes custom SCSS/CSS that adds support for sizing the custom checkboxes.</p> <h2 id="checkbox-values-and-v-model" class="bv-no-focus-ring"><span class="bd-content-title">Checkbox values and <code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#checkbox-values-and-v-model" aria-labelledby="checkbox-values-and-v-model"></a></span></h2> <p>By default, <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> value will be <code class="text-nowrap" translate="no">true</code> when checked and <code class="text-nowrap" translate="no">false</code> when unchecked. You can customize the checked and unchecked values by specifying the <code class="text-nowrap" translate="no">value</code> and <code class="text-nowrap" translate="no">unchecked-value</code> properties, respectively.</p> <p>The <code class="text-nowrap" translate="no">v-model</code> binds to the <code class="text-nowrap" translate="no">checked</code> prop. When you have multiple checkboxes that bind to a single data state variable, you <strong>must</strong> provide an array reference (<code class="text-nowrap" translate="no">[]</code>) to your <code class="text-nowrap" translate="no">v-model</code>. Do not use the <code class="text-nowrap" translate="no">checked</code> prop directly.</p> <p>Note that when <code class="text-nowrap" translate="no">v-model</code> is bound to multiple checkboxes (i.e an array ref), the <code class="text-nowrap" translate="no">unchecked-value</code> is <strong>not used</strong>. Only the value(s) of the checked checkboxes will be returned in the <code class="text-nowrap" translate="no">v-model</code> bound array. You should provide a unique value for each checkbox&#39;s <code class="text-nowrap" translate="no">value</code> prop (the default of <code class="text-nowrap" translate="no">true</code> will not work when bound to an array)</p> <p>To pre-check any radios, set the <code class="text-nowrap" translate="no">v-model</code> to the value(s) of the checks that you would like pre-selected.</p> <p>When placing individual <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> components within a <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>, most props and the <code class="text-nowrap" translate="no">v-model</code> are inherited from the <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>.</p> <p><strong>Note:</strong> the <code class="text-nowrap" translate="no">unchecked-value</code> prop <em>does not</em> affect the native <code class="text-nowrap" translate="no">&lt;input&gt;</code>&#39;s <code class="text-nowrap" translate="no">value</code> attribute, because browsers don&#39;t include unchecked boxes in form submissions. To guarantee that one of two values is submitted in a native <code class="text-nowrap" translate="no">&lt;form&gt;</code> submit (e.g. <code class="text-nowrap" translate="no">&#39;yes&#39;</code> or <code class="text-nowrap" translate="no">&#39;no&#39;</code>), use radio inputs instead. This is the same limitation that <a href="https://vuejs.org/v2/guide/forms.html#Checkbox-1" target="_blank" rel="noopener">Vue has with native checkbox inputs</a>.</p> <h3 id="multiple-checkboxes-and-accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Multiple checkboxes and accessibility<a class="anchorjs-link" href="#multiple-checkboxes-and-accessibility" aria-labelledby="multiple-checkboxes-and-accessibility"></a></span></h3> <p>When binding multiple checkboxes together, you must set the <code class="text-nowrap" translate="no">name</code> prop to the same value for all <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>s in the group individually or via the <code class="text-nowrap" translate="no">name</code> prop of <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>. This will inform users of assistive technologies that the checkboxes are related and enables native browser keyboard navigation.</p> <p>Whenever using multiple checkboxes, it is recommended that the checkboxes be placed in a <a href="/docs/components/form-group" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-group&gt;</code></a> component to associate a label with the entire group of checkboxes. See examples above.</p> <h2 id="button-style-checkboxes" class="bv-no-focus-ring"><span class="bd-content-title">Button style checkboxes<a class="anchorjs-link" href="#button-style-checkboxes" aria-labelledby="button-style-checkboxes"></a></span></h2> <p>You can optionally render checkboxes to appear as buttons, either individually, or in a group.</p> <p>Button style checkboxes will have the class <code class="text-nowrap" translate="no">.active</code> automatically applied to the label when they are in the <em>checked</em> state.</p> <h3 id="individual-checkbox-button-style" class="bv-no-focus-ring"><span class="bd-content-title">Individual checkbox button style<a class="anchorjs-link" href="#individual-checkbox-button-style" aria-labelledby="individual-checkbox-button-style"></a></span></h3> <p>A single checkbox can be rendered with a button appearance by setting the prop <code class="text-nowrap" translate="no">button</code> to <code class="text-nowrap" translate="no">true</code></p> <p>Change the button variant by setting the <code class="text-nowrap" translate="no">button-variant</code> prop to one of the standard Bootstrap button variants (see <a href="/docs/components/button" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-button&gt;</code></a> for supported variants). The default variant is <code class="text-nowrap" translate="no">secondary</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked1&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;check-button&quot;</span> <span class="hljs-attr">button</span>&gt;</span>\n      Button Checkbox <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>(Checked: {{ checked1 }})<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked2&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;check-button&quot;</span> <span class="hljs-attr">button</span> <span class="hljs-attr">button-variant</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>\n      Button Checkbox <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>(Checked: {{ checked2 }})<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">checked1</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">checked2</span>: <span class="hljs-literal">false</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-button.vue --&gt;</span></pre></div><p>The <code class="text-nowrap" translate="no">inline</code> prop has no effect on individual button-style checkboxes.</p> <h3 id="grouped-button-style-checkboxes" class="bv-no-focus-ring"><span class="bd-content-title">Grouped button style checkboxes<a class="anchorjs-link" href="#grouped-button-style-checkboxes" aria-labelledby="grouped-button-style-checkboxes"></a></span></h3> <p>Render groups of checkboxes with the look of a button-group by setting the prop <code class="text-nowrap" translate="no">buttons</code> on <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>. Change the button variant by setting the <code class="text-nowrap" translate="no">button-variant</code> prop to one of the standard Bootstrap button variants (see <a href="/docs/components/button" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-button&gt;</code></a> for supported variants). The default <code class="text-nowrap" translate="no">button-variant</code> is <code class="text-nowrap" translate="no">secondary</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Button-group style checkboxes&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;buttons-1&quot;</span>\n        <span class="hljs-attr">buttons</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Button-group style checkboxes with variant primary and large buttons&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">buttons</span>\n        <span class="hljs-attr">button-variant</span>=<span class="hljs-string">&quot;primary&quot;</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;buttons-2&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Stacked (vertical) button-group style checkboxes&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">stacked</span>\n        <span class="hljs-attr">buttons</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [], <span class="hljs-comment">// Должна быть ссылка на массив!</span>\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Апельсин&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;orange&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Яблоко&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;apple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ананас&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pineapple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Виноград&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;grape&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-button-group.vue --&gt;</span></pre></div><h2 id="флажки-в-стиле-переключателя" class="bv-no-focus-ring"><span class="bd-content-title">Флажки в стиле переключателя<a class="anchorjs-link" href="#флажки-в-стиле-переключателя" aria-labelledby="флажки-в-стиле-переключателя"></a></span></h2> <p>Стиль переключателя поддерживается в компонентах <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> и <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>.</p> <p><strong>Примечание:</strong> Если флажок установлен в <a href="#button-style-checkboxes" class="font-weight-bold">режим кнопки</a>, режим переключения не будет иметь никакого эффекта.</p> <h3 id="индивидуальный-флажок-в-стиле-переключателя" class="bv-no-focus-ring"><span class="bd-content-title">Индивидуальный флажок в стиле переключателя<a class="anchorjs-link" href="#индивидуальный-флажок-в-стиле-переключателя" aria-labelledby="индивидуальный-флажок-в-стиле-переключателя"></a></span></h3> <p>Один флажок может быть отображен с внешним видом переключателя, установив для свойства <code class="text-nowrap" translate="no">switch</code> значение <code class="text-nowrap" translate="no">true</code></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;check-button&quot;</span> <span class="hljs-attr">switch</span>&gt;</span>\n      Переключить флажок <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>(Статус: {{ checked }})<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">checked</span>: <span class="hljs-literal">false</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-switch.vue --&gt;</span></pre></div><h3 id="сгруппированные-флажки-стиля-переключателя" class="bv-no-focus-ring"><span class="bd-content-title">Сгруппированные флажки стиля переключателя<a class="anchorjs-link" href="#сгруппированные-флажки-стиля-переключателя" aria-labelledby="сгруппированные-флажки-стиля-переключателя"></a></span></h3> <p>Визуализируйте группы флажков в виде переключателей, установив свойство <code class="text-nowrap" translate="no">switches</code> в <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Флажки встроенного стиля переключения&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">switches</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Флажки сгруппированного (вертикального) стиля переключателя&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">switches</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [], <span class="hljs-comment">// Должна быть ссылка на массив!</span>\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Красный&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;red&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Зеленый&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;green&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Желтый (отключен)&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;yellow&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Синий&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;blue&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkboxes-switch-group.vue --&gt;</span></pre></div><h3 id="размер-переключателя" class="bv-no-focus-ring"><span class="bd-content-title">Размер переключателя<a class="anchorjs-link" href="#размер-переключателя" aria-labelledby="размер-переключателя"></a></span></h3> <p>Используйте свойство <code class="text-nowrap" translate="no">size</code> для управления размером переключателя. Размер по умолчанию - средний. Поддерживаемые значения размера: <code class="text-nowrap" translate="no">sm</code> (маленький) и <code class="text-nowrap" translate="no">lg</code> (большой).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>Маленький<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span>&gt;</span>По умолчанию<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">switch</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>Большой<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- form-checkbox-switch-sizes.vue --&gt;</span></pre></div><p>Размеры могут быть установлены для отдельных компонентов <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> или унаследованы от настройки размера <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>.</p> <p><strong>Примечание:</strong> Bootstrap v4.x изначально не поддерживает размеры для настраиваемого элемента управления переключателем. Однако BootstrapVue включает настраиваемый SCSS/CSS, который добавляет поддержку для изменения размера настраиваемых переключателей.</p> <h2 id="нестандартные-контрольные-входы-простые" class="bv-no-focus-ring"><span class="bd-content-title">Нестандартные контрольные входы (простые)<a class="anchorjs-link" href="#нестандартные-контрольные-входы-простые" aria-labelledby="нестандартные-контрольные-входы-простые"></a></span></h2> <p>Вы можете использовать <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> или <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> для рендеринга ввода встроенного флажка браузера, установив свойство <code class="text-nowrap" translate="no">plain</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Обычные встроенные флажки&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">plain</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Обычные сложенные флажки&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">plain</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: [], <span class="hljs-comment">// Должна быть ссылка на массив!</span>\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Апельсин&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;orange&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Яблоко&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;apple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Ананас&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pineapple&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Виноград&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;grape&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-plain.vue --&gt;</span></pre></div><p><strong>Примечание:</strong> Свойство <code class="text-nowrap" translate="no">plain</code> не действует, если установлено <code class="text-nowrap" translate="no">button</code> или <code class="text-nowrap" translate="no">buttons</code>.</p> <h2 id="контекстные-состояния" class="bv-no-focus-ring"><span class="bd-content-title">Контекстные состояния<a class="anchorjs-link" href="#контекстные-состояния" aria-labelledby="контекстные-состояния"></a></span></h2> <p>Bootstrap включает стили валидации для состояний <code class="text-nowrap" translate="no">valid</code> и <code class="text-nowrap" translate="no">invalid</code> для большинства элементов управления формой.</p> <p>Вообще говоря, вы захотите использовать определенное состояние для определенных типов обратной связи:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (обозначает недопустимое состояние) отлично подходит, когда есть блокирующее или обязательное поле. Пользователь должен правильно заполнить это поле, чтобы отправить форму.</li> <li><code class="text-nowrap" translate="no">true</code> (обозначает действительное состояние) идеально подходит для ситуаций, когда у вас есть проверка по каждому полю во всей форме и вы хотите побудить пользователя пройти через остальные поля.</li> <li><code class="text-nowrap" translate="no">null</code> Не отображает состояние проверки (ни действительное, ни недействительное)</li> </ul> <p>Чтобы применить один из значков контекстного состояния на <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>, установите для свойства <code class="text-nowrap" translate="no">state</code> значение <code class="text-nowrap" translate="no">false</code> (для невалидного), <code class="text-nowrap" translate="no">true</code> (для валидного) или <code class="text-nowrap" translate="no">null</code> (состояние проверки отсутствует).</p> <p><strong>Примечание:</strong> Контекстные состояния <strong>не</strong> поддерживаются в режиме кнопок.</p> <h3 id="контекстное-состояние-и-пример-проверки" class="bv-no-focus-ring"><span class="bd-content-title">Контекстное состояние и пример проверки<a class="anchorjs-link" href="#контекстное-состояние-и-пример-проверки" aria-labelledby="контекстное-состояние-и-пример-проверки"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n      <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span>\n      <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;checkbox-validation&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-invalid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span>&gt;</span>Пожалуйста, выберите два<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-invalid-feedback</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-valid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span>&gt;</span>Спасибо<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-valid-feedback</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: [],\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Первый выбор&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Второй выбор&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Третий выбор&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span> }\n        ]\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">state</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.value.length === <span class="hljs-number">2</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- form-checkbox-validation.vue --&gt;</span></pre></div><h3 id="требуемое-ограничение" class="bv-no-focus-ring"><span class="bd-content-title">Требуемое ограничение<a class="anchorjs-link" href="#требуемое-ограничение" aria-labelledby="требуемое-ограничение"></a></span></h3> <p>При использовании отдельных компонентов <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> (не в <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code>), и вы хотите, чтобы флажки были <code class="text-nowrap" translate="no">required</code> в вашей форме, вы <strong>должны</strong> предоставлять <code class="text-nowrap" translate="no">name</code> для каждого <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>, чтобы необходимое ограничение работало. Все компоненты <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>, связанные с одной и той же <code class="text-nowrap" translate="no">v-model</code> <strong>должны</strong> иметь одинаковое <code class="text-nowrap" translate="no">name</code>.</p> <p><code class="text-nowrap" translate="no">name</code> требуется для того, чтобы вспомогательные технологии (такие как программы чтения с экрана и пользователи, использующие только клавиатуру) знали, какие флажки принадлежат одной и той же переменной формы (имя также автоматически включает встроенную навигацию с клавиатуры браузера), поэтому <code class="text-nowrap" translate="no">required</code> будет только работать, если установлено <code class="text-nowrap" translate="no">name</code>. <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> автоматически сгенерирует уникальное имя входа, если оно не указано в группе.</p> <h2 id="автофокус" class="bv-no-focus-ring"><span class="bd-content-title">Автофокус<a class="anchorjs-link" href="#автофокус" aria-labelledby="автофокус"></a></span></h2> <p>Когда свойство <code class="text-nowrap" translate="no">autofocus</code> установлено на <code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code>, ввод будет автоматически сфокусирован, когда он вставлен (т.е. <strong>установлен</strong>) в документ, или повторно активирован, когда он находится внутри Vue компонент <code class="text-nowrap" translate="no">&lt;keep-alive&gt;</code>. Обратите внимание, что это свойство <strong>не</strong> устанавливает атрибут <code class="text-nowrap" translate="no">autofocus</code> на входе и не может определить, когда ввод становится видимым.</p> <h2 id="неопределенная-трисостояния-поддержка" class="bv-no-focus-ring"><span class="bd-content-title">Неопределенная (трисостояния) поддержка<a class="anchorjs-link" href="#неопределенная-трисостояния-поддержка" aria-labelledby="неопределенная-трисостояния-поддержка"></a></span></h2> <p>Обычно вход флажка может иметь только два состояния: <em>checked</em> или <em>unchecked</em>. ни могут иметь любое значение, но они либо отправляют это значение (<em>checked</em>), либо не отправляют (<em>unchecked</em>) с отправкой формы (хотя BootstrapVue допускает значение для состояния <em>unchecked</em> для одного флажка)</p> <p><em>Визуально</em>, на самом деле есть три состояния, в которых может находиться флажок: <em>checked</em>, <em>unchecked</em> или <strong><em>indeterminate</em></strong>.</p> <p>Состояние <em>indeterminate</em> <strong>только визуально</strong>. Флажок по-прежнему либо установлен, либо не отмечен как значение. Это означает, что визуальное неопределенное состояние маскирует реальное значение флажка, так что это лучше будет иметь смысл в вашем пользовательском интерфейсе!</p> <p><code class="text-nowrap" translate="no">&lt;b-form-checkbox&gt;</code> поддерживает установку этого визуального неопределенного состояния с помощью свойства <code class="text-nowrap" translate="no">indeterminate</code> (по умолчанию <code class="text-nowrap" translate="no">false</code>). Установка флажка сбросит неопределенное состояние. Свойство <code class="text-nowrap" translate="no">indeterminate</code> может быть синхронизировано с состоянием флажка путем привязки свойства <code class="text-nowrap" translate="no">indeterminate</code> с модификатором <code class="text-nowrap" translate="no">.sync</code>.</p> <p><strong>Примечание:</strong> неопределенный стиль не поддерживается в режиме кнопки или переключателя, а также не поддерживается в <code class="text-nowrap" translate="no">&lt;b-form-checkbox-group&gt;</code> (несколько флажков).</p> <p><strong>Неопределенный одиночный флажок:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;checked&quot;</span> <span class="hljs-attr">:indeterminate.sync</span>=<span class="hljs-string">&quot;indeterminate&quot;</span>&gt;</span>\n      Щелкните меня, чтобы увидеть, что происходит\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>\n      Выбрано: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ checked }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n      Неопределенно: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ indeterminate }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;toggleIndeterminate&quot;</span>&gt;</span>Переключить неопределенное состояние<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">checked</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">indeterminate</span>: <span class="hljs-literal">true</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">toggleIndeterminate</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-built_in">this</span>.indeterminate = !<span class="hljs-built_in">this</span>.indeterminate\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-indeterminate.vue --&gt;</span></pre></div><p><strong>Пример варианта использования неопределенного флажка:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">label</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>Выбери свои вкусы:<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;allSelected&quot;</span>\n          <span class="hljs-attr">:indeterminate</span>=<span class="hljs-string">&quot;indeterminate&quot;</span>\n          <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;flavours&quot;</span>\n          <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;flavours&quot;</span>\n          @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;toggleAll&quot;</span>\n        &gt;</span>\n          {{ allSelected ? &#x27;Снять все&#x27; : &#x27;Выбрать все&#x27; }}\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox-group</span>\n          <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;flavors&quot;</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n          <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;flavours&quot;</span>\n          <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;flavors&quot;</span>\n          <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-4&quot;</span>\n          <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;Individual flavours&quot;</span>\n          <span class="hljs-attr">stacked</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox-group</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n        Выбрано: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n        Всего выбрано: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ allSelected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>\n        Неопределенно: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ indeterminate }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">flavours</span>: [<span class="hljs-string">&#x27;Апельсин&#x27;</span>, <span class="hljs-string">&#x27;Виноград&#x27;</span>, <span class="hljs-string">&#x27;Яблоко&#x27;</span>, <span class="hljs-string">&#x27;Лайм&#x27;</span>, <span class="hljs-string">&#x27;Очень ягодный&#x27;</span>],\n        <span class="hljs-attr">selected</span>: [],\n        <span class="hljs-attr">allSelected</span>: <span class="hljs-literal">false</span>,\n        <span class="hljs-attr">indeterminate</span>: <span class="hljs-literal">false</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">toggleAll</span>(<span class="hljs-params">checked</span>)</span> {\n        <span class="hljs-built_in">this</span>.selected = checked ? <span class="hljs-built_in">this</span>.flavours.slice() : []\n      }\n    },\n    <span class="hljs-attr">watch</span>: {\n      <span class="hljs-function"><span class="hljs-title">selected</span>(<span class="hljs-params">newValue, oldValue</span>)</span> {\n        <span class="hljs-comment">// Обрабатывать изменения в отдельных флажках вкуса</span>\n        <span class="hljs-keyword">if</span> (newValue.length === <span class="hljs-number">0</span>) {\n          <span class="hljs-built_in">this</span>.indeterminate = <span class="hljs-literal">false</span>\n          <span class="hljs-built_in">this</span>.allSelected = <span class="hljs-literal">false</span>\n        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (newValue.length === <span class="hljs-built_in">this</span>.flavours.length) {\n          <span class="hljs-built_in">this</span>.indeterminate = <span class="hljs-literal">false</span>\n          <span class="hljs-built_in">this</span>.allSelected = <span class="hljs-literal">true</span>\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-built_in">this</span>.indeterminate = <span class="hljs-literal">true</span>\n          <span class="hljs-built_in">this</span>.allSelected = <span class="hljs-literal">false</span>\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-checkbox-indeterminate-multiple.vue --&gt;</span></pre></div><p><strong>Примечание:</strong> неопределенное значение не поддерживается ни в режиме <code class="text-nowrap" translate="no">button</code>, ни в режиме нескольких флажков. Также обратите внимание, что простой флажок (т.е. со свойством <code class="text-nowrap" translate="no">plain</code>) также поддерживает неопределенное состояние в Windows/Linux/Mac/Android, но не в iOS.</p> <h3 id="неопределенное-состояние-и-доступность" class="bv-no-focus-ring"><span class="bd-content-title">Неопределенное состояние и доступность<a class="anchorjs-link" href="#неопределенное-состояние-и-доступность" aria-labelledby="неопределенное-состояние-и-доступность"></a></span></h3> <p>Не все программы чтения с экрана передают неопределенное состояние пользователям программ чтения с экрана. Поэтому рекомендуется предоставить пользователю некоторую форму текстовой обратной связи (возможно, через класс <code class="text-nowrap" translate="no">.sr-only</code>), если неопределенное состояние имеет особое контекстное значение в вашем приложении.</p>'}}}]);