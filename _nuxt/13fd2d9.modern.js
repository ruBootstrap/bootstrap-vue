(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{456:function(n,l){n.exports={baseTOC:{top:"#радио-ввод-формы",title:"Радио ввод формы",toc:[{href:"#индивидуальные-радио",label:"Индивидуальные радио"},{href:"#сгруппированные-радио",label:"Сгруппированные радио"},{href:"#массив-опций-радиогруппы",label:"Массив опций радиогруппы",toc:[{href:"#параметры-как-массив-объектов",label:"Параметры как массив объектов"},{href:"#изменение-названий-полей-опций",label:"Изменение названий полей опций"}]},{href:"#значение-радио-и-v-model",label:"Значение радио и v-model"},{href:"#инлайновые-и-стековые-радио",label:"Инлайновые и стековые радио"},{href:"#размеры-элементов",label:"Размеры элементов"},{href:"#радио-кнопочного-типа",label:"Радио кнопочного типа"},{href:"#радиовводы-нестандартного-стиля-простые",label:"Радиовводы нестандартного стиля (простые)"},{href:"#требуемое-ограничение",label:"Требуемое ограничение"},{href:"#автофокус",label:"Автофокус"},{href:"#контекстные-состояния",label:"Контекстные состояния",toc:[{href:"#контекстное-состояние-с-примером-обратной-связи",label:"Контекстное состояние с примером обратной связи"},{href:"#передача-состояния-контекстной-проверки-вспомогательным-технологиям-и-пользователям-с-дальтонизмом",label:"Передача состояния контекстной проверки вспомогательным технологиям и пользователям с дальтонизмом"},{href:"#атрибут-aria-aria-invalid",label:"Атрибут ARIA aria-invalid"}]}]},titleLead:'<h1 id="радио-ввод-формы" class="bv-no-focus-ring"><span class="bd-content-title">Радио ввод формы</span></h1> <p class="bd-lead">Для согласованности между браузерами, <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> и <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> используют пользовательский радио-ввод Bootstrap, чтобы заменить радио-ввод браузера по умолчанию. Он построен на основе семантической и доступной разметки, поэтому является надежной заменой радио-ввода по умолчанию.</p>',body:'<h2 id="индивидуальные-радио" class="bv-no-focus-ring"><span class="bd-content-title">Индивидуальные радио<a class="anchorjs-link" href="#индивидуальные-радио" aria-labelledby="индивидуальные-радио"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Индивидуальные радио&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span> <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;some-radios&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;A&quot;</span>&gt;</span>Option A<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span> <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;some-radios&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;B&quot;</span>&gt;</span>Option B<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Selected: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio.vue --&gt;</span></pre></div><h2 id="сгруппированные-радио" class="bv-no-focus-ring"><span class="bd-content-title">Сгруппированные радио<a class="anchorjs-link" href="#сгруппированные-радио" aria-labelledby="сгруппированные-радио"></a></span></h2> <p>Отдельные радио-вводы в <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> могут быть указаны с помощью свойства <code class="text-nowrap" translate="no">options</code> или путем ручного размещения подкомпонента <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>. При использовании вручную размещенных компонентов <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> внутри <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>, они унаследуют большинство свойств и v-model от <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Radios using options&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;radio-group-1&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-options&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Radios using sub-components&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;radio-group-2&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-sub-component&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;first&quot;</span>&gt;</span>Toggle this custom radio<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;second&quot;</span>&gt;</span>Or toggle this other custom radio<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;third&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>This one is Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;{ fourth: 4 }&quot;</span>&gt;</span>This is the 4th radio<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Selected: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;first&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Toggle this custom radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Or toggle this other custom radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;This one is Disabled&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;This is the 4th radio&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">fourth</span>: <span class="hljs-number">4</span> } }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-group.vue --&gt;</span></pre></div><p>Не стесняйтесь комбинировать и сопоставлять свойство <code class="text-nowrap" translate="no">options</code> и <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> в <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>. Помещенные вручную вводы <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> будут появляться <em>под</em> любыми радио-вводами, сгенерированными свойством <code class="text-nowrap" translate="no">options</code>. Чтобы они отображались <em>выше</em> входов, созданных с помощью <code class="text-nowrap" translate="no">options</code>, поместите их в именованный слот <code class="text-nowrap" translate="no">first</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Radios using options and slots&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;radio-slots&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-options-slots&quot;</span>\n      &gt;</span>\n        <span class="hljs-comment">&lt;!-- Radios in this slot will appear first --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">first</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;first&quot;</span>&gt;</span>Toggle this custom radio from slot first<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n        <span class="hljs-comment">&lt;!-- Radios in the default slot will appear after any option generated radios --&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;{ fourth: 4 }&quot;</span>&gt;</span>This is the 4th radio<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;fifth&quot;</span>&gt;</span>This is the 5th radio<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Selected: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Or toggle this other custom radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Third radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-group-slot.vue --&gt;</span></pre></div><h2 id="массив-опций-радиогруппы" class="bv-no-focus-ring"><span class="bd-content-title">Массив опций радиогруппы<a class="anchorjs-link" href="#массив-опций-радиогруппы" aria-labelledby="массив-опций-радиогруппы"></a></span></h2> <p><code class="text-nowrap" translate="no">options</code> могут быть массивом строк или объектов. Доступные поля:</p> <ul> <li><strong><code class="text-nowrap" translate="no">value</code></strong> Выбранное значение, которое будет установлено на <code class="text-nowrap" translate="no">v-model</code></li> <li><strong><code class="text-nowrap" translate="no">disabled</code></strong> Отключает элемент для выбора</li> <li><strong><code class="text-nowrap" translate="no">text</code></strong> Отображает текст или <strong><code class="text-nowrap" translate="no">html</code></strong> Отображает базовый встроенный HTML-код</li> </ul> <p><code class="text-nowrap" translate="no">value</code> может быть строкой, числом или простым объектом. Избегайте использования сложных типов в значениях.</p> <p>Если указаны и <code class="text-nowrap" translate="no">html</code> и <code class="text-nowrap" translate="no">text</code>, <code class="text-nowrap" translate="no">html</code> приоритет будет иметь. В поле <code class="text-nowrap" translate="no">html</code> поддерживается только базовый/собственный HTML (компоненты работать не будут). Обратите внимание, что не все браузеры будут отображать встроенный html (т. е. <code class="text-nowrap" translate="no">&lt;i&gt;</code>, <code class="text-nowrap" translate="no">&lt;strong&gt;</code> и т. д.) внутри элементов <code class="text-nowrap" translate="no">&lt;option&gt;</code> в <code class="text-nowrap" translate="no">&lt;select&gt;</code>.</p> <p class="alert alert-danger"> <strong>Будьте осторожны</strong> при размещении пользовательского контента в поле <code class="notranslate" translate="no">html</code>, поскольку это может сделать вас уязвимыми для <a class="alert-link" href="https://en.wikipedia.org/wiki/Cross-site_scripting"> <abbr title="Cross Site Scripting Attacks">XSS атак</abbr></a>, если вы сначала не <a class="alert-link" href="https://en.wikipedia.org/wiki/HTML_sanitization">обезопасить</a> введенную пользователем строку. </p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [<span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> }, <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>]</pre></div><p>Если запись массива является строкой, она будет использоваться как для сгенерированных полей <code class="text-nowrap" translate="no">value</code> и <code class="text-nowrap" translate="no">text</code>.</p> <p>Вы можете смешивать, используя строки и <a href="#options-as-an-array-of-objects" class="font-weight-bold">объекты</a> в массиве.</p> <p>Внутри BootstrapVue преобразует указанный выше массив в следующий формат (формат <a href="#options-as-an-array-of-objects" class="font-weight-bold">массив объектов</a>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> }\n]</pre></div><h3 id="параметры-как-массив-объектов" class="bv-no-focus-ring"><span class="bd-content-title">Параметры как массив объектов<a class="anchorjs-link" href="#параметры-как-массив-объектов" aria-labelledby="параметры-как-массив-объектов"></a></span></h3> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 1&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 2&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n  { <span class="hljs-attr">html</span>: <span class="hljs-string">&#x27;&lt;b&gt;Item&lt;/b&gt; 3&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 4&#x27;</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 5&#x27;</span>, <span class="hljs-attr">value</span>: { <span class="hljs-attr">foo</span>: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attr">baz</span>: <span class="hljs-literal">true</span> } }\n]</pre></div><p>Если <code class="text-nowrap" translate="no">value</code> отсутствует, то <code class="text-nowrap" translate="no">text</code> будет использоваться как полей <code class="text-nowrap" translate="no">value</code> и <code class="text-nowrap" translate="no">text</code>. Если вы используете свойство <code class="text-nowrap" translate="no">html</code>, вы <strong>должны</strong> предоставить свойство <code class="text-nowrap" translate="no">value</code>.</p> <p>Внутри BootstrapVue преобразует указанный выше массив в следующий формат (формат <a href="#options-as-an-array-of-objects" class="font-weight-bold">массив объектов</a>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = [\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 1&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 2&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">html</span>: <span class="hljs-string">&#x27;&lt;b&gt;Item&lt;/b&gt; 3&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 4&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Item 4&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> },\n  { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Item 5&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;E&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">false</span> }\n]</pre></div><h3 id="изменение-названий-полей-опций" class="bv-no-focus-ring"><span class="bd-content-title">Изменение названий полей опций<a class="anchorjs-link" href="#изменение-названий-полей-опций" aria-labelledby="изменение-названий-полей-опций"></a></span></h3> <p>Если вы хотите настроить имена свойств поля (например, используя поле <code class="text-nowrap" translate="no">name</code> для отображения <code class="text-nowrap" translate="no">text</code>), вы можете легко изменить их, установив <code class="text-nowrap" translate="no">text-field</code>, <code class="text-nowrap" translate="no">html-field</code>, <code class="text-nowrap" translate="no">value-field</code> и <code class="text-nowrap" translate="no">disabled-field</code> прописывает строку, содержащую имя свойства, которое вы хотели бы использовать:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n      <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>\n      <span class="hljs-attr">value-field</span>=<span class="hljs-string">&quot;item&quot;</span>\n      <span class="hljs-attr">text-field</span>=<span class="hljs-string">&quot;name&quot;</span>\n      <span class="hljs-attr">disabled-field</span>=<span class="hljs-string">&quot;notEnabled&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Выбранное: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;A&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Option A&#x27;</span> },\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Option B&#x27;</span> },\n          { <span class="hljs-attr">item</span>: <span class="hljs-string">&#x27;D&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Option C&#x27;</span>, <span class="hljs-attr">notEnabled</span>: <span class="hljs-literal">true</span> },\n          { <span class="hljs-attr">item</span>: { <span class="hljs-attr">d</span>: <span class="hljs-number">1</span> }, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Option D&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-group-options-fields.vue --&gt;</span></pre></div><h2 id="значение-радио-и-v-model" class="bv-no-focus-ring"><span class="bd-content-title">Значение радио и v-model<a class="anchorjs-link" href="#значение-радио-и-v-model" aria-labelledby="значение-радио-и-v-model"></a></span></h2> <p>Компоненты <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> не имеют значения по умолчанию. Вы должны явно указать значение через свойство <code class="text-nowrap" translate="no">value</code> в <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>. Это значение будет отправлено в <code class="text-nowrap" translate="no">v-model</code>, когда радио будет проверено.</p> <p><code class="text-nowrap" translate="no">v-model</code> как <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>, так и <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> привязывается к свойству <code class="text-nowrap" translate="no">checked</code>. Чтобы предварительно проверить радио, вы должны установить значение <code class="text-nowrap" translate="no">v-model</code> равным одному из значений радио (т.е. должно соответствовать значению, указанному в одном из параметра <code class="text-nowrap" translate="no">value</code>). Не используйте свойство <code class="text-nowrap" translate="no">checked</code> напрямую. Каждый радиомодуль в радиогруппе должен иметь уникальное значение.</p> <p>Радио поддерживают значения многих типов, такие как <code class="text-nowrap" translate="no">string</code>, <code class="text-nowrap" translate="no">boolean</code>, <code class="text-nowrap" translate="no">number</code> или простой <code class="text-nowrap" translate="no">object</code>.</p> <h2 id="инлайновые-и-стековые-радио" class="bv-no-focus-ring"><span class="bd-content-title">Инлайновые и стековые радио<a class="anchorjs-link" href="#инлайновые-и-стековые-радио" aria-labelledby="инлайновые-и-стековые-радио"></a></span></h2> <p>По умолчанию <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> генерирует встроенные радио, а <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> генерирует сложенные радио. Установите свойство <code class="text-nowrap" translate="no">stacked</code> на <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>, чтобы радиостанции появлялись одно над другим, или при использовании радиостанций не в группе, установите свойство <code class="text-nowrap" translate="no">inline</code> на <code class="text-nowrap" translate="no">b-form-radio</code> значение <code class="text-nowrap" translate="no">true</code>, чтобы сделать их встроенными.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Inline radios (default)&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-inline&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Stacked radios&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radios-stacked&quot;</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3&quot;</span>&gt;</span>Selected: <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ selected }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;first&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;First radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Second radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Third radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-stacked.vue --&gt;</span></pre></div><h2 id="размеры-элементов" class="bv-no-focus-ring"><span class="bd-content-title">Размеры элементов<a class="anchorjs-link" href="#размеры-элементов" aria-labelledby="размеры-элементов"></a></span></h2> <p>Используйте опцию <code class="text-nowrap" translate="no">size</code> для управления размером радио. Размер по умолчанию - средний. Поддерживаемые значения размера: <code class="text-nowrap" translate="no">sm</code> (маленький) и <code class="text-nowrap" translate="no">lg</code> (большой).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-size&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>Маленький<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-size&quot;</span>&gt;</span>По умолчанию<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-size&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>Большой<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- form-radio-sizes.vue --&gt;</span></pre></div><p>Размеры могут быть заданы для отдельных компонентов <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> или унаследованы от параметра <code class="text-nowrap" translate="no">size</code> в <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>.</p> <p><strong>Примечание:</strong> Bootstrap v4.x изначально не поддерживает размеры для настраиваемых элементов управления радио. Однако BootstrapVue включает настраиваемый SCSS/CSS, который добавляет поддержку для изменения размера настраиваемых радио.</p> <h2 id="радио-кнопочного-типа" class="bv-no-focus-ring"><span class="bd-content-title">Радио кнопочного типа<a class="anchorjs-link" href="#радио-кнопочного-типа" aria-labelledby="радио-кнопочного-типа"></a></span></h2> <p>Визуализируйте радио как кнопки, установив для свойства <code class="text-nowrap" translate="no">buttons</code> значение <code class="text-nowrap" translate="no">true</code> в <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>. Установите вариант кнопки, установив для свойства <code class="text-nowrap" translate="no">button-variant</code> один из стандартных вариантов кнопки Bootstrap (смотрите <a href="/docs/components/button" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-button&gt;</code></a> для поддерживаемых вариантов). По умолчанию <code class="text-nowrap" translate="no">button-variant</code> является <code class="text-nowrap" translate="no">secondary</code>.</p> <p>Свойство <code class="text-nowrap" translate="no">buttons</code> имеет приоритет над <code class="text-nowrap" translate="no">plain</code>, а <code class="text-nowrap" translate="no">button-variant</code> не имеет никакого эффекта, если <code class="text-nowrap" translate="no">buttons</code> не установлено.</p> <p>Радио в стиле кнопки будут иметь класс <code class="text-nowrap" translate="no">.active</code>, автоматически примененный к их метке, когда они находятся в отмеченном состоянии.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Button style radios&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn-radios-1&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radios-btn-default&quot;</span>\n        <span class="hljs-attr">buttons</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Button style radios with outline-primary variant and size lg&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn-radios-2&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">button-variant</span>=<span class="hljs-string">&quot;outline-primary&quot;</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-btn-outline&quot;</span>\n        <span class="hljs-attr">buttons</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Stacked button style radios&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;btn-radios-3&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-btn-stacked&quot;</span>\n        <span class="hljs-attr">buttons</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;radio1&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Radio 1&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;radio1&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Radio 3&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;radio2&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Radio 3 (disabled)&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;radio3&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Radio 4&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;radio4&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-buttons.vue --&gt;</span></pre></div><h2 id="радиовводы-нестандартного-стиля-простые" class="bv-no-focus-ring"><span class="bd-content-title">Радиовводы нестандартного стиля (простые)<a class="anchorjs-link" href="#радиовводы-нестандартного-стиля-простые" aria-labelledby="радиовводы-нестандартного-стиля-простые"></a></span></h2> <p>Вы можете сделать так, чтобы <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> и <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> отображали радио-ввод в собственном стиле браузера, установив свойство <code class="text-nowrap" translate="no">plain</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Plain inline radios&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plain-inline&quot;</span>\n        <span class="hljs-attr">plain</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Plain stacked radios&quot;</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;selected&quot;</span>\n        <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plain-stacked&quot;</span>\n        <span class="hljs-attr">plain</span>\n        <span class="hljs-attr">stacked</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">selected</span>: <span class="hljs-string">&#x27;first&#x27;</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;First radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Second radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Third radio&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span> }\n        ]\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-plain.vue --&gt;</span></pre></div><p><strong>Примечание:</strong> <code class="text-nowrap" translate="no">plain</code> не будет иметь никакого эффекта, если установлено <code class="text-nowrap" translate="no">buttons</code>/<code class="text-nowrap" translate="no">button</code>.</p> <h2 id="требуемое-ограничение" class="bv-no-focus-ring"><span class="bd-content-title">Требуемое ограничение<a class="anchorjs-link" href="#требуемое-ограничение" aria-labelledby="требуемое-ограничение"></a></span></h2> <p>При использовании отдельных компонентов <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> (не в <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code>), и вы хотите, чтобы радио были <code class="text-nowrap" translate="no">required</code> в вашей форме, вы <strong>должен</strong> предоставлять <code class="text-nowrap" translate="no">name</code> для каждого <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code> для того, чтобы требуемое ограничение работало. Все компоненты <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>, связанные с одной и той же <code class="text-nowrap" translate="no">v-model</code>, <strong>должны</strong> иметь одинаковое <code class="text-nowrap" translate="no">name</code>.</p> <p><code class="text-nowrap" translate="no">name</code> требуется для того, чтобы вспомогательные технологии (такие как программы чтения с экрана и пользователи, использующие только клавиатуру) могли знать, какие радиостанции принадлежат одной и той же переменной формы (имя также автоматически включает встроенную навигацию с клавиатуры браузера), поэтому <code class="text-nowrap" translate="no">required</code> будет только работать, если установлено <code class="text-nowrap" translate="no">name</code>. <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> автоматически сгенерирует уникальное имя входа, если оно не указано в группе.</p> <h2 id="автофокус" class="bv-no-focus-ring"><span class="bd-content-title">Автофокус<a class="anchorjs-link" href="#автофокус" aria-labelledby="автофокус"></a></span></h2> <p>Когда свойство <code class="text-nowrap" translate="no">autofocus</code> установлено на <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>, вход будет автоматически сфокусирован, когда он вставлен (т.е. <strong>установлен</strong>) в документ или повторно активирован, когда он находится внутри компонента Vue <code class="text-nowrap" translate="no">&lt;keep-alive&gt;</code>. Обратите внимание, что это свойство <strong>не</strong> устанавливает атрибут <code class="text-nowrap" translate="no">autofocus</code> на входе и не может сказать, когда ввод становится видимым.</p> <h2 id="контекстные-состояния" class="bv-no-focus-ring"><span class="bd-content-title">Контекстные состояния<a class="anchorjs-link" href="#контекстные-состояния" aria-labelledby="контекстные-состояния"></a></span></h2> <p>Bootstrap включает стили проверки <code class="text-nowrap" translate="no">valid</code> и <code class="text-nowrap" translate="no">invalid</code> состояний для большинства элементов управления формой.</p> <p>Вообще говоря, вы захотите использовать определенное состояние для определенных типов обратной связи:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (обозначает недопустимое состояние) отлично подходит, когда есть блокирующее или обязательное поле. Пользователь должен правильно заполнить это поле, чтобы отправить форму.</li> <li><code class="text-nowrap" translate="no">true</code> (обозначает действительное состояние) идеально подходит для ситуаций, когда у вас есть проверка по каждому полю во всей форме и вы хотите поощрить пользователя через остальные поля.</li> <li><code class="text-nowrap" translate="no">null</code> Не отображает состояние проверки (ни действительное, ни недействительное)</li> </ul> <p>Чтобы применить один из значков контекстного состояния на <code class="text-nowrap" translate="no">&lt;b-form-radio&gt;</code>, установите для свойства <code class="text-nowrap" translate="no">state</code> значение <code class="text-nowrap" translate="no">false</code> (для недопустимого), <code class="text-nowrap" translate="no">true</code> (для допустимого) или <code class="text-nowrap" translate="no">null</code> (состояние проверки отсутствует).</p> <p><strong>Примечание:</strong> Контекстное состояние не поддерживается для радиостанций, отображаемых в режиме кнопок.</p> <h3 id="контекстное-состояние-с-примером-обратной-связи" class="bv-no-focus-ring"><span class="bd-content-title">Контекстное состояние с примером обратной связи<a class="anchorjs-link" href="#контекстное-состояние-с-примером-обратной-связи" aria-labelledby="контекстное-состояние-с-примером-обратной-связи"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;options&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;radio-validation&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-invalid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span>&gt;</span>Пожалуйста, выберите один<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-invalid-feedback</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-valid-feedback</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;state&quot;</span>&gt;</span>Спасибо<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-valid-feedback</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">options</span>: [\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Первое радио&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;first&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Второе радио&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;second&#x27;</span> },\n          { <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Третье радио&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;third&#x27;</span> }\n        ]\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">state</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Boolean</span>(<span class="hljs-built_in">this</span>.value)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-radio-validation.vue --&gt;</span></pre></div><h3 id="передача-состояния-контекстной-проверки-вспомогательным-технологиям-и-пользователям-с-дальтонизмом" class="bv-no-focus-ring"><span class="bd-content-title">Передача состояния контекстной проверки вспомогательным технологиям и пользователям с дальтонизмом<a class="anchorjs-link" href="#передача-состояния-контекстной-проверки-вспомогательным-технологиям-и-пользователям-с-дальтонизмом" aria-labelledby="передача-состояния-контекстной-проверки-вспомогательным-технологиям-и-пользователям-с-дальтонизмом"></a></span></h3> <p>Использование этих контекстных состояний для обозначения состояния элемента управления формы обеспечивает только визуальную цветовую индикацию, которая не будет передана пользователям вспомогательных технологий, таких как программы чтения с экрана, или пользователям с дальтонизмом.</p> <p>Убедитесь, что также имеется альтернативная индикация состояния. Например, вы можете включить подсказку о состоянии в самом тексте элемента управления формой <code class="text-nowrap" translate="no">&lt;label&gt;</code> или путем предоставления дополнительного текстового блока справки (например, <code class="text-nowrap" translate="no">&lt;b-form-invalid-feedback&gt;</code>). В частности, для вспомогательных технологий недопустимым элементам управления формой также может быть назначен атрибут <code class="text-nowrap" translate="no">aria-invalid=&quot;true&quot;</code> (смотрите ниже).</p> <h3 id="атрибут-aria-aria-invalid" class="bv-no-focus-ring"><span class="bd-content-title">Атрибут ARIA <code class="text-nowrap" translate="no">aria-invalid</code><a class="anchorjs-link" href="#атрибут-aria-aria-invalid" aria-labelledby="атрибут-aria-aria-invalid"></a></span></h3> <p>Когда <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> имеет недопустимое контекстное состояние (т.е. state = <code class="text-nowrap" translate="no">false</code>), вам также может потребоваться для установки <code class="text-nowrap" translate="no">&lt;b-form-radio-group&gt;</code> свойства <code class="text-nowrap" translate="no">aria-invalid</code> значение <code class="text-nowrap" translate="no">true</code>.</p> <p>Поддерживаемые значения <code class="text-nowrap" translate="no">aria-invalid</code>:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (по умолчанию) Ошибок не обнаружено</li> <li><code class="text-nowrap" translate="no">true</code> Значение не прошло проверку.</li> </ul> <p><code class="text-nowrap" translate="no">aria-invalid</code> автоматически устанавливается в <code class="text-nowrap" translate="no">true</code>, если свойство <code class="text-nowrap" translate="no">state</code> имеет значение <code class="text-nowrap" translate="no">false</code>.</p>'}}}]);