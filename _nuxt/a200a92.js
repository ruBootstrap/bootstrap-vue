(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{604:function(n,l){n.exports={baseTOC:{top:"#наведение",title:"Наведение",toc:[{href:"#обзор",label:"Обзор"},{href:"#синтаксис-и-использование-директив",label:"Синтаксис и использование директив",toc:[{href:"#пример-использования",label:"Пример использования"}]},{href:"#живой-пример",label:"Живой пример"},{href:"#доступность-concerns",label:"Доступность concerns"}]},titleLead:'<h1 id="наведение" class="bv-no-focus-ring"><span class="bd-content-title">Наведение</span></h1> <p class="bd-lead"><code class="text-nowrap" translate="no">v-b-hover</code> — это легковесная директива, которая позволяет вам реагировать, когда элемент становится наведенным или не наведенным.</p>',body:'<h2 id="обзор" class="bv-no-focus-ring"><span class="bd-content-title">Обзор<a class="anchorjs-link" href="#обзор" aria-labelledby="обзор"></a></span></h2> <p>Директиву <code class="text-nowrap" translate="no">v-b-hover</code> можно использовать как альтернативу использованию пользовательского CSS для обработки состояний наведения.</p> <ul> <li><code class="text-nowrap" translate="no">v-b-hover</code> вызовет ваш метод обратного вызова с логическим значением, указывающим, наведен ли элемент или нет.</li> <li>Директиву можно разместить практически на любом элементе или компоненте.</li> <li>Внутри BootstrapVue использует эту директиву в нескольких компонентах.</li> </ul> <h2 id="синтаксис-и-использование-директив" class="bv-no-focus-ring"><span class="bd-content-title">Синтаксис и использование директив<a class="anchorjs-link" href="#синтаксис-и-использование-директив" aria-labelledby="синтаксис-и-использование-директив"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-b-hover</span>=<span class="hljs-string">&quot;callback&quot;</span>&gt;</span>контент<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></pre></div><p>Где требуется обратный вызов:</p> <ul> <li>Ссылка на функцию, которая будет вызываться при изменении состояния наведения. Обратному вызову передается один логический аргумент. <code class="text-nowrap" translate="no">true</code> указывает, что элемент (или компонент) находится под курсором указывающего устройства пользователя, или <code class="text-nowrap" translate="no">false</code>, если элемент не под наведением.</li> </ul> <p>Директива не имеет модификаторов.</p> <h3 id="пример-использования" class="bv-no-focus-ring"><span class="bd-content-title">Пример использования<a class="anchorjs-link" href="#пример-использования" aria-labelledby="пример-использования"></a></span></h3> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-b-hover</span>=<span class="hljs-string">&quot;hoverHandler&quot;</span>&gt;</span> ... <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">hoverHandler</span>(<span class="hljs-params">isHovered</span>)</span> {\n        <span class="hljs-keyword">if</span> (isHovered) {\n          <span class="hljs-comment">// Do something</span>\n        } <span class="hljs-keyword">else</span> {\n          <span class="hljs-comment">// Do something else</span>\n        }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></pre></div><h2 id="живой-пример" class="bv-no-focus-ring"><span class="bd-content-title">Живой пример<a class="anchorjs-link" href="#живой-пример" aria-labelledby="живой-пример"></a></span></h2> <p>Далее мы меняем иконки и цвет текста в зависимости от состояния наведения элемента:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-b-hover</span>=<span class="hljs-string">&quot;handleHover&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;border rounded py-3 px-4&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-icon</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;isHovered&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;battery-full&quot;</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-icon</span> <span class="hljs-attr">v-else</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;battery&quot;</span> <span class="hljs-attr">scale</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-2&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;isHovered ? &#x27;text-danger&#x27; : &#x27;&#x27;&quot;</span>&gt;</span>Наведите курсор на эту область<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">isHovered</span>: <span class="hljs-literal">false</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">handleHover</span>(<span class="hljs-params">hovered</span>)</span> {\n        <span class="hljs-built_in">this</span>.isHovered = hovered\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-v-hover-example.vue --&gt;</span></pre></div><h2 id="доступность-concerns" class="bv-no-focus-ring"><span class="bd-content-title">Доступность concerns<a class="anchorjs-link" href="#доступность-concerns" aria-labelledby="доступность-concerns"></a></span></h2> <p>Состояние наведения не следует использовать для передачи особого значения, поскольку пользователи программ чтения с экрана и пользователи, работающие только с клавиатурой, обычно не могут активировать состояние наведения на элементах.</p>'}}}]);