(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{473:function(n,t){n.exports={baseTOC:{top:"#navbar",title:"Navbar",toc:[{href:"#color-schemes",label:"Color schemes"},{href:"#placement",label:"Placement"},{href:"#supported-content",label:"Supported content",toc:[{href:"#b-navbar-brand",label:"&lt;b-navbar-brand&gt;"},{href:"#b-navbar-nav",label:"&lt;b-navbar-nav&gt;"},{href:"#b-nav-item",label:"&lt;b-nav-item&gt;"},{href:"#b-nav-text",label:"&lt;b-nav-text&gt;"},{href:"#b-nav-item-dropdown",label:"&lt;b-nav-item-dropdown&gt;"},{href:"#b-nav-form",label:"&lt;b-nav-form&gt;"},{href:"#b-navbar-toggle-and-b-collapse-is-nav",label:"&lt;b-navbar-toggle&gt; and &lt;b-collapse is-nav&gt;"}]},{href:"#printing",label:"Printing"},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="navbar" class="bv-no-focus-ring"><span class="bd-content-title">Navbar</span></h1> <p class="bd-lead">The component <code class="text-nowrap" translate="no">&lt;b-navbar&gt;</code> is a wrapper that positions branding, navigation, and other elements into a concise header. It&#39;s easily extensible and thanks to the <code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code> component, it can easily integrate responsive behaviors.</p>',body:'<p><strong>Example:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">toggleable</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>NavBar<span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-toggle</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;nav-collapse&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-toggle</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-collapse</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nav-collapse&quot;</span> <span class="hljs-attr">is-nav</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Link<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n\n      <span class="hljs-comment">&lt;!-- Right aligned nav items --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-auto&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-form</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-sm-2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2 my-sm-0&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>Search<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-form</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Lang&quot;</span> <span class="hljs-attr">right</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>EN<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>ES<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>RU<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>FA<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item-dropdown</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item-dropdown</span> <span class="hljs-attr">right</span>&gt;</span>\n          <span class="hljs-comment">&lt;!-- Using &#x27;button-content&#x27; slot --&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button-content</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>User<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Profile<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Sign Out<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item-dropdown</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-collapse</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar.vue --&gt;</span></pre></div><h2 id="color-schemes" class="bv-no-focus-ring"><span class="bd-content-title">Color schemes<a class="anchorjs-link" href="#color-schemes" aria-labelledby="color-schemes"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-navbar&gt;</code> supports the standard Bootstrap v4 available background color variants. Set the <code class="text-nowrap" translate="no">variant</code> prop to one of the following values to change the background color: <code class="text-nowrap" translate="no">primary</code>, <code class="text-nowrap" translate="no">success</code>, <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">warning</code>, <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">dark</code>, or <code class="text-nowrap" translate="no">light</code>.</p> <p>Control the text color by setting <code class="text-nowrap" translate="no">type</code> prop to <code class="text-nowrap" translate="no">light</code> for use with light background color variants, or <code class="text-nowrap" translate="no">dark</code> for dark background color variants.</p> <h2 id="placement" class="bv-no-focus-ring"><span class="bd-content-title">Placement<a class="anchorjs-link" href="#placement" aria-labelledby="placement"></a></span></h2> <p>Control the placement of the navbar by setting one of two props:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>prop</th> <th>type</th> <th>default</th> <th>description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">fixed</code></td> <td>String</td> <td><code class="text-nowrap" translate="no">null</code></td> <td>Set to <code class="text-nowrap" translate="no">top</code> for fixed to the top of the viewport, or <code class="text-nowrap" translate="no">bottom</code> for fixed to the <code class="text-nowrap" translate="no">bottom</code> of the viewport.</td> </tr> <tr> <td><code class="text-nowrap" translate="no">sticky</code></td> <td>Boolean</td> <td><code class="text-nowrap" translate="no">false</code></td> <td>Set to <code class="text-nowrap" translate="no">true</code> to make the navbar stick to the top of the viewport (or parent container that has <code class="text-nowrap" translate="no">position: relative</code> set) when scrolled.</td> </tr> </tbody></table> </div><p><strong>Notes:</strong></p> <ul> <li>Fixed positioning uses CSS <code class="text-nowrap" translate="no">position: fixed</code>. You may need to adjust your document top/bottom padding or margin.</li> <li>CSS <code class="text-nowrap" translate="no">position: sticky</code> (used for <code class="text-nowrap" translate="no">sticky</code>) is not fully supported in every browser. For browsers that do not support <code class="text-nowrap" translate="no">position: sticky</code>, it will fallback natively to <code class="text-nowrap" translate="no">position: relative</code>.</li> </ul> <h2 id="supported-content" class="bv-no-focus-ring"><span class="bd-content-title">Supported content<a class="anchorjs-link" href="#supported-content" aria-labelledby="supported-content"></a></span></h2> <p>Navbars come with built-in support for a handful of sub-components. Choose from the following as needed:</p> <ul> <li><code class="text-nowrap" translate="no">&lt;b-navbar-brand&gt;</code> for your company, product, or project name.</li> <li><code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> for use with the <code class="text-nowrap" translate="no">&lt;b-collapse is-nav&gt;</code> component.</li> <li><code class="text-nowrap" translate="no">&lt;b-collapse is-nav&gt;</code> for grouping and hiding navbar contents by a parent breakpoint.</li> <li><code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code> for a full-height and lightweight navigation (including support for dropdowns). The following sub-components inside <code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code> are supported:<ul> <li><code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> for link (and router-link) action items</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> for nav dropdown menus</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code> for adding vertically centered strings of text.</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code> for any form controls and actions.</li> </ul> </li> </ul> <h3 id="b-navbar-brand" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-navbar-brand&gt;</code><a class="anchorjs-link" href="#b-navbar-brand" aria-labelledby="b-navbar-brand"></a></span></h3> <p>The <code class="text-nowrap" translate="no">&lt;b-navbar-brand&gt;</code> generates a link if <code class="text-nowrap" translate="no">href</code> is provided, or a <code class="text-nowrap" translate="no">&lt;router-link&gt;</code> if <code class="text-nowrap" translate="no">to</code> is provided. If neither is given it renders as a <code class="text-nowrap" translate="no">&lt;div&gt;</code> tag. You can override the tag type by setting the <code class="text-nowrap" translate="no">tag</code> prop to the element you would like rendered:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- As a link --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;faded&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-brand-link.vue --&gt;</span></pre></div><div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- As a heading --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;faded&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;h1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-brand-heading.vue --&gt;</span></pre></div><p>Adding images to the <code class="text-nowrap" translate="no">&lt;b-navbar-brand&gt;</code> will likely always require custom styles or utilities to properly size. Here are some examples to demonstrate:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Just an image --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;faded&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://placekitten.com/g/30/30&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Kitten&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-brand-image.vue --&gt;</span></pre></div><div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Image and text --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;faded&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://placekitten.com/g/30/30&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-inline-block align-top&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Kitten&quot;</span>&gt;</span>\n      BootstrapVue\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-brand-image-and-text.vue --&gt;</span></pre></div><h3 id="b-navbar-nav" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code><a class="anchorjs-link" href="#b-navbar-nav" aria-labelledby="b-navbar-nav"></a></span></h3> <p>Navbar navigation links build on the <code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code> parent component and requires the use of <code class="text-nowrap" translate="no">&lt;b-collapse is-nav&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-nav-toggle&gt;</code> toggler for proper responsive styling. Navigation in navbars will also grow to occupy as much horizontal space as possible to keep your navbar contents securely aligned.</p> <p><code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code> supports the following child components:</p> <ul> <li><code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> for link (and router-link) action items</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code> for adding vertically centered strings of text.</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> for navbar dropdown menus</li> <li><code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code> for adding simple forms to the navbar.</li> </ul> <h3 id="b-nav-item" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code><a class="anchorjs-link" href="#b-nav-item" aria-labelledby="b-nav-item"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> is the primary link (and <code class="text-nowrap" translate="no">&lt;router-link&gt;</code>) component. Providing a <code class="text-nowrap" translate="no">to</code> prop value will generate a <code class="text-nowrap" translate="no">&lt;router-link&gt;</code> while providing an <code class="text-nowrap" translate="no">href</code> prop value will generate a standard link.</p> <p>Set the <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> <code class="text-nowrap" translate="no">active</code> prop will highlight the item as being the active page, Disable a <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code> by setting the prop <code class="text-nowrap" translate="no">disabled</code> to true.</p> <p>Handle click events by specifying a handler for the <code class="text-nowrap" translate="no">@click</code> event on <code class="text-nowrap" translate="no">&lt;b-nav-item&gt;</code>.</p> <h3 id="b-nav-text" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code><a class="anchorjs-link" href="#b-nav-text" aria-labelledby="b-nav-text"></a></span></h3> <p>Navbars may contain bits of text with the help of <code class="text-nowrap" translate="no">&lt;b-nav-text&gt;</code>. This component adjusts vertical alignment and horizontal spacing for strings of text.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">toggleable</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-toggle</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;nav-text-collapse&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-toggle</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-collapse</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;nav-text-collapse&quot;</span> <span class="hljs-attr">is-nav</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-text</span>&gt;</span>Navbar text<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-text</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-collapse</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-text.vue --&gt;</span></pre></div><h3 id="b-nav-item-dropdown" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code><a class="anchorjs-link" href="#b-nav-item-dropdown" aria-labelledby="b-nav-item-dropdown"></a></span></h3> <p>For <code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code> usage, see the <a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a> docs. Note split dropdowns are not supported in <code class="text-nowrap" translate="no">&lt;b-navbar&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;dark&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n\n      <span class="hljs-comment">&lt;!-- Navbar dropdowns --&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Lang&quot;</span> <span class="hljs-attr">right</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>EN<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>ES<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>RU<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>FA<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item-dropdown</span>&gt;</span>\n\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;User&quot;</span> <span class="hljs-attr">right</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Account<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Settings<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-dropdown.vue --&gt;</span></pre></div><h3 id="b-nav-form" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code><a class="anchorjs-link" href="#b-nav-form" aria-labelledby="b-nav-form"></a></span></h3> <p>Use <code class="text-nowrap" translate="no">&lt;b-nav-form&gt;</code> to place inline form controls into your navbar</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-sm-2&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Search&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-2 my-sm-0&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>Search<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-form.vue --&gt;</span></pre></div><p>Input Groups work as well:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;light&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;light&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">prepend</span>=<span class="hljs-string">&quot;@&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-navbar-form-inputs.vue --&gt;</span></pre></div><h3 id="b-navbar-toggle-and-b-collapse-is-nav" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-collapse is-nav&gt;</code><a class="anchorjs-link" href="#b-navbar-toggle-and-b-collapse-is-nav" aria-labelledby="b-navbar-toggle-and-b-collapse-is-nav"></a></span></h3> <p>Navbars are not responsive by default, but you can easily modify them to change that. Responsive behavior depends on our <code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code> component.</p> <p>Wrap <code class="text-nowrap" translate="no">&lt;b-navbar-nav&gt;</code> components in a <code class="text-nowrap" translate="no">&lt;b-collapse is-nav&gt;</code> (<strong>remember to set the <code class="text-nowrap" translate="no">is-nav</code> prop!</strong>) to specify content that will collapse based on a particular breakpoint. Assign a document unique <code class="text-nowrap" translate="no">id</code> value on the <code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code>.</p> <p>Use the <code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> component to control the collapse component, and set the <code class="text-nowrap" translate="no">target</code> prop of <code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> to the <code class="text-nowrap" translate="no">id</code> of <code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code>.</p> <p>Set the <code class="text-nowrap" translate="no">toggleable</code> prop on <code class="text-nowrap" translate="no">&lt;b-navbar&gt;</code> to the desired breakpoint you would like content to automatically expand at. Possible <code class="text-nowrap" translate="no">toggleable</code> values are <code class="text-nowrap" translate="no">sm</code>, <code class="text-nowrap" translate="no">md</code>, <code class="text-nowrap" translate="no">lg</code> and <code class="text-nowrap" translate="no">xl</code>. Setting <code class="text-nowrap" translate="no">toggleable</code> to <code class="text-nowrap" translate="no">true</code> (or an empty string) will set the navbar to be always collapsed, while setting it to <code class="text-nowrap" translate="no">false</code> (the default) will disable collapsing (always expanded).</p> <p><code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> components are left-aligned by default, but should they follow a sibling element like <code class="text-nowrap" translate="no">&lt;b-navbar-brand&gt;</code>, they&#39;ll automatically be aligned to the far right. Reversing your markup will reverse the placement of the toggler.</p> <p>See the first example on this page for reference, and also refer to <a href="/docs/components/collapse" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code></a> for details on the collapse component.</p> <p>Besides being used to control a collapse, the <code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> can also be used to toggle visibility of the <a href="/docs/components/sidebar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code></a> component. Just specify the ID of the <code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> via the <code class="text-nowrap" translate="no">target</code> prop.</p> <p>Internally, <code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> uses the <a href="/docs/directives/toggle" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a>.</p> <h4 id="custom-navbar-toggle" class="bv-no-focus-ring"><span class="bd-content-title">Custom navbar toggle<a class="anchorjs-link" href="#custom-navbar-toggle" aria-labelledby="custom-navbar-toggle"></a></span></h4> <p><code class="text-nowrap" translate="no">&lt;b-navbar-toggle&gt;</code> renders the default Bootstrap v4 <em>hamburger</em> (which is a background SVG image). You can supply your own content (such as an icon) via the optionally scoped <code class="text-nowrap" translate="no">default</code> slot. The default slot scope contains the property <code class="text-nowrap" translate="no">expanded</code>, which will be <code class="text-nowrap" translate="no">true</code> when the collapse is expanded, or <code class="text-nowrap" translate="no">false</code> when the collapse is collapsed.</p> <p>Note that the <code class="text-nowrap" translate="no">expanded</code> scope property only works when supplying the <code class="text-nowrap" translate="no">target</code> prop as a <code class="text-nowrap" translate="no">string</code>, and not an <code class="text-nowrap" translate="no">array</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar</span> <span class="hljs-attr">toggleable</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;dark&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-brand</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>NavBar<span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-brand</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-toggle</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;navbar-toggle-collapse&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">default</span>=<span class="hljs-string">&quot;{ expanded }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-icon</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;expanded&quot;</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chevron-bar-up&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-icon</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-icon</span> <span class="hljs-attr">v-else</span> <span class="hljs-attr">icon</span>=<span class="hljs-string">&quot;chevron-bar-down&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-icon</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-toggle</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-collapse</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;navbar-toggle-collapse&quot;</span> <span class="hljs-attr">is-nav</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-navbar-nav</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-auto&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Link 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Link 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-nav-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-nav-item</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar-nav</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-collapse</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-navbar</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-comment">&lt;!-- b-navbar-toggle-slot.vue --&gt;</span></pre></div><h2 id="printing" class="bv-no-focus-ring"><span class="bd-content-title">Printing<a class="anchorjs-link" href="#printing" aria-labelledby="printing"></a></span></h2> <p>Navbars are hidden by default when printing. Force them to be printed by setting the <code class="text-nowrap" translate="no">print</code> prop.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/components/collapse" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-collapse&gt;</code> component</a></li> <li><a href="/docs/components/sidebar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-sidebar&gt;</code> component</a></li> <li><a href="/docs/directives/toggle" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-toggle</code> directive</a></li> <li><a href="/docs/components/nav" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> documentation</a> for additional components and sub-component aliases</li> </ul> <p>Refer to the <a href="/docs/reference/router-links" class="font-weight-bold">Router support</a> reference page for router-link specific props.</p>'}}}]);