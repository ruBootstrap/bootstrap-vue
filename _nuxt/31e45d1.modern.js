(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{465:function(n,t){n.exports={baseTOC:{top:"#джамботрон",title:"Джамботрон",toc:[{href:"#параметры",label:"Параметры",toc:[{href:"#заголовок",label:"Заголовок"},{href:"#ведущий-текст",label:"Ведущий текст"}]},{href:"#текучая-ширина",label:"Текучая ширина"},{href:"#тег-компоненты",label:"Тег компоненты"},{href:"#варианты",label:"Варианты"}]},titleLead:'<h1 id="джамботрон" class="bv-no-focus-ring"><span class="bd-content-title">Джамботрон</span></h1> <p class="bd-lead">Легкий и гибкий компонент, который при желании может расширять всю область просмотра для демонстрации ключевых маркетинговых сообщений на вашем сайте.</p>',body:'<p>Вы можете установить заголовок и текст лида через свойства <code class="text-nowrap" translate="no">header</code> и <code class="text-nowrap" translate="no">lead</code> или использовать именованные слоты <code class="text-nowrap" translate="no">header</code> и <code class="text-nowrap" translate="no">lead</code>, если вам нужна поддержка HTML.</p> <p>Все остальное между открывающим и закрывающим тегами будет отображаться в нижней части jumbotron.</p> <p><strong>Использование со свойством:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span> <span class="hljs-attr">lead</span>=<span class="hljs-string">&quot;Компоненты Bootstrap v4 для Vue.js 2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Для получения дополнительной информации посетите веб-сайт<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Больше информации<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron.vue --&gt;</span></pre></div><p><strong>Использование со слотами:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">lead</span>&gt;</span>\n      Это простой герой, простой компонент в стиле jumbotron для привлечения дополнительного внимания к избранному контенту или информации.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      Он использует служебные классы для типографики и интервалов для размещения содержимого в более крупном контейнере.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Сделай что-нибудь<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Сделай что-нибудь еще<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-using-slots.vue --&gt;</span></pre></div><h2 id="параметры" class="bv-no-focus-ring"><span class="bd-content-title">Параметры<a class="anchorjs-link" href="#параметры" aria-labelledby="параметры"></a></span></h2> <h3 id="заголовок" class="bv-no-focus-ring"><span class="bd-content-title">Заголовок<a class="anchorjs-link" href="#заголовок" aria-labelledby="заголовок"></a></span></h3> <p>Управляйте тем, какой тег будет отображаться для заголовка, установив <code class="text-nowrap" translate="no">header-tag</code> для соответствующего элемента HTML. По умолчанию это <code class="text-nowrap" translate="no">h1</code>. Внутри этого тега будут отображаться как свойство <code class="text-nowrap" translate="no">header</code>, так и слот <code class="text-nowrap" translate="no">header</code>. Если указаны и опора, и слот, слот будет показан.</p> <p>Управляйте общим размером текста заголовка, задав для свойства <code class="text-nowrap" translate="no">header-level</code> значение от <code class="text-nowrap" translate="no">1</code> до <code class="text-nowrap" translate="no">4</code>, где <code class="text-nowrap" translate="no">1</code> - самый большой, а <code class="text-nowrap" translate="no">4</code> - самый маленький. Значение по умолчанию - <code class="text-nowrap" translate="no">3</code>.</p> <h3 id="ведущий-текст" class="bv-no-focus-ring"><span class="bd-content-title">Ведущий текст<a class="anchorjs-link" href="#ведущий-текст" aria-labelledby="ведущий-текст"></a></span></h3> <p>Управляйте тем, какой тег будет отображаться для текста лида, установив в теге <code class="text-nowrap" translate="no">lead-tag</code> нужный HTML-элемент. По умолчанию это <code class="text-nowrap" translate="no">p</code>. Внутри этого тега будут отображаться как свойство <code class="text-nowrap" translate="no">lead</code>, так и слот <code class="text-nowrap" translate="no">lead</code>. Если указаны и опора, и слот, слот будет показан.</p> <h2 id="текучая-ширина" class="bv-no-focus-ring"><span class="bd-content-title">Текучая ширина<a class="anchorjs-link" href="#текучая-ширина" aria-labelledby="текучая-ширина"></a></span></h2> <p>Чтобы сделать <code class="text-nowrap" translate="no">&lt;b-jumbotron&gt;</code> на всю ширину и без закругленных углов, установите свойство <code class="text-nowrap" translate="no">fluid</code>. Внутреннее содержимое будет автоматически помещено в <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> (фиксированной ширины в различных контрольных точках). Чтобы заменить его на fluid-контейнер, установите свойство <code class="text-nowrap" translate="no">container-fluid</code>. Свойство <code class="text-nowrap" translate="no">container-fluid</code> не действует, если свойство <code class="text-nowrap" translate="no">fluid</code> не установлено.</p> <h2 id="тег-компоненты" class="bv-no-focus-ring"><span class="bd-content-title">Тег компоненты<a class="anchorjs-link" href="#тег-компоненты" aria-labelledby="тег-компоненты"></a></span></h2> <p>По умолчанию, <code class="text-nowrap" translate="no">&lt;b-jumbotron&gt;</code> отображает свой корневой элемент как <code class="text-nowrap" translate="no">div</code>. Измените тег элемента на любой другой подходящий элемент, установив свойство <code class="text-nowrap" translate="no">tag</code> на желаемое имя тега элемента.</p> <h2 id="варианты" class="bv-no-focus-ring"><span class="bd-content-title">Варианты<a class="anchorjs-link" href="#варианты" aria-labelledby="варианты"></a></span></h2> <p>Управляйте общим вариантом фона с помощью свойства <code class="text-nowrap" translate="no">bg-variant</code> ( установите значение <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">warning</code>, <code class="text-nowrap" translate="no">light</code>, <code class="text-nowrap" translate="no">dark</code>, и т. д.), вариант границы с помощью свойства <code class="text-nowrap" translate="no">border-variant</code> и текстовый вариант с помощью свойства <code class="text-nowrap" translate="no">text-variant</code>. Все три свойства по умолчанию равны <code class="text-nowrap" translate="no">null</code>, что заставит jumbotron использовать стиль по умолчанию.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">bg-variant</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">text-variant</span>=<span class="hljs-string">&quot;white&quot;</span> <span class="hljs-attr">border-variant</span>=<span class="hljs-string">&quot;dark&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">lead</span>&gt;</span>\n      Это простой герой, простой компонент в стиле jumbotron для привлечения дополнительного внимания к избранному контенту или информации.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      Он использует служебные классы для типографики и интервалов для размещения содержимого в более крупном контейнере.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-variants.vue --&gt;</span></pre></div>'}}}]);