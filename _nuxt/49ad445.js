(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{604:function(t,n){t.exports={baseTOC:{top:"#tooltip",title:"Tooltip",toc:[{href:"#обзор",label:"Обзор"},{href:"#positioning",label:"Positioning"},{href:"#triggers",label:"Triggers",toc:[{href:"#making-tooltips-work-for-keyboard-and-assistive-technology-users",label:"Making tooltips work for keyboard and assistive technology users"},{href:"#disabled-elements",label:"Disabled elements"},{href:"#caveats-with-focus-trigger-on-button-elements",label:"Caveats with focus trigger on &lt;button&gt; elements"},{href:"#dismiss-on-next-click",label:"Dismiss on next click"}]},{href:"#title-content",label:"Title content"},{href:"#variants-and-custom-class",label:"Variants and custom class"},{href:"#directive-syntax-and-usage",label:"Directive syntax and usage",toc:[{href:"#usage",label:"Usage"}]},{href:"#hiding-and-showing-tooltips-via-root-events",label:"Hiding and showing tooltips via $root events"},{href:"#disabling-and-enabling-tooltips-via-root-events",label:"Disabling and enabling tooltips via $root events"},{href:"#смотрите-также",label:"Смотрите также"}]},titleLead:'<h1 id="tooltip" class="bv-no-focus-ring"><span class="bd-content-title">Tooltip</span></h1> <p class="bd-lead">Add custom BootstrapVue tooltips to any element. Tooltips can be triggered by hovering, focusing, or clicking an element.</p>',body:'<h2 id="обзор" class="bv-no-focus-ring"><span class="bd-content-title">Обзор<a class="anchorjs-link" href="#обзор" aria-labelledby="обзор"></a></span></h2> <p>Use the <code class="text-nowrap" translate="no">v-b-tooltip</code> directive on any element or component where you would like a tooltip to appear.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center my-3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tooltip content&quot;</span>&gt;</span>Hover Me<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip.vue --&gt;</span></pre></div><p>Things to know when using the tooltip directive:</p> <ul> <li>Tooltips rely on the 3rd party library <a href="https://popper.js.org/" target="_blank" rel="noopener">Popper.js</a> for positioning.</li> <li>Tooltips require BootstrapVue&#39;s custom SCSS/CSS in order to function correctly, and for variants.</li> <li>If a title is not provided (or is an empty string), the tooltip will not show.</li> <li>Specify container: &#39;body&#39; (the default) to avoid rendering problems in more complex components (like input groups, button groups, etc.).</li> <li>Triggering tooltips on hidden elements will not work.</li> <li>Tooltips for <code class="text-nowrap" translate="no">disabled</code> elements must be triggered on a wrapper element.</li> <li>When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use white-space: nowrap; on your <code class="text-nowrap" translate="no">&lt;a&gt;</code>s, <code class="text-nowrap" translate="no">&lt;b-link&gt;</code>s and <code class="text-nowrap" translate="no">&lt;router-link&gt;</code>s to avoid this behavior.</li> <li>Tooltips must be hidden before their corresponding elements have been removed from the DOM.</li> </ul> <h2 id="positioning" class="bv-no-focus-ring"><span class="bd-content-title">Positioning<a class="anchorjs-link" href="#positioning" aria-labelledby="positioning"></a></span></h2> <p>Twelve options are available for positioning: <code class="text-nowrap" translate="no">top</code>, <code class="text-nowrap" translate="no">topleft</code>, <code class="text-nowrap" translate="no">topright</code>, <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">righttop</code>, <code class="text-nowrap" translate="no">rightbottom</code>, <code class="text-nowrap" translate="no">bottom</code>, <code class="text-nowrap" translate="no">bottomleft</code>, <code class="text-nowrap" translate="no">bottomright</code>, <code class="text-nowrap" translate="no">left</code>, <code class="text-nowrap" translate="no">lefttop</code>, and <code class="text-nowrap" translate="no">leftbottom</code> aligned. The default position is <code class="text-nowrap" translate="no">top</code>. Positioning is relative to the trigger element.</p> <div class="bd-example bd-example-tooltip-static"> <div class="tooltip b-tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip"> <div class="arrow" style="left:calc(50% - 6px)"></div> <div class="tooltip-inner">Tooltip on the top</div> </div> <div class="tooltip b-tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip"> <div class="arrow" style="right:0"></div> <div class="tooltip-inner">Tooltip on the topleft</div> </div> <div class="tooltip b-tooltip bs-tooltip-top bs-tooltip-top-docs" role="tooltip"> <div class="arrow" style="left:0"></div> <div class="tooltip-inner">Tooltip on the topright</div> </div> <div class="tooltip b-tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip"> <div class="arrow" style="top:5px"></div> <div class="tooltip-inner">Tooltip on the right</div> </div> <div class="tooltip b-tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip"> <div class="arrow" style="bottom:0"></div> <div class="tooltip-inner">Tooltip on the righttop</div> </div> <div class="tooltip b-tooltip bs-tooltip-right bs-tooltip-right-docs" role="tooltip"> <div class="arrow" style="top:0"></div> <div class="tooltip-inner">Tooltip on the rightbottom</div> </div> <div class="tooltip b-tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip"> <div class="arrow" style="left:calc(50% - 6px)"></div> <div class="tooltip-inner">Tooltip on the bottom</div> </div> <div class="tooltip b-tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip"> <div class="arrow" style="right:0"></div> <div class="tooltip-inner">Tooltip on the bottomleft</div> </div> <div class="tooltip b-tooltip bs-tooltip-bottom bs-tooltip-bottom-docs" role="tooltip"> <div class="arrow" style="left:0"></div> <div class="tooltip-inner">Tooltip on the bottomright</div> </div> <div class="tooltip b-tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip"> <div class="arrow" style="top:5px"></div> <div class="tooltip-inner">Tooltip on the left</div> </div> <div class="tooltip b-tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip"> <div class="arrow" style="bottom:0"></div> <div class="tooltip-inner">Tooltip on the lefttop</div> </div> <div class="tooltip b-tooltip bs-tooltip-left bs-tooltip-left-docs" role="tooltip"> <div class="arrow" style="top:0"></div> <div class="tooltip-inner">Tooltip on the leftbottom</div> </div> </div> <p><strong>Live example</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.top</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Top<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.right</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Right<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.left</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Left<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.bottom</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Bottom<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.topright</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Top right<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.topleft</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Top left<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.bottomright</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Bottom right<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.bottomleft</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Bottom left<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.lefttop</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Left top<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.leftbottom</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Left bottom<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.righttop</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Right top<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.rightbottom</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>Right bottom<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-positioning.vue --&gt;</span></pre></div><h2 id="triggers" class="bv-no-focus-ring"><span class="bd-content-title">Triggers<a class="anchorjs-link" href="#triggers" aria-labelledby="triggers"></a></span></h2> <p>Tooltips can be triggered (opened/closed) via any combination of <code class="text-nowrap" translate="no">click</code>, <code class="text-nowrap" translate="no">hover</code> and <code class="text-nowrap" translate="no">focus</code>. The default trigger is <code class="text-nowrap" translate="no">hover focus</code>. Or a trigger of manual can be specified, where the popover can only be opened or closed <a href="#hiding-and-showing-tooltips-via-root-events" class="font-weight-bold">programmatically</a>.</p> <p>If a tooltip has more than one trigger, then all triggers must be cleared before the tooltip will close. I.e. if a tooltip has the trigger <code class="text-nowrap" translate="no">focus click</code>, and it was opened by <code class="text-nowrap" translate="no">focus</code>, and the user then clicks the trigger element, they must click it again <strong>and</strong> move focus to close the tooltip.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Hover + Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.click</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.focus</span>=<span class="hljs-string">&quot;&#x27;Tooltip!&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-success&quot;</span>&gt;</span>Focus<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-triggers.vue --&gt;</span></pre></div><h3 id="making-tooltips-work-for-keyboard-and-assistive-technology-users" class="bv-no-focus-ring"><span class="bd-content-title">Making tooltips work for keyboard and assistive technology users<a class="anchorjs-link" href="#making-tooltips-work-for-keyboard-and-assistive-technology-users" aria-labelledby="making-tooltips-work-for-keyboard-and-assistive-technology-users"></a></span></h3> <p>You should only add tooltips to HTML elements that are traditionally keyboard-focusable and interactive (such as links, buttons, or form controls). Although arbitrary HTML elements (such as <code class="text-nowrap" translate="no">&lt;span&gt;</code>s) can be made focusable by adding the <code class="text-nowrap" translate="no">tabindex=&quot;0&quot;</code> attribute, this will add potentially annoying and confusing tab stops on non-interactive elements for keyboard users. In addition, most assistive technologies currently do not announce the tooltip in this situation.</p> <p>Additionally, do not rely solely on <code class="text-nowrap" translate="no">hover</code> as the trigger for your tooltip, as this will make your tooltips <em>impossible to trigger for keyboard-only users</em>.</p> <h3 id="disabled-elements" class="bv-no-focus-ring"><span class="bd-content-title">Disabled elements<a class="anchorjs-link" href="#disabled-elements" aria-labelledby="disabled-elements"></a></span></h3> <p>Elements with the <code class="text-nowrap" translate="no">disabled</code> attribute aren’t interactive, meaning users cannot focus, hover, or click them to trigger a tooltip (or popover). As a workaround, you’ll want to trigger the tooltip from a wrapper <code class="text-nowrap" translate="no">&lt;div&gt;</code> or <code class="text-nowrap" translate="no">&lt;span&gt;</code>, ideally made keyboard-focusable using <code class="text-nowrap" translate="no">tabindex=&quot;0&quot;</code>, and override the <code class="text-nowrap" translate="no">pointer-events</code> on the disabled element.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;d-inline-block&quot;</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">v-b-tooltip.top</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Disabled tooltip&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;pointer-events: none;&quot;</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- disabled-trigger-element.vue --&gt;</span></pre></div><h3 id="caveats-with-focus-trigger-on-button-elements" class="bv-no-focus-ring"><span class="bd-content-title">Caveats with <code class="text-nowrap" translate="no">focus</code> trigger on <code class="text-nowrap" translate="no">&lt;button&gt;</code> elements<a class="anchorjs-link" href="#caveats-with-focus-trigger-on-button-elements" aria-labelledby="caveats-with-focus-trigger-on-button-elements"></a></span></h3> <p>For proper cross-browser and cross-platform behavior when using only the <code class="text-nowrap" translate="no">focus</code> trigger, you must use an element that renders the <code class="text-nowrap" translate="no">&lt;a&gt;</code> tag, not the <code class="text-nowrap" translate="no">&lt;button&gt;</code> tag, and you also must include a <code class="text-nowrap" translate="no">tabindex=&quot;0&quot;</code> attribute.</p> <p>The following will generate an <code class="text-nowrap" translate="no">&lt;a&gt;</code> that looks like a button:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-button</span>\n  <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>\n  <span class="hljs-attr">tabindex</span>=<span class="hljs-string">&quot;0&quot;</span>\n  <span class="hljs-attr">v-b-tooltip.focus</span>\n  <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tooltip title&quot;</span>\n&gt;</span>\n  Link button with tooltip directive\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span></pre></div><h3 id="dismiss-on-next-click" class="bv-no-focus-ring"><span class="bd-content-title">Dismiss on next click<a class="anchorjs-link" href="#dismiss-on-next-click" aria-labelledby="dismiss-on-next-click"></a></span></h3> <p>Use both <code class="text-nowrap" translate="no">click</code> and <code class="text-nowrap" translate="no">blur</code> if you would like a tooltip that opens only on click of the element, but will close when anything else in the document is clicked or receives focus.</p> <p>Note that your element <strong>must</strong> be in the document tab sequence for this to work. If your element is not tabbable, add the <code class="text-nowrap" translate="no">tabindex=&quot;0&quot;</code> attribute to the element.</p> <h2 id="title-content" class="bv-no-focus-ring"><span class="bd-content-title">Title content<a class="anchorjs-link" href="#title-content" aria-labelledby="title-content"></a></span></h2> <p>There are several options for providing the title of a tooltip.</p> <p>By default, tooltip will use the <code class="text-nowrap" translate="no">title</code> attribute of the element as the tooltip content. The title can also be passed as an object to <code class="text-nowrap" translate="no">v-b-tooltip</code> in the form of</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;This is the title&#x27;</span>\n}</pre></div><p>If your title content has basic HTML markup, then you will also need to set the <code class="text-nowrap" translate="no">html</code> property to true, or use the directive modifier <code class="text-nowrap" translate="no">html</code></p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-comment">// Object format with HTML</span>\n<span class="hljs-keyword">const</span> options = {\n  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;This is the &lt;strong&gt;title&lt;/strong&gt;&#x27;</span>,\n  <span class="hljs-attr">html</span>: <span class="hljs-literal">true</span>\n}</pre></div><p>Title can also be a function reference, which is called each time the tooltip is opened. To make the title returned by a function reactive while open, set the title to a <em>new</em> function reference whenever the content changes.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;&#x27;Tip from title attribute &#x27; + date&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">&quot;&#x27;String Tip&#x27;&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>String<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.html</span>=<span class="hljs-string">&quot;tipData&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Data<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;py-3&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.html</span>=<span class="hljs-string">&quot;tipMethod&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Method<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">tipData</span>: { <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Tooltip &lt;em&gt;Message&lt;/em&gt;&#x27;</span> },\n        <span class="hljs-attr">date</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(),\n        <span class="hljs-attr">timer</span>: <span class="hljs-literal">null</span>\n      }\n    },\n    <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">this</span>.timer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-built_in">this</span>.date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>()\n      }, <span class="hljs-number">1000</span>)\n    },\n    <span class="hljs-function"><span class="hljs-title">beforeDestroy</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-built_in">clearInterval</span>(<span class="hljs-built_in">this</span>.timer)\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">tipMethod</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-comment">// Note this is called each time the tooltip is first opened.</span>\n        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;strong&gt;&#x27;</span> + <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() + <span class="hljs-string">&#x27;&lt;/strong&gt;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-tooltip-content.vue --&gt;</span></pre></div><h2 id="variants-and-custom-class" class="bv-no-focus-ring"><span class="bd-content-title">Variants and custom class<a class="anchorjs-link" href="#variants-and-custom-class" aria-labelledby="variants-and-custom-class"></a></span></h2> <p>BootstrapVue&#39;s tooltips support contextual color variants via our custom CSS, either by using directive modifiers or config options:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover.v-danger</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Danger variant&quot;</span>&gt;</span>Danger Modifier<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">&quot;{ variant: &#x27;info&#x27; }&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Info variant&quot;</span>&gt;</span>Info Config<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-comment">&lt;!-- b-tooltip-variants.vue --&gt;</span></pre></div><p>Bootstrap default theme variants are: <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">warning</code>, <code class="text-nowrap" translate="no">success</code>, <code class="text-nowrap" translate="no">primary</code>, <code class="text-nowrap" translate="no">secondary</code>, <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">light</code>, and <code class="text-nowrap" translate="no">dark</code>. You can change or add additional variants via Bootstrap <a href="/docs/reference/theming" class="font-weight-bold">SCSS variables</a></p> <p>A custom class can be applied to the tooltip outer wrapper <code class="text-nowrap" translate="no">&lt;div&gt;</code> by using the <code class="text-nowrap" translate="no">customClass</code> option property:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip.hover</span>=<span class="hljs-string">&quot;{ customClass: &#x27;my-tooltip-class&#x27; }&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Tooltip&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span></pre></div><h2 id="directive-syntax-and-usage" class="bv-no-focus-ring"><span class="bd-content-title">Directive syntax and usage<a class="anchorjs-link" href="#directive-syntax-and-usage" aria-labelledby="directive-syntax-and-usage"></a></span></h2> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">v-b-tooltip:</span>[<span class="hljs-attr">container</span>]<span class="hljs-attr">.</span>[<span class="hljs-attr">mod1</span>]<span class="hljs-attr">.</span>[<span class="hljs-attr">mod2</span>]<span class="hljs-attr">.</span>[<span class="hljs-attr">...</span>]<span class="hljs-attr">.</span>[<span class="hljs-attr">modN</span>]=<span class="hljs-string">&quot;&lt;value&gt;&quot;</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span></pre></div><p>Where <code class="text-nowrap" translate="no">[container]</code> can be (optional):</p> <ul> <li>An element ID (minus the #) to place the tooltip markup in</li> <li>If not provided, tooltips are appended to the <code class="text-nowrap" translate="no">body</code>. If the trigger element is inside a modal, the tooltip will be appended to the modal&#39;s container</li> </ul> <p>Where <code class="text-nowrap" translate="no">[modX]</code> can be (all optional):</p> <ul> <li>Positioning: <code class="text-nowrap" translate="no">top</code>, <code class="text-nowrap" translate="no">bottom</code>, <code class="text-nowrap" translate="no">left</code>, <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">auto</code>, <code class="text-nowrap" translate="no">topleft</code>, <code class="text-nowrap" translate="no">topright</code>, <code class="text-nowrap" translate="no">bottomleft</code>, <code class="text-nowrap" translate="no">bottomright</code>, <code class="text-nowrap" translate="no">lefttop</code>, <code class="text-nowrap" translate="no">leftbottom</code>, <code class="text-nowrap" translate="no">righttop</code>, or <code class="text-nowrap" translate="no">rightbottom</code> (last one found wins, defaults to <code class="text-nowrap" translate="no">top</code>).</li> <li>Event trigger: <code class="text-nowrap" translate="no">click</code>, <code class="text-nowrap" translate="no">hover</code>, <code class="text-nowrap" translate="no">focus</code>, <code class="text-nowrap" translate="no">blur</code> (if none specified, defaults to <code class="text-nowrap" translate="no">focus</code> and <code class="text-nowrap" translate="no">hover</code>. <code class="text-nowrap" translate="no">blur</code> is a close handler only, and if specified by itself, will be converted to <code class="text-nowrap" translate="no">focus</code>). Use <code class="text-nowrap" translate="no">manual</code> if you only want to control the visibility manually.</li> <li><code class="text-nowrap" translate="no">nofade</code> to turn off animation.</li> <li><code class="text-nowrap" translate="no">html</code> to enable rendering raw HTML. By default HTML is escaped and converted to text.</li> <li>A delay value in the format of <code class="text-nowrap" translate="no">d###</code> (where <code class="text-nowrap" translate="no">###</code> is in ms, defaults to <code class="text-nowrap" translate="no">50</code>), applied to both <code class="text-nowrap" translate="no">hide</code> and <code class="text-nowrap" translate="no">show</code>.</li> <li>A show delay value in the format of <code class="text-nowrap" translate="no">ds###</code> (where <code class="text-nowrap" translate="no">###</code> is in ms, defaults to <code class="text-nowrap" translate="no">50</code>), applied to <code class="text-nowrap" translate="no">show</code> trigger only.</li> <li>A hide delay value in the format of <code class="text-nowrap" translate="no">dh###</code> (where <code class="text-nowrap" translate="no">###</code> is in ms, defaults to <code class="text-nowrap" translate="no">50</code>), applied to <code class="text-nowrap" translate="no">hide</code> trigger only.</li> <li>An offset value in pixels in the format of <code class="text-nowrap" translate="no">o###</code> (where <code class="text-nowrap" translate="no">###</code> is the number of pixels, defaults to <code class="text-nowrap" translate="no">0</code>. Negative values allowed).</li> <li>A boundary setting of <code class="text-nowrap" translate="no">window</code> or <code class="text-nowrap" translate="no">viewport</code>. The element to constrain the visual placement of the tooltip. If not specified, the boundary defaults to the trigger element&#39;s scroll parent (in most cases this will suffice).</li> <li>A contextual variant in the form of <code class="text-nowrap" translate="no">v-XXX</code> (where <code class="text-nowrap" translate="no">XXX</code> is the color variant name).</li> <li><code class="text-nowrap" translate="no">noninteractive</code> to make the tooltip not user-interactive.</li> </ul> <p>Where <code class="text-nowrap" translate="no">&lt;value&gt;</code> can be (optional):</p> <ul> <li>A string containing the title of the tooltip</li> <li>A function reference to generate the title of the tooltip (receives one arg which is a reference to the DOM element triggering the tooltip)</li> <li>An object containing more complex configuration of tooltip. See below for accepted object properties:</li> </ul> <p><strong>Options configuration object properties:</strong></p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property</th> <th>Type</th> <th>Default</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">animation</code></td> <td>Boolean</td> <td><code class="text-nowrap" translate="no">true</code></td> <td>Apply a CSS fade transition to the tooltip</td> </tr> <tr> <td><code class="text-nowrap" translate="no">container</code></td> <td>String ID or HTMLElement or <code class="text-nowrap" translate="no">false</code></td> <td><code class="text-nowrap" translate="no">false</code></td> <td>Appends the tooltip to a specific element. Example: <code class="text-nowrap" translate="no">container: &#39;#body&#39;</code>. This option is particularly useful in that it allows you to position the tooltip in the flow of the document near the triggering element - which will prevent the tooltip from floating away from the triggering element during a window resize. When set to <code class="text-nowrap" translate="no">false</code> the tooltip will be appended to <code class="text-nowrap" translate="no">body</code>, or if the trigger element is inside a modal it will append to the modal&#39;s container</td> </tr> <tr> <td><code class="text-nowrap" translate="no">delay</code></td> <td>Number or Object</td> <td><code class="text-nowrap" translate="no">50</code></td> <td>Delay showing and hiding the tooltip (ms). If a number is supplied, delay is applied to both hide/show. Object structure is: <code class="text-nowrap" translate="no">delay: { &quot;show&quot;: 500, &quot;hide&quot;: 100 }</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">html</code></td> <td>Boolean</td> <td><code class="text-nowrap" translate="no">false</code></td> <td>Allow HTML in the tooltip. If true, HTML tags in the tooltip&#39;s title will be rendered in the tooltip. If false, the title will be inserted as plain text. Use text if you&#39;re worried about XSS attacks</td> </tr> <tr> <td><code class="text-nowrap" translate="no">placement</code></td> <td>String or Function</td> <td><code class="text-nowrap" translate="no">&#39;top&#39;</code></td> <td>How to position the tooltip - <code class="text-nowrap" translate="no">auto</code>, <code class="text-nowrap" translate="no">top</code>, <code class="text-nowrap" translate="no">bottom</code>, <code class="text-nowrap" translate="no">left</code>, <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">topleft</code>, <code class="text-nowrap" translate="no">topright</code>, <code class="text-nowrap" translate="no">bottomleft</code>, <code class="text-nowrap" translate="no">bottomright</code>, <code class="text-nowrap" translate="no">lefttop</code>, <code class="text-nowrap" translate="no">leftbottom</code>, <code class="text-nowrap" translate="no">righttop</code>, or <code class="text-nowrap" translate="no">rightbottom</code>. When <code class="text-nowrap" translate="no">auto</code> is specified, it will dynamically reorient the tooltip</td> </tr> <tr> <td><code class="text-nowrap" translate="no">title</code></td> <td>String or Element or Function</td> <td><code class="text-nowrap" translate="no">&#39;&#39;</code></td> <td>Default title value if title attribute isn&#39;t present. If a function is given, it must return a string</td> </tr> <tr> <td><code class="text-nowrap" translate="no">trigger</code></td> <td>String</td> <td><code class="text-nowrap" translate="no">&#39;hover focus&#39;</code></td> <td>How tooltip is triggered: <code class="text-nowrap" translate="no">click</code>, <code class="text-nowrap" translate="no">hover</code>, <code class="text-nowrap" translate="no">focus</code>. You may pass multiple triggers; separate them with a space</td> </tr> <tr> <td><code class="text-nowrap" translate="no">offset</code></td> <td>Number or String</td> <td><code class="text-nowrap" translate="no">0</code></td> <td>Offset of the tooltip relative to its target. For more information refer to Popper.js&#39;s offset docs</td> </tr> <tr> <td><code class="text-nowrap" translate="no">fallbackPlacement</code></td> <td>String or Array</td> <td><code class="text-nowrap" translate="no">&#39;flip&#39;</code></td> <td>Allow to specify which position Popper will use on fallback. Can be <code class="text-nowrap" translate="no">flip</code>, <code class="text-nowrap" translate="no">clockwise</code>, <code class="text-nowrap" translate="no">counterclockwise</code> or an array of placements. For more information refer to Popper.js&#39;s behavior docs</td> </tr> <tr> <td><code class="text-nowrap" translate="no">boundary</code></td> <td>String ID or HTMLElement</td> <td><code class="text-nowrap" translate="no">&#39;scrollParent&#39;</code></td> <td>The container that the tooltip will be constrained visually. The default should suffice in most cases, but you may need to change this if your target element is in a small container with overflow scroll. Supported values: <code class="text-nowrap" translate="no">&#39;scrollParent&#39;</code> (default), <code class="text-nowrap" translate="no">&#39;viewport&#39;</code>, <code class="text-nowrap" translate="no">&#39;window&#39;</code>, or a reference to an HTML element</td> </tr> <tr> <td><code class="text-nowrap" translate="no">boundaryPadding</code></td> <td>Number</td> <td><code class="text-nowrap" translate="no">5</code></td> <td>Amount of pixel used to define a minimum distance between the boundaries and the tooltip. This makes sure the tooltip always has a little padding between the edges of its container</td> </tr> <tr> <td><code class="text-nowrap" translate="no">interactive</code></td> <td>Boolean</td> <td><code class="text-nowrap" translate="no">true</code></td> <td>Whether the tooltip should be user-interactive</td> </tr> <tr> <td><code class="text-nowrap" translate="no">variant</code></td> <td>String</td> <td><code class="text-nowrap" translate="no">null</code></td> <td>Contextual color variant for the tooltip</td> </tr> <tr> <td><code class="text-nowrap" translate="no">customClass</code></td> <td>String</td> <td><code class="text-nowrap" translate="no">null</code></td> <td>A custom classname to apply to the tooltip outer wrapper element</td> </tr> <tr> <td><code class="text-nowrap" translate="no">id</code></td> <td>String</td> <td><code class="text-nowrap" translate="no">null</code></td> <td>An ID to use on the tooltip root element. If none is provided, one will automatically be generated. If you do provide an ID, it <em>must</em> be guaranteed to be unique on the rendered page</td> </tr> <tr> <td><code class="text-nowrap" translate="no">disabled</code></td> <td>Boolean</td> <td><code class="text-nowrap" translate="no">false</code></td> <td>Set to <code class="text-nowrap" translate="no">true</code> to disable the tooltip</td> </tr> </tbody></table> </div><h3 id="usage" class="bv-no-focus-ring"><span class="bd-content-title">Usage<a class="anchorjs-link" href="#usage" aria-labelledby="usage"></a></span></h3> <p><strong>Simplest usage:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip="\'This is a Tooltip!\'"</pre></div><p>or use the element&#39;s <code class="text-nowrap" translate="no">title</code> attribute for the tooltip content:</p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip title="This is a title Tooltip"</pre></div><p><strong>Placement examples:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip.bottom\nv-b-tooltip.right</pre></div><p><strong>Variant examples:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip.v-primary => `primary` variant\nv-b-tooltip.v-danger => `danger` variant</pre></div><p><strong>Trigger examples:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip.hover => Hover only\nv-b-tooltip.click => Click only\nv-b-tooltip.hover.focus => Both hover and focus</pre></div><p><strong>Combo:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip.hover.bottom => Show on hover and place at bottom\nv-b-tooltip.bottom.hover => Same as above\nv-b-tooltip.bottom.hover.v-danger => Same as above, but with variant</pre></div><p><strong>Object:</strong></p> <div class="bd-code"><pre class="hljs p-2" translate="no">v-b-tooltip="{ title: \'Title\', placement: \'bottom\', variant: \'danger\' }"</pre></div><h2 id="hiding-and-showing-tooltips-via-root-events" class="bv-no-focus-ring"><span class="bd-content-title">Hiding and showing tooltips via $root events<a class="anchorjs-link" href="#hiding-and-showing-tooltips-via-root-events" aria-labelledby="hiding-and-showing-tooltips-via-root-events"></a></span></h2> <p>You can close (hide) <strong>all open tooltips</strong> by emitting the <code class="text-nowrap" translate="no">bv::hide::tooltip</code> event on $root:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::hide::tooltip&#x27;</span>)</pre></div><p>To close a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code class="text-nowrap" translate="no">id</code>, or the <code class="text-nowrap" translate="no">id</code> of the tooltip (if one was provided in the config object) as the first argument:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::show::tooltip&#x27;</span>, <span class="hljs-string">&#x27;my-trigger-button-id&#x27;</span>)</pre></div><p>To open a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code class="text-nowrap" translate="no">id</code>, or the <code class="text-nowrap" translate="no">id</code> of the tooltip (if one was provided in the config object) as the first argument when emitting the <code class="text-nowrap" translate="no">bv::show::tooltip</code> $root event:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::show::tooltip&#x27;</span>, <span class="hljs-string">&#x27;my-trigger-button-id&#x27;</span>)</pre></div><p>To open all popovers simultaneously, omit the <code class="text-nowrap" translate="no">id</code> argument when emitting the <code class="text-nowrap" translate="no">bv::show::tooltip</code> event.</p> <p>These events work for both the component <strong>and</strong> directive versions of tooltip.</p> <p>Note the <strong>trigger element</strong> must exist in the DOM and be in a visible state in order for the tooltip to show.</p> <h2 id="disabling-and-enabling-tooltips-via-root-events" class="bv-no-focus-ring"><span class="bd-content-title">Disabling and enabling tooltips via $root events<a class="anchorjs-link" href="#disabling-and-enabling-tooltips-via-root-events" aria-labelledby="disabling-and-enabling-tooltips-via-root-events"></a></span></h2> <p>You can disable <strong>all open tooltips</strong> by emitting the <code class="text-nowrap" translate="no">bv::disable::tooltip</code> event on $root:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::disable::tooltip&#x27;</span>)</pre></div><p>To disable a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code class="text-nowrap" translate="no">id</code>, or the <code class="text-nowrap" translate="no">id</code> of the tooltip (if one was provided in the config object) as the first argument:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::disable::tooltip&#x27;</span>, <span class="hljs-string">&#x27;my-trigger-button-id&#x27;</span>)</pre></div><p>To enable a <strong>specific tooltip</strong>, pass the trigger element&#39;s <code class="text-nowrap" translate="no">id</code>, or the <code class="text-nowrap" translate="no">id</code> of the tooltip (if one was provided in the config object) as the first argument when emitting the <code class="text-nowrap" translate="no">bv::enable::tooltip</code> $root event:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">this</span>.$root.$emit(<span class="hljs-string">&#x27;bv::enable::tooltip&#x27;</span>, <span class="hljs-string">&#x27;my-trigger-button-id&#x27;</span>)</pre></div><p>To enable all popovers simultaneously, omit the <code class="text-nowrap" translate="no">id</code> argument when emitting the <code class="text-nowrap" translate="no">bv::enable::tooltip</code> event.</p> <p>These events work for both the component <strong>and</strong> directive versions of tooltip.</p> <p>Note the <strong>trigger element</strong> must exist in the DOM in order for the tooltip to be enabled or disabled.</p> <h2 id="смотрите-также" class="bv-no-focus-ring"><span class="bd-content-title">Смотрите также<a class="anchorjs-link" href="#смотрите-также" aria-labelledby="смотрите-также"></a></span></h2> <ul> <li><a href="/docs/directives/popover" class="font-weight-bold"><code class="text-nowrap" translate="no">v-b-popover</code> directive</a></li> <li><a href="/docs/components/tooltip" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-tooltip&gt;</code> component</a></li> <li><a href="/docs/components/popover" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-popover&gt;</code> component</a></li> </ul>'}}}]);