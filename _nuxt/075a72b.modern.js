(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{352:function(e,t,n){"use strict";n(35);var o=n(72),l=n(38),r=e=>{if(e&&"click"===e.type){var t=e.target&&e.target.closest?e.target.closest("a[href]"):null;if(!(!t||"click"!==e.type||t.__vue__||t.closest(".bd-example")||t.closest("pre")||e.defaultPrevented)){var n=t.getAttribute("href");n&&0===n.indexOf("/")&&0!==n.indexOf("//")?(e.preventDefault(),"undefined"!=typeof window&&window.$nuxt&&window.$nuxt.$router.push(n)):n&&0===n.indexOf("#")&&Object(l.i)(e,n)}}};t.a={name:"BVSection",functional:!0,props:{tag:{type:String,default:"section"},play:{type:Boolean,default:!1}},render(e,t){var{props:n,data:data,children:l}=t,c=[];return n.play&&c.push({name:"play"}),e(n.tag,Object(o.a)(data,{class:["bd-content"],directives:c,on:{click:r}}),[l])}}},354:function(e,t,n){"use strict";n(18),n(19);t.a={name:"BVCarbonAd",props:{id:{type:String,default:"_carbonads_js"},url:{type:String,default:"//cdn.carbonads.com/carbon.js"},serve:{type:String,default:"CE7ITK77"},placement:{type:String,default:"bootstrap-vuejsorg"}},data:()=>({mounted:!1}),computed:{src(){return"".concat(this.url,"?serve=").concat(this.serve,"&placement=").concat(this.placement)}},mounted(){var e=document.querySelectorAll('head > script[id="_carbonads_projs"]');for(var t of e)try{t.parentNode.removeChild(t)}catch(e){}this.$nextTick(()=>{requestAnimationFrame(()=>{this.mounted=!0})})},beforeDestroy(){this.mounted=!1},render(e){var t=e();return this.mounted&&(t=e("script",{attrs:{id:this.id,async:"async",type:"text/javascript",src:this.src}})),e("aside",{staticClass:"bv-carbon-ad"},[t])}}},355:function(e,t,n){"use strict";var o=n(72);t.a={name:"BVMain",functional:!0,props:{tag:{type:String,default:"main"}},render(e,t){var{props:n,data:data,children:l}=t;return e(n.tag,Object(o.a)(data,{staticClass:"bd-main"}),[l])}}},356:function(e,t,n){"use strict";n(198),n(20),n(24);var o=n(38),l=n(63),r={};t.a={head(){return{title:this.headTitle,meta:this.headMeta}},computed:{headTitle(){var e=this.$route.name,title="",section="";return this.meta&&this.meta.title&&(title=this.meta.title),/^docs-components/.test(e)?section="Components":/^docs-directives/.test(e)?section="Directives":/^docs-reference/.test(e)&&(section="Reference"),[title,section,"BootstrapVue"].filter(Boolean).join(" | ")},headMeta(){var section=this.$route.name.split("-")[1],e=section?l.j.find(e=>e.base==="".concat(section,"/")):null,t=this.meta&&this.meta.description?this.meta.description:e&&e.description?e.description:l.f,meta=[{hid:"og:title",name:"og:title",property:"og:title",content:this.headTitle}];return t&&(meta.push({hid:"description",name:"description",content:t}),meta.push({hid:"og:description",name:"og:description",property:"og:description",content:t})),meta}},created(){this.$_filterTimer=null,this.$nextTick(()=>{var e="".concat(this.$route.name,"_").concat(this.$route.params.slug||""),t=r[e]||(r[e]=Object(o.k)(this.baseTOC||{},this.meta||null));this.$root.$emit("docs-set-toc",t)})},mounted(){this.clearScrollTimeout(),this.focusScroll()},updated(){this.clearScrollTimeout(),this.focusScroll()},beforeDestroy(){this.clearScrollTimeout()},methods:{clearScrollTimeout(){clearTimeout(this.$_scrollTimeout),this.$_scrollTimeout=null},focusScroll(){var e=this.$route.hash;this.$nextTick(()=>{var t;e&&(t=this.$el.querySelector('[id="'.concat(e.replace("#",""),'"]')),this.scrollIntoView(t)),t||(t=this.$el.querySelector("h1")),t&&(t.tabIndex=-1,t.focus())})},scrollIntoView(e){if(e){var t=document.scrollingElement||document.documentElement||document.body;this.clearScrollTimeout(),this.$_scrollTimeout=setTimeout(()=>{Object(o.j)(t,Object(o.e)(e)-70,100)},100)}}}}},357:function(e,t,n){},359:function(e,t,n){"use strict";n(20);var o=n(38),l={name:"BVQuickLinks",data:()=>({toc:{},offset:0,expanded:!1}),computed:{hasContent(){return!!this.toc.toc},toogleText(){return"".concat(this.expanded?"Hide":"Show"," page table of contents")}},created(){this.$root.$on("docs-set-toc",e=>{this.expanded=!1,this.toc=e})},mounted(){var e=document.body.querySelector("header.navbar");e&&(this.offset=e.offsetHeight+6)},methods:{scrollIntoView(e,t){e.preventDefault(),e.stopPropagation();var n=(t||"").replace(/#/g,""),l=document.body.querySelector('[id="'.concat(n,'"]'));if(l){var r=document.scrollingElement||document.documentElement||document.body;Object(o.j)(r,Object(o.e)(l)-70,100,()=>{l.tabIndex=-1,l.focus()})}}}},r=(n(360),n(36)),component=Object(r.a)(l,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("nav",{class:["bd-quick-links","mb-3","d-xl-none",{"d-none":!e.hasContent}],attrs:{"aria-hidden":e.hasContent?null:"true"}},[e.hasContent?n("header",[n("b-button",{directives:[{name:"b-toggle",rawName:"v-b-toggle.bd-quick-links-collapse",modifiers:{"bd-quick-links-collapse":!0}}],staticClass:"font-weight-bold",attrs:{variant:"outline-secondary",size:"sm",block:""}},[e._v("\n      "+e._s(e.toogleText)+"\n    ")])],1):e._e(),e._v(" "),e.hasContent?n("b-collapse",{attrs:{id:"bd-quick-links-collapse",tag:"ul"},model:{value:e.expanded,callback:function(t){e.expanded=t},expression:"expanded"}},e._l(e.toc.toc,(function(h2){return n("li",{key:h2.href},[n("b-link",{attrs:{href:h2.href},on:{click:function(t){return e.scrollIntoView(t,h2.href)}}},[n("span",{domProps:{innerHTML:e._s(h2.label)}})]),e._v(" "),h2.toc&&h2.toc.length>0?n("ul",{key:"sub-"+h2.href},e._l(h2.toc,(function(h3){return n("li",{key:h3.href},[n("b-link",{attrs:{href:h3.href},on:{click:function(t){return e.scrollIntoView(t,h3.href)}}},[n("span",{domProps:{innerHTML:e._s(h3.label)}})])],1)})),0):e._e()],1)})),0):e._e()],1)}),[],!1,null,"68483bce",null);t.a=component.exports},360:function(e,t,n){"use strict";n(357)},381:function(e,t){e.exports={baseTOC:{top:"#getting-started",title:"Getting Started",toc:[{href:"#documentation-sections",label:"Documentation sections"},{href:"#prerequisites",label:"Prerequisites"},{href:"#documentation-information",label:"Documentation information"},{href:"#important-html-globals",label:"Important HTML globals",toc:[{href:"#html5-doctype",label:"HTML5 doctype"},{href:"#responsive-meta-tag",label:"Responsive meta tag"},{href:"#css-box-sizing",label:"CSS box-sizing"},{href:"#style-reboot",label:"Style reboot"}]},{href:"#using-module-bundlers",label:"Using module bundlers",toc:[{href:"#theming-bootstrap",label:"Theming Bootstrap"},{href:"#aliasing-vue-import",label:"Aliasing Vue import"},{href:"#advanced-module-bundler-usage",label:"Advanced module bundler usage"}]},{href:"#tree-shaking-with-module-bundlers",label:"Tree shaking with module bundlers",toc:[{href:"#component-groups-and-directives-as-vue-plugins",label:"Component groups and directives as Vue plugins"},{href:"#individual-components-and-directives",label:"Individual components and directives"},{href:"#using-bootstrapvue-source-code-for-smaller-bundles",label:"Using BootstrapVue source code for smaller bundles"}]},{href:"#nuxtjs-module",label:"Nuxt.js module",toc:[{href:"#getting-started-with-nuxtjs",label:"Getting started with Nuxt.js"},{href:"#using-custom-bootstrap-scss",label:"Using custom Bootstrap SCSS"},{href:"#transformasseturls-with-nuxtjs",label:"transformAssetUrls with Nuxt.js"},{href:"#tree-shaking-with-nuxtjs",label:"Tree shaking with Nuxt.js"},{href:"#icons",label:"Icons"},{href:"#passing-custom-bootstrapvue-config-with-nuxtjs",label:"Passing custom BootstrapVue config with Nuxt.js"},{href:"#using-pretranspiled-version-of-bootstrapvue-for-nuxtjs",label:"Using pretranspiled version of BootstrapVue for Nuxt.js"}]},{href:"#vue-cli-3",label:"Vue CLI 3",toc:[{href:"#vue-cli-3-plugin",label:"Vue CLI 3 plugin"}]},{href:"#browser",label:"Browser"},{href:"#build-variants",label:"Build variants",toc:[{href:"#dependencies",label:"Dependencies"}]},{href:"#migrating-a-project-already-using-bootstrap",label:"Migrating a project already using Bootstrap"},{href:"#browser-support",label:"Browser support",toc:[{href:"#css",label:"CSS"},{href:"#js",label:"JS"}]},{href:"#tooling-support",label:"Tooling support",toc:[{href:"#vs-code--vetur",label:"VS Code + Vetur"},{href:"#jetbrains-webstorm-and-compatible",label:"JetBrains WebStorm (and compatible)"}]}]},titleLead:'<h1 id="getting-started" class="bv-no-focus-ring"><span class="bd-content-title">Getting Started</span></h1> <p class="bd-lead">Get started with BootstrapVue, based on the world&#39;s most popular framework - Bootstrap v{{ bootstrapVersionMajor }}, for building responsive, mobile-first sites using Vue.js.</p>',body:'<ul> <li><a href="https://vuejs.org/" target="_blank" rel="noopener">Vue.js</a> <code class="text-nowrap" translate="no">v{{ vueVersionMinor }}</code> is required, <code class="text-nowrap" translate="no">v{{ vueVersion }}</code> is recommended</li> <li><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap</a> <code class="text-nowrap" translate="no">v4.3.1</code> is required, <code class="text-nowrap" translate="no">v{{ bootstrapVersion }}</code> is recommended</li> <li><a href="https://popper.js.org/" target="_blank" rel="noopener">Popper.js</a> <code class="text-nowrap" translate="no">v{{ popperVersionMinor }}</code> is required for dropdowns (and components based on dropdown), tooltips, and popovers. <code class="text-nowrap" translate="no">v{{ popperVersion }}</code> is recommended</li> <li><a href="https://portal-vue.linusb.org/" target="_blank" rel="noopener">PortalVue</a> <code class="text-nowrap" translate="no">v{{ portalVueVersionMinor }}</code> is required by <a href="/docs/components/toast" class="font-weight-bold">Toasts</a>, <code class="text-nowrap" translate="no">v{{ portalVueVersion }}</code> is recommended</li> <li><a href="https://jquery.com/" target="_blank" rel="noopener">jQuery</a> is <strong>not</strong> required</li> </ul> <p>Check out what is new in <a href="/docs/reference/changelog" class="font-weight-bold">BootstrapVue release v{{ version }}</a>.</p> <p>If you are migrating from a previous <code class="text-nowrap" translate="no">v2.0.0-rc.##</code> release, please see the <a href="/docs/reference/changelog#v200" class="font-weight-bold"><code class="text-nowrap" translate="no">v2.0.0</code> migration guide</a>.</p> <h2 id="documentation-sections" class="bv-no-focus-ring"><span class="bd-content-title">Documentation sections<a class="anchorjs-link" href="#documentation-sections" aria-labelledby="documentation-sections"></a></span></h2> <p>The online documentation comprises:</p> <ul> <li><a href="/docs/components" class="font-weight-bold">Components</a> - Components and component plugin documentation</li> <li><a href="/docs/directives" class="font-weight-bold">Directives</a> - Directives and directive plugin documentation</li> <li><a href="/docs/icons" class="font-weight-bold">Icons</a> - Icons and icon plugin documentation <b-badge>v2.2.0+</b-badge></li> <li><a href="/docs/reference" class="font-weight-bold">Reference</a> - Reference information and documentation</li> <li><a href="/play" class="font-weight-bold">Playground</a> - Online playground</li> <li><a href="/themes" class="font-weight-bold">Themes</a> - Themes and dashboards</li> </ul> <h2 id="prerequisites" class="bv-no-focus-ring"><span class="bd-content-title">Prerequisites<a class="anchorjs-link" href="#prerequisites" aria-labelledby="prerequisites"></a></span></h2> <p>This BootstrapVue documentation assumes you are familiar with Vue and and Bootstrap v{{ bootstrapVersionMajor }} CSS. Good starting points for these:</p> <ul> <li><a href="https://vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue Guide</a></li> <li><a href="https://vuejs.org/v2/api/" target="_blank" rel="noopener">Vue API</a></li> <li><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap v{{bootstrapVersionMinor}} documentation</a></li> <li><a href="https://vue-loader.vuejs.org/guide/scoped-css.html" target="_blank" rel="noopener">Vue loader scoped CSS</a>, if using scoped styles in SFC (Single File Component) <code class="text-nowrap" translate="no">.vue</code> files</li> </ul> <h2 id="documentation-information" class="bv-no-focus-ring"><span class="bd-content-title">Documentation information<a class="anchorjs-link" href="#documentation-information" aria-labelledby="documentation-information"></a></span></h2> <p>In many of the examples shown in BootstrapVue&#39;s documentation, you may see the use of CSS classes such as <code class="text-nowrap">ml-2</code>, <code class="text-nowrap">py-1</code>, etc. These are Bootstrap v{{bootstrapVersionMinor}} utility classes that help control padding, margins, positioning and more. You can find information on these classes in the <a href="/docs/reference/utility-classes" class="font-weight-bold">Utility Classes</a> reference section.</p> <p>Many of the examples in this documentation are <em>live</em> and can be edited in-place for an enhanced learning experience (note some examples may not work in IE 11 due to use of ES6 JavaScript code in the <code class="text-nowrap" translate="no">&lt;template&gt;</code> sections).</p> <p>BootstrapVue also provides an <a href="/play" class="font-weight-bold">interactive playground</a> where you can experiment with the various components and export your results to JSFiddle, CodePen, and/or CodeSandbox.</p> <h2 id="important-html-globals" class="bv-no-focus-ring"><span class="bd-content-title">Important HTML globals<a class="anchorjs-link" href="#important-html-globals" aria-labelledby="important-html-globals"></a></span></h2> <p>Bootstrap v{{bootstrapVersionMajor}} CSS employs a handful of important global styles and settings that you&#39;ll need to be aware of when using it, all of which are almost exclusively geared towards the normalization of cross browser styles. Refer to the following sub-sections for details.</p> <h3 id="html5-doctype" class="bv-no-focus-ring"><span class="bd-content-title">HTML5 doctype<a class="anchorjs-link" href="#html5-doctype" aria-labelledby="html5-doctype"></a></span></h3> <p>Bootstrap requires the use of the <code class="text-nowrap" translate="no">HTML5</code> doctype. Without it, you may see some strange incomplete styling.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-meta">&lt;!doctype <span class="hljs-meta-keyword">html</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>\n  ...\n<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></pre></div><h3 id="responsive-meta-tag" class="bv-no-focus-ring"><span class="bd-content-title">Responsive meta tag<a class="anchorjs-link" href="#responsive-meta-tag" aria-labelledby="responsive-meta-tag"></a></span></h3> <p>Bootstrap is optimized for mobile devices first and then scales up components as necessary using CSS media queries. To ensure proper rendering and touch zooming for all devices, <strong>add the responsive viewport meta</strong> tag to your <code class="text-nowrap" translate="no">&lt;head&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></pre></div><h3 id="css-box-sizing" class="bv-no-focus-ring"><span class="bd-content-title">CSS box-sizing<a class="anchorjs-link" href="#css-box-sizing" aria-labelledby="css-box-sizing"></a></span></h3> <p>For more straightforward sizing in CSS, the global <code class="text-nowrap" translate="no">box-sizing</code> value is switched from <code class="text-nowrap" translate="no">content-box</code> to <code class="text-nowrap" translate="no">border-box</code>. This ensures <code class="text-nowrap" translate="no">padding</code> does not affect the final computed width of an element, but it can cause problems with some third party software like Google Maps and Google Custom Search Engine.</p> <p>On the rare occasion you need to override it, use something like the following:</p> <div class="bd-code"><pre class="hljs css p-2" translate="no"><span class="hljs-selector-class">.selector-for-some-widget</span> {\n  <span class="hljs-attribute">box-sizing</span>: content-box;\n}</pre></div><p>With the above snippet, nested elements — including generated content via <code class="text-nowrap" translate="no">::before</code> and <code class="text-nowrap" translate="no">::after</code> — will all inherit the specified <code class="text-nowrap" translate="no">box-sizing</code> for that <code class="text-nowrap" translate="no">.selector-for-some-widget</code>.</p> <p>Learn more about <a href="https://css-tricks.com/box-sizing/" target="_blank" rel="noopener">box model and sizing at CSS Tricks</a>.</p> <h3 id="style-reboot" class="bv-no-focus-ring"><span class="bd-content-title">Style reboot<a class="anchorjs-link" href="#style-reboot" aria-labelledby="style-reboot"></a></span></h3> <p>For improved cross-browser rendering, Bootstrap v{{ bootstrapVersionMinor }} uses <a href="https://getbootstrap.com/docs/4.5/content/reboot/" target="_blank" rel="noopener">Reboot</a> to correct inconsistencies across browsers and devices while providing slightly more opinionated resets to common <abbr title="Hyper Text markup Language">HTML</abbr> elements.</p> <h2 id="using-module-bundlers" class="bv-no-focus-ring"><span class="bd-content-title">Using module bundlers<a class="anchorjs-link" href="#using-module-bundlers" aria-labelledby="using-module-bundlers"></a></span></h2> <p>Most likely you are using module bundlers like <a href="https://webpack.js.org/" target="_blank" rel="noopener">Webpack</a>, <a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a> or <a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a>, which makes it easy to directly include the package into your project. To do this, use <code class="text-nowrap" translate="no">npm</code> or <code class="text-nowrap" translate="no">yarn</code> to get the latest version of Vue.js, Bootstrap v4 and BootstrapVue:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># With npm</span>\nnpm install vue bootstrap bootstrap-vue\n\n<span class="hljs-comment"># With yarn</span>\nyarn add vue bootstrap bootstrap-vue</pre></div><p>Then, register BootstrapVue in your app entry point (typically <code class="text-nowrap" translate="no">app.js</code> or <code class="text-nowrap" translate="no">main.js</code>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">import</span> { BootstrapVue, IconsPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\n\n<span class="hljs-comment">// Import Bootstrap an BootstrapVue CSS files (order is important)</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;bootstrap/dist/css/bootstrap.css&#x27;</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;bootstrap-vue/dist/bootstrap-vue.css&#x27;</span>\n\n<span class="hljs-comment">// Make BootstrapVue available throughout your project</span>\nVue.use(BootstrapVue)\n<span class="hljs-comment">// Optionally install the BootstrapVue icon components plugin</span>\nVue.use(IconsPlugin)</pre></div><h3 id="theming-bootstrap" class="bv-no-focus-ring"><span class="bd-content-title">Theming Bootstrap<a class="anchorjs-link" href="#theming-bootstrap" aria-labelledby="theming-bootstrap"></a></span></h3> <p>If you want to change Bootstrap&#39;s default styles (e.g. the <code class="text-nowrap" translate="no">$body-color</code>), you have to use Bootstrap&#39;s and BootstrapVue&#39;s <code class="text-nowrap" translate="no">scss</code> files.</p> <p>Create your own <code class="text-nowrap" translate="no">scss</code> file (e.g. <code class="text-nowrap" translate="no">app.scss</code>) containing <strong>both</strong> your custom definitions <strong>and</strong> the 2 <code class="text-nowrap" translate="no">@import</code>&#39;s at the end:</p> <div class="bd-code"><pre class="hljs scss p-2" translate="no" data-filename="app.scss">\n<span class="hljs-comment">// Define variable defaults</span>\n<span class="hljs-variable">$body-bg</span>: <span class="hljs-number">#000</span>;\n<span class="hljs-variable">$body-color</span>: <span class="hljs-number">#111</span>;\n\n<span class="hljs-comment">// Then import Bootstrap an BootstrapVue SCSS files (order is important)</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;node_modules/bootstrap/scss/bootstrap.scss&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;node_modules/bootstrap-vue/src/index.scss&#x27;</span>;</pre></div><p>Then import that single <code class="text-nowrap" translate="no">scss</code> file into your project:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">import</span> { BootstrapVue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\n\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./app.scss&#x27;</span>\n\nVue.use(BootstrapVue)</pre></div><p>Do not import the individual SCSS files separately into your project, because variables and functions will fail to be shared between files.</p> <p>For information on theming Bootstrap, check out the <a href="/docs/reference/theming" class="font-weight-bold">Theming</a> reference section.</p> <h3 id="aliasing-vue-import" class="bv-no-focus-ring"><span class="bd-content-title">Aliasing Vue import<a class="anchorjs-link" href="#aliasing-vue-import" aria-labelledby="aliasing-vue-import"></a></span></h3> <p>BootstrapVue and PortalVue require access to the global <code class="text-nowrap" translate="no">Vue</code> reference (via <code class="text-nowrap" translate="no">import Vue from &#39;vue&#39;</code>).</p> <div class="alert alert-info mb-3"> <p class="mb-0"> If you are using a specific build of Vue (i.e. runtime-only vs. compiler + runtime), you will need to set up an alias to <code class="notranslate" translate="no">\'vue\'</code> in your bundler config to ensure that your project, BootstrapVue and PortalVue are all using the same build version of Vue. If you are seeing an error such as <code class="notranslate" translate="no">"$attr and $listeners is readonly"</code>, or <code class="notranslate" translate="no">"Multiple instances of Vue detected"</code>, then you will need to set up an alias. </p> </div> <p><strong>Example: Vue alias for <a href="https://cli.vuejs.org/" target="_blank" rel="noopener">Vue CLI</a> in <code class="text-nowrap" translate="no">vue.config.js</code></strong></p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)\n\n<span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">chainWebpack</span>: <span class="hljs-function"><span class="hljs-params">config</span> =&gt;</span> {\n    config.resolve.alias.set(\n      <span class="hljs-string">&#x27;vue$&#x27;</span>,\n      <span class="hljs-comment">// If using the runtime only build</span>\n      path.resolve(__dirname, <span class="hljs-string">&#x27;node_modules/vue/dist/vue.runtime.esm.js&#x27;</span>)\n      <span class="hljs-comment">// Or if using full build of Vue (runtime + compiler)</span>\n      <span class="hljs-comment">// path.resolve(__dirname, &#x27;node_modules/vue/dist/vue.esm.js&#x27;)</span>\n    )\n  }\n}</pre></div><p><strong>Example: Vue alias in <code class="text-nowrap" translate="no">webpack.config.js</code></strong></p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-comment">// ...</span>\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: {\n      <span class="hljs-comment">// If using the runtime only build</span>\n      <span class="hljs-attr">vue$</span>: <span class="hljs-string">&#x27;vue/dist/vue.runtime.esm.js&#x27;</span> <span class="hljs-comment">// &#x27;vue/dist/vue.runtime.common.js&#x27; for webpack 1</span>\n      <span class="hljs-comment">// Or if using full build of Vue (runtime + compiler)</span>\n      <span class="hljs-comment">// vue$: &#x27;vue/dist/vue.esm.js&#x27;      // &#x27;vue/dist/vue.common.js&#x27; for webpack 1</span>\n    }\n  }\n}</pre></div><p><strong>Note:</strong> If your project has multiple webpack config files (i.e. <code class="text-nowrap" translate="no">webpack.config.js</code>, <code class="text-nowrap" translate="no">webpack.renderer.config.js</code>, <code class="text-nowrap" translate="no">webpack.vendor.config.js</code>, <code class="text-nowrap" translate="no">webpack.server.config.js</code>, <code class="text-nowrap" translate="no">webpack.client.config.js</code>, etc.), you will need to set the appropriate alias in <em>all</em> of them.</p> <p>See the <a href="https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only" target="_blank" rel="noopener">Vue.js</a> Guide for full details on setting up aliases for <a href="https://webpack.js.org/" target="_blank" rel="noopener">webpack</a>, <a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a>, <a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a>, etc.</p> <h3 id="advanced-module-bundler-usage" class="bv-no-focus-ring"><span class="bd-content-title">Advanced module bundler usage<a class="anchorjs-link" href="#advanced-module-bundler-usage" aria-labelledby="advanced-module-bundler-usage"></a></span></h3> <p>Webpack and Parcel support prepending the <code class="text-nowrap" translate="no">scss</code> modules with tilde paths (<code class="text-nowrap" translate="no">~</code>) when importing from a <code class="text-nowrap" translate="no">scss</code> file:</p> <div class="bd-code"><pre class="hljs scss p-2" translate="no"><span class="hljs-comment">// Webpack example</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;~bootstrap&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;~bootstrap-vue&#x27;</span>;</pre></div><div class="bd-code"><pre class="hljs scss p-2" translate="no"><span class="hljs-comment">// Parcel example</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;~bootstrap/scss/bootstrap.scss&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;~bootstrap-vue/src/index.scss&#x27;</span>;</pre></div><p>For more details how to configure asset loading and how modules are resolved, please consult the module bundlers documentation.</p> <p><strong>Notes</strong>:</p> <ul> <li>Webpack configuration to load CSS files (<a href="https://webpack.js.org/guides/asset-management/#loading-css" target="_blank" rel="noopener">official guide</a>)</li> <li>Webpack Loader for SASS/SCSS files (<a href="https://webpack.js.org/loaders/sass-loader/" target="_blank" rel="noopener">official guide</a>)</li> <li>Parcel CSS (<a href="https://parceljs.org/css.html" target="_blank" rel="noopener">official guide</a>)</li> <li>Parcel SCSS (<a href="https://parceljs.org/scss.html" target="_blank" rel="noopener">official guide</a>)</li> </ul> <h2 id="tree-shaking-with-module-bundlers" class="bv-no-focus-ring"><span class="bd-content-title">Tree shaking with module bundlers<a class="anchorjs-link" href="#tree-shaking-with-module-bundlers" aria-labelledby="tree-shaking-with-module-bundlers"></a></span></h2> <p>When using a module bundler you can optionally import only specific components groups (plugins), components and/or directives. Note that tree shaking only applies to the JavaScript code and not CSS/SCSS.</p> <div class="alert alert-info"> <p class="mb-0"> <b>Note:</b> Optimal tree shaking only works when webpack 4 is in <a href="https://webpack.js.org/guides/tree-shaking"><code class="notranslate" translate="no">production</code></a> mode and javascript minification is enabled. </p> </div> <h3 id="component-groups-and-directives-as-vue-plugins" class="bv-no-focus-ring"><span class="bd-content-title">Component groups and directives as Vue plugins<a class="anchorjs-link" href="#component-groups-and-directives-as-vue-plugins" aria-labelledby="component-groups-and-directives-as-vue-plugins"></a></span></h3> <p>You can import component groups and directives as Vue plugins by importing from the <code class="text-nowrap" translate="no">bootstrap-vue</code>:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-comment">// This imports all the layout components such as &lt;b-container&gt;, &lt;b-row&gt;, &lt;b-col&gt;:</span>\n<span class="hljs-keyword">import</span> { LayoutPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\nVue.use(LayoutPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-modal&gt; as well as the v-b-modal directive as a plugin:</span>\n<span class="hljs-keyword">import</span> { ModalPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\nVue.use(ModalPlugin)\n\n<span class="hljs-comment">// This imports &lt;b-card&gt; along with all the &lt;b-card-*&gt; sub-components as a plugin:</span>\n<span class="hljs-keyword">import</span> { CardPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\nVue.use(CardPlugin)\n\n<span class="hljs-comment">// This imports directive v-b-scrollspy as a plugin:</span>\n<span class="hljs-keyword">import</span> { VBScrollspyPlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\nVue.use(VBScrollspyPlugin)\n\n<span class="hljs-comment">// This imports the dropdown and table plugins</span>\n<span class="hljs-keyword">import</span> { DropdownPlugin, TablePlugin } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\nVue.use(DropdownPlugin)\nVue.use(TablePlugin)</pre></div><p>When importing as plugins, all subcomponents and related directives are imported in most cases. i.e. When importing <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code>, all the <code class="text-nowrap" translate="no">&lt;nav-*&gt;</code> sub components are also included, as well all dropdown sub components. Component shorthand aliases (if any) are also included in the plugin. Refer to the component and directive documentation for details.</p> <p>There are two additional helper plugins for providing the <code class="text-nowrap" translate="no">$bvModal</code> and <code class="text-nowrap" translate="no">$bvToast</code> injections (if you are not using the <code class="text-nowrap" translate="no">ModalPlugin</code> or <code class="text-nowrap" translate="no">ToastPlugin</code> plugins) which are available for import from <code class="text-nowrap" translate="no">&#39;bootstrap-vue&#39;</code>:</p> <ul> <li><code class="text-nowrap" translate="no">BVModalPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvModal</code> for generating <a href="/docs/components/modal#modal-message-boxes" class="font-weight-bold">message boxes</a>.</li> <li><code class="text-nowrap" translate="no">BVToastPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvToast</code> for generating <a href="/docs/components/toast#toasts-on-demand" class="font-weight-bold">on demand toasts</a>.</li> </ul> <p>When importing multiple component group and/or directive group plugins, include all imports in a single <code class="text-nowrap" translate="no">import</code> statement for optimal tree shaking.</p> <h3 id="individual-components-and-directives" class="bv-no-focus-ring"><span class="bd-content-title">Individual components and directives<a class="anchorjs-link" href="#individual-components-and-directives" aria-labelledby="individual-components-and-directives"></a></span></h3> <p>If you would like to only pull in a specific component or set of components, you can do this by directly importing those components.</p> <p>To cherry pick a component/directive, start by importing it in the file where it is being used:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-comment">// Place all imports from &#x27;bootstrap-vue&#x27; in a single import</span>\n<span class="hljs-comment">// statement for optimal bundle sizes</span>\n<span class="hljs-keyword">import</span> { BModal, VBModal } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span></pre></div><p>Then add it to your component definition:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no">Vue.component(<span class="hljs-string">&#x27;MyComponent&#x27;</span>, {\n  <span class="hljs-attr">components</span>: { BModal },\n  <span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\n  <span class="hljs-attr">directives</span>: { <span class="hljs-string">&#x27;b-modal&#x27;</span>: VBModal }\n  <span class="hljs-comment">// ...</span>\n})</pre></div><p>Or register them globally:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no">Vue.component(<span class="hljs-string">&#x27;BModal&#x27;</span>, BModal)\n<span class="hljs-comment">// Note that Vue automatically prefixes directive names with `v-`</span>\nVue.directive(<span class="hljs-string">&#x27;b-modal&#x27;</span>, VBModal)</pre></div><p>Vue allows for various component and directive name syntaxes here, so feel free to utilize <samp class="notranslate" translate="no">kebab-casing</samp> (shown), <samp class="notranslate" translate="no">camelCasing</samp>, <samp class="notranslate" translate="no">PascalCasing</samp>, and/or object property shorthand (components only).</p> <h3 id="using-bootstrapvue-source-code-for-smaller-bundles" class="bv-no-focus-ring"><span class="bd-content-title">Using BootstrapVue source code for smaller bundles<a class="anchorjs-link" href="#using-bootstrapvue-source-code-for-smaller-bundles" aria-labelledby="using-bootstrapvue-source-code-for-smaller-bundles"></a></span></h3> <p>When using module bundlers, they will usually default to using the <code class="text-nowrap" translate="no">esm/</code> modular build, which has been pre-transpiled by Babel for our <a href="https://github.com/bootstrap-vue/bootstrap-vue/blob/master/.browserslistrc" target="_blank" rel="noopener">supported browsers</a>.</p> <p>You can override the use of the <code class="text-nowrap" translate="no">esm/</code> build by aliasing <code class="text-nowrap" translate="no">&#39;bootstrap-vue&#39;</code> to use the BootstrapVue source files, and whitelisting <code class="text-nowrap" translate="no">node_modules/bootstrap-vue/src/*</code> for transpilation by your build process, in your module bundler config. This will allow you to transpile BootstrapVue for your target browsers/environments and potentially reduce bundle sizes (and will only include the babel helper utils once) at the expense of slightly longer build times.</p> <p><strong>Example webpack.config.js for Babel transpilation:</strong></p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">resolve</span>: {\n    <span class="hljs-attr">alias</span>: {\n      <span class="hljs-comment">// Alias for using source of BootstrapVue</span>\n      <span class="hljs-string">&#x27;bootstrap-vue$&#x27;</span>: <span class="hljs-string">&#x27;bootstrap-vue/src/index.js&#x27;</span>\n    }\n  },\n  <span class="hljs-attr">module</span>: {\n    <span class="hljs-attr">rules</span>: [\n      {\n        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\\.js$/</span>,\n        <span class="hljs-comment">// Exclude transpiling `node_modules`, except `bootstrap-vue/src`</span>\n        exclude: <span class="hljs-regexp">/node_modules\\/(?!bootstrap-vue\\/src\\/)/</span>,\n        use: {\n          <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;babel-loader&#x27;</span>,\n          <span class="hljs-attr">options</span>: {\n            <span class="hljs-attr">presets</span>: [<span class="hljs-string">&#x27;env&#x27;</span>]\n          }\n        }\n      }\n    ]\n  }\n}</pre></div><p>You may need to install <code class="text-nowrap" translate="no">babel-core</code>, <code class="text-nowrap" translate="no">babel-loader</code>, and <code class="text-nowrap" translate="no">babel-preset-env</code>:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># If using npm</span>\nnpm install babel-core babel-loader babel-preset-env --save-dev\n\n<span class="hljs-comment"># If using yarn</span>\nyarn add babel-core babel-loader babel-preset-env --dev</pre></div><p>For more details see:</p> <ul> <li><a href="https://webpack.js.org/configuration/resolve/" target="_blank" rel="noopener">Webpack <code class="text-nowrap" translate="no">resolve.alias</code></a></li> <li><a href="https://webpack.js.org/configuration/module/#rule" target="_blank" rel="noopener">Webpack <code class="text-nowrap" translate="no">rule</code></a></li> <li><a href="https://rollupjs.org/" target="_blank" rel="noopener">rollup.js</a></li> <li><a href="https://parceljs.org/" target="_blank" rel="noopener">Parcel</a></li> </ul> <h2 id="nuxtjs-module" class="bv-no-focus-ring"><span class="bd-content-title">Nuxt.js module<a class="anchorjs-link" href="#nuxtjs-module" aria-labelledby="nuxtjs-module"></a></span></h2> <p>BootstrapVue provides a Nuxt.js module for easily importing BootstrapVue (or portions of BootstrapVue) into your Nuxt.js app.</p> <h3 id="getting-started-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Getting started with Nuxt.js<a class="anchorjs-link" href="#getting-started-with-nuxtjs" aria-labelledby="getting-started-with-nuxtjs"></a></span></h3> <p><a href="https://nuxtjs.org/" target="_blank" rel="noopener">Nuxt.js</a> version <code class="notranslate" translate="no">{{ nuxtVersion }}</code> (or greater) is recommended.</p> <p>Install dependencies:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no"><span class="hljs-comment"># With npm</span>\nnpm install bootstrap-vue\n\n<span class="hljs-comment"># With yarn</span>\nyarn add bootstrap-vue</pre></div><p>Add <code class="text-nowrap" translate="no">bootstrap-vue/nuxt</code> to modules section of your <strong><code class="text-nowrap" translate="no">nuxt.config.js</code></strong> file.</p> <p>This will include both <code class="text-nowrap" translate="no">bootstrap.css</code> and <code class="text-nowrap" translate="no">bootstrap-vue.css</code> default pre-compiled CSS.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>]\n}</pre></div><p>Note that this will <strong>not</strong> install the Icons components. To see how to include icons via the Nuxt.js module, refer to the <a href="#icons" class="font-weight-bold">Icons section</a> below.</p> <h3 id="using-custom-bootstrap-scss" class="bv-no-focus-ring"><span class="bd-content-title">Using custom Bootstrap SCSS<a class="anchorjs-link" href="#using-custom-bootstrap-scss" aria-labelledby="using-custom-bootstrap-scss"></a></span></h3> <p>If you are using custom Bootstrap SCSS, you can disable automatic inclusion of Bootstrap and BootstrapVue pre-compiled CSS files by setting the following option(s) to <code class="text-nowrap" translate="no">false</code>:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">bootstrapCSS</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// Or `css: false`</span>\n    <span class="hljs-attr">bootstrapVueCSS</span>: <span class="hljs-literal">false</span> <span class="hljs-comment">// Or `bvCSS: false`</span>\n  }\n}</pre></div><p>BootstrapVue&#39;s custom SCSS relies on Bootstrap SCSS variables and mixins, and any variable overrides you may have set. You can include Bootstrap and BootstrapVue SCSS in your project&#39;s custom SCSS file:</p> <div class="bd-code"><pre class="hljs scss p-2" translate="no" data-filename="custom.scss">\n<span class="hljs-comment">// Custom Bootstrap variable overrides go first</span>\n<span class="hljs-variable">$grid-breakpoints</span>: (\n  xs: <span class="hljs-number">0</span>,\n  sm: <span class="hljs-number">480px</span>,\n  md: <span class="hljs-number">640px</span>,\n  lg: <span class="hljs-number">992px</span>,\n  xl: <span class="hljs-number">1300px</span>\n);\n<span class="hljs-variable">$enable-rounded</span>: false;\n\n<span class="hljs-comment">// Then include the following</span>\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;bootstrap/scss/bootstrap.scss&#x27;</span>;\n<span class="hljs-keyword">@import</span> <span class="hljs-string">&#x27;bootstrap-vue/src/index.scss&#x27;</span>;\n\n<span class="hljs-comment">// And define any of your custom or additional CSS/SCSS here,</span>\n<span class="hljs-comment">// or via an @import</span></pre></div><p>In your app main entry point include the <em>single</em> custom SCSS file (when using <code class="text-nowrap" translate="no">sass-loader</code>):</p> <div class="bd-code"><pre class="hljs js p-2" translate="no" data-filename="app.js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;custom.scss&#x27;</span></pre></div><h3 id="transformasseturls-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">transformAssetUrls</code> with Nuxt.js<a class="anchorjs-link" href="#transformasseturls-with-nuxtjs" aria-labelledby="transformasseturls-with-nuxtjs"></a></span></h3> <p>The BootstrapVue Nuxt plugin module will automatically add in the BootstrapVue specific <a href="/docs/reference/images" class="font-weight-bold"><code class="text-nowrap" translate="no">transformAssetUrls</code></a> image <code class="text-nowrap" translate="no">src</code> prop configuration for you.</p> <h3 id="tree-shaking-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Tree shaking with Nuxt.js<a class="anchorjs-link" href="#tree-shaking-with-nuxtjs" aria-labelledby="tree-shaking-with-nuxtjs"></a></span></h3> <p>If you wish to reduce your production bundle size because you only use a subset of the available BootstrapVue plugins, you can configure the list of BootstrapVue <code class="text-nowrap" translate="no">componentPlugins</code> or <code class="text-nowrap" translate="no">directivePlugins</code> you want to globally install in your Nuxt.js project. Note tree shaking only applies to the JavaScript code and not CSS/SCSS.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">componentPlugins</span>: [\n      <span class="hljs-string">&#x27;LayoutPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;FormPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;FormCheckboxPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;FormInputPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;FormRadioPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;ToastPlugin&#x27;</span>,\n      <span class="hljs-string">&#x27;ModalPlugin&#x27;</span>\n    ],\n    <span class="hljs-attr">directivePlugins</span>: [<span class="hljs-string">&#x27;VBPopoverPlugin&#x27;</span>, <span class="hljs-string">&#x27;VBTooltipPlugin&#x27;</span>, <span class="hljs-string">&#x27;VBScrollspyPlugin&#x27;</span>]\n  }\n}</pre></div><p>There are two additional helper plugins for providing the <code class="text-nowrap" translate="no">$bvModal</code> and <code class="text-nowrap" translate="no">$bvToast</code> injections (if you are not using the <code class="text-nowrap" translate="no">ModalPlugin</code> or <code class="text-nowrap" translate="no">ToastPlugin</code> plugins) that are available in the <code class="text-nowrap" translate="no">componentPlugins</code> option:</p> <ul> <li><code class="text-nowrap" translate="no">BVModalPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvModal</code> for generating <a href="/docs/components/modal#modal-message-boxes" class="font-weight-bold">message boxes</a>.</li> <li><code class="text-nowrap" translate="no">BVToastPlugin</code> - provides the injection <code class="text-nowrap" translate="no">$bvToast</code> for generating <a href="/docs/components/toast#toasts-on-demand" class="font-weight-bold">on demand toasts</a>.</li> </ul> <p>You can also optionally import individual components and/or directives, by configuring the list of BootstrapVue <code class="text-nowrap" translate="no">components</code> or <code class="text-nowrap" translate="no">directives</code> you want to globally install in your Nuxt.js project.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">components</span>: [<span class="hljs-string">&#x27;BContainer&#x27;</span>, <span class="hljs-string">&#x27;BRow&#x27;</span>, <span class="hljs-string">&#x27;BCol&#x27;</span>, <span class="hljs-string">&#x27;BFormInput&#x27;</span>, <span class="hljs-string">&#x27;BButton&#x27;</span>, <span class="hljs-string">&#x27;BTable&#x27;</span>, <span class="hljs-string">&#x27;BModal&#x27;</span>],\n    <span class="hljs-attr">directives</span>: [<span class="hljs-string">&#x27;VBModal&#x27;</span>, <span class="hljs-string">&#x27;VBPopover&#x27;</span>, <span class="hljs-string">&#x27;VBTooltip&#x27;</span>, <span class="hljs-string">&#x27;VBScrollspy&#x27;</span>]\n  }\n}</pre></div><p>Feel free to mix and match plugin imports with individual component and directive imports.</p> <p>Refer to the reference section at the bottom of each of the <a href="/docs/components" class="font-weight-bold">component</a> and <a href="/docs/directives" class="font-weight-bold">directive</a> docs for details on the plugin names available (and which components and directives are included in each plugin) and component and/or directive import names.</p> <p>Note that when importing individual components, any component aliases will <strong>not</strong> be available.</p> <div class="alert alert-info"> <p class="mb-0"> <b>Note:</b> Optimal tree shaking only works when your Nuxt.js app is in <code class="notranslate" translate="no">production</code> mode. You may notice larger bundle sizes when not in <code class="notranslate" translate="no">production</code> mode (i.e. <code class="notranslate" translate="no">dev</code> mode). </p> </div> <p>If you want to import individual BootstrapVue components into <em>specific</em> pages and/or components of your Nuxt app, you may want to bypass the Nuxt.js module and, instead, follow the <a href="#using-module-bundlers" class="font-weight-bold">module bundlers</a> and <a href="#tree-shaking-with-module-bundlers" class="font-weight-bold">Tree shaking with module bundlers</a> sections above. Alternatively you may want to to just import a few plugins (such as <code class="text-nowrap" translate="no">LayoutPlugin</code>) in your Nuxt.js module config, and then import additional components or plugins in the pages where needed.</p> <h3 id="icons" class="bv-no-focus-ring"><span class="bd-content-title">Icons<a class="anchorjs-link" href="#icons" aria-labelledby="icons"></a></span></h3> <p>The <a href="/docs/icons" class="font-weight-bold">icons plugin</a> is <strong>not</strong> automatically installed when using the Nuxt.js module. You must either explicitly enable the <code class="text-nowrap" translate="no">IconsPlugin</code>, or specify which icon components you wish to import.</p> <p>All Icons:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-comment">// Install the `IconsPlugin` plugin (in addition to `BootstrapVue` plugin)</span>\n    <span class="hljs-attr">icons</span>: <span class="hljs-literal">true</span>\n  }\n}</pre></div><p>Specific icons:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-comment">// Add the desired icon components to the `components` array</span>\n    <span class="hljs-attr">components</span>: [<span class="hljs-string">&#x27;BIcon&#x27;</span>, <span class="hljs-string">&#x27;BIconAlertFill&#x27;</span>, <span class="hljs-string">&#x27;BIconCalendar&#x27;</span>, <span class="hljs-string">&#x27;BIconGears&#x27;</span>]\n  }\n}</pre></div><p>Icons plugin:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-comment">// Add the icon plugin to the `componentsPlugins` array</span>\n    <span class="hljs-attr">componentPlugins</span>: [<span class="hljs-string">&#x27;IconsPlugin&#x27;</span>]\n  }\n}</pre></div><h3 id="passing-custom-bootstrapvue-config-with-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Passing custom BootstrapVue config with Nuxt.js<a class="anchorjs-link" href="#passing-custom-bootstrapvue-config-with-nuxtjs" aria-labelledby="passing-custom-bootstrapvue-config-with-nuxtjs"></a></span></h3> <p>If you need to pass a custom <a href="/docs/reference/settings#default-bootstrapvue-configuration" class="font-weight-bold">BootstrapVue configuration</a>, you may do so by setting the <code class="text-nowrap" translate="no">config</code> property in your <code class="text-nowrap" translate="no">nuxt.config.js</code>:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">modules</span>: [<span class="hljs-string">&#x27;bootstrap-vue/nuxt&#x27;</span>],\n  <span class="hljs-attr">bootstrapVue</span>: {\n    <span class="hljs-attr">config</span>: {\n      <span class="hljs-comment">// Custom config options here</span>\n    }\n  }\n}</pre></div><h3 id="using-pretranspiled-version-of-bootstrapvue-for-nuxtjs" class="bv-no-focus-ring"><span class="bd-content-title">Using pretranspiled version of BootstrapVue for Nuxt.js<a class="anchorjs-link" href="#using-pretranspiled-version-of-bootstrapvue-for-nuxtjs" aria-labelledby="using-pretranspiled-version-of-bootstrapvue-for-nuxtjs"></a></span></h3> <p>Nuxt.js module uses the pre-transpiled versions of BootstrapVue for faster development builds and the source (<code class="text-nowrap" translate="no">src/</code>) of BootstrapVue for higher quality and smaller production builds.</p> <p>You can override this option using <code class="text-nowrap" translate="no">usePretranspiled</code> option. Setting to <code class="text-nowrap" translate="no">true</code> always uses the pre-transpiled versions, while setting it to <code class="text-nowrap" translate="no">false</code> will always use <code class="text-nowrap" translate="no">src/</code>. By default <code class="text-nowrap" translate="no">usePretranspiled</code> is enabled in development mode only. You should not need to use this option as the default is most optimal for performance.</p> <h2 id="vue-cli-3" class="bv-no-focus-ring"><span class="bd-content-title">Vue CLI 3<a class="anchorjs-link" href="#vue-cli-3" aria-labelledby="vue-cli-3"></a></span></h2> <p>Unlike V2, Vue CLI 3 doesn&#39;t use templates.</p> <p>Create a new project in the directory <code class="text-nowrap" translate="no">my-project</code>:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no">npx @vue/cli create my-project</pre></div><p>Enter the <code class="text-nowrap" translate="no">my-project</code> directory and install <code class="text-nowrap" translate="no">bootstrap-vue</code>:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install bootstrap-vue</pre></div><p>Under the hood, Vue CLI uses webpack, so we can register the BootstrapVue plugin as with the webpack instructions.</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">import</span> { BootstrapVue, BootstrapVueIcons } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span>\n\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;bootstrap/dist/css/bootstrap.css&#x27;</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;bootstrap-vue/dist/bootstrap-vue.css&#x27;</span>\n\nVue.use(BootstrapVue)\nVue.use(BootstrapVueIcons)</pre></div><p>For additional configuration for Vue CLI 3 for using project relative paths for image src props on various BootstrapVue components, refer to the Vue CLI 3 section of the <a href="/docs/reference/images#vue-cli-3-support" class="font-weight-bold">Image Src Resolving</a> reference page.</p> <h3 id="vue-cli-3-plugin" class="bv-no-focus-ring"><span class="bd-content-title">Vue CLI 3 plugin<a class="anchorjs-link" href="#vue-cli-3-plugin" aria-labelledby="vue-cli-3-plugin"></a></span></h3> <p>As an alternative, you can use the <a href="https://github.com/GregYankovoy/vue-cli-plugin-bootstrap-vue" target="_blank" rel="noopener">Bootstrap-Vue Vue CLI 3 plugin</a> to help you configure your app.</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no">vue create my-app\n<span class="hljs-built_in">cd</span> my-app\nvue add bootstrap-vue</pre></div><p>This will create a new app with basic BootstrapVue settings to get your project started.</p> <p>In the future this plugin will provide options for more advanced configurations and templates.</p> <p>For Icons support, you may need to edit the resultant config file.</p> <h2 id="browser" class="bv-no-focus-ring"><span class="bd-content-title">Browser<a class="anchorjs-link" href="#browser" aria-labelledby="browser"></a></span></h2> <p>If not using a module bundler or compile process, you can instead add the Bootstrap and BootstrapVue CSS URLs in your HTML <code class="text-nowrap" translate="no">&lt;head&gt;</code> section, followed by the required JavaScript files.</p> <p>When supporting older browsers (see <a href="#browser-support" class="font-weight-bold">Browser Support</a> below), you will need to include a polyfill for handling modern JavaScript features before loading Vue and BootstrapVue JavaScript files.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-comment">&lt;!-- Add this to &lt;head&gt; --&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load required Bootstrap and BootstrapVue CSS --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//unpkg.com/bootstrap/dist/css/bootstrap.min.css&quot;</span> /&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.css&quot;</span> /&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load polyfills to support older browsers --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//polyfill.io/v3/polyfill.min.js?features=es2015%2CIntersectionObserver&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load Vue followed by BootstrapVue --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/vue@latest/dist/vue.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- Load the following for BootstrapVueIcons support --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></pre></div><h2 id="build-variants" class="bv-no-focus-ring"><span class="bd-content-title">Build variants<a class="anchorjs-link" href="#build-variants" aria-labelledby="build-variants"></a></span></h2> <p>Choosing the best variant for your build environment / packager helps reduce bundle sizes. If your bundler supports esm modules, it will automatically prefer it over commonjs.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Variant</th> <th>Environments</th> <th>Tree Shake</th> <th>Package path</th> </tr> </thead> <tbody><tr> <td><strong>ESM module</strong></td> <td>webpack 2+ / rollup.js</td> <td>Yes</td> <td><code class="text-nowrap" translate="no">esm/index.js</code></td> </tr> <tr> <td>ESM bundle</td> <td>webpack 2+ / rollup.js</td> <td>Yes</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue.esm.js</code></td> </tr> <tr> <td>commonjs2</td> <td>webpack 1 / ...</td> <td>No</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue.common.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue.common.min.js</code></td> </tr> <tr> <td>UMD</td> <td>Browser</td> <td>No</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue.min.js</code></td> </tr> </tbody></table> </div><p>Note the UMD (browser) variant <strong>does not</strong> include BootstrapVue <a href="/docs/icons" class="font-weight-bold">icons</a> support. All other variants listed above <em>do include</em> the <code class="text-nowrap" translate="no">BootstrapVueIcons</code> (<code class="text-nowrap" translate="no">IconsPlugin</code>) plugin (note the icons plugin is not automatically installed, and must explicitly installed via <code class="text-nowrap" translate="no">Vue.use()</code>. See the <a href="/docs/icons#usage" class="font-weight-bold">Icons usage</a> section for more details.</p> <p>Icons only modules:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Variant</th> <th>Environments</th> <th>Tree Shake</th> <th>Package path</th> </tr> </thead> <tbody><tr> <td><strong>ESM bundle</strong></td> <td>webpack 2+ / rollup.js</td> <td>Yes</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.esm.js</code></td> </tr> <tr> <td>commonjs2</td> <td>webpack 1 / ...</td> <td>No</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.common.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.common.min.js</code></td> </tr> <tr> <td>UMD</td> <td>Browser</td> <td>No</td> <td><code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.js</code> <em>or</em> <code class="text-nowrap" translate="no">dist/bootstrap-vue-icons.min.js</code></td> </tr> </tbody></table> </div><p>The <code class="text-nowrap" translate="no">ESM</code> module build and the <code class="text-nowrap" translate="no">ESM</code> bundles (single file) are <a href="#tree-shaking-with-module-bundlers" class="font-weight-bold">tree-shakeable</a>, but you will experience smaller final bundle sizes when using the <code class="text-nowrap" translate="no">ESM</code> module <em>vs.</em> the <code class="text-nowrap" translate="no">ESM</code> bundle.</p> <p>All of the build variants listed above have been pre-transpiled targeting the <a href="https://github.com/bootstrap-vue/bootstrap-vue/blob/master/.browserslistrc" target="_blank" rel="noopener">browsers</a> supported by BootstrapVue. However, if you are targeting only modern browsers, you may want to import <code class="text-nowrap" translate="no">BootstrapVue</code> from <code class="text-nowrap" translate="no">src/index.js</code>, (by aliasing <code class="text-nowrap" translate="no">bootstrap-vue</code> to <code class="text-nowrap" translate="no">bootstrap-vue/src/index.js</code>) and whitelisting <code class="text-nowrap" translate="no">bootstrap-vue/src</code> for transpilation via your own project. This can potentially reduce final project bundle sizes. See the <a href="#using-bootstrapvue-source-code-for-smaller-bundles" class="font-weight-bold">Using BootstrapVue source code for smaller bundles</a> section above for more details.</p> <h3 id="dependencies" class="bv-no-focus-ring"><span class="bd-content-title">Dependencies<a class="anchorjs-link" href="#dependencies" aria-labelledby="dependencies"></a></span></h3> <p>BootstrapVue relies on <code class="text-nowrap" translate="no">Popper.js</code> (for Tooltip, Popover, and Dropdown positioning), <a href="https://portal-vue.linusb.org/" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">PortalVue</code></a> (for toasts) and <a href="https://github.com/alexsasharegan/vue-functional-data-merge" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">vue-functional-data-merge</code></a> (used by our functional components). These three dependencies are included in the BootstrapVue <code class="text-nowrap" translate="no">UMD</code> bundle, while the UMD (browser) icons only bundle includes <code class="text-nowrap" translate="no">vue-functional-data-merge</code>. All other builds do not include these dependencies.</p> <h2 id="migrating-a-project-already-using-bootstrap" class="bv-no-focus-ring"><span class="bd-content-title">Migrating a project already using Bootstrap<a class="anchorjs-link" href="#migrating-a-project-already-using-bootstrap" aria-labelledby="migrating-a-project-already-using-bootstrap"></a></span></h2> <p>If you&#39;ve already been using Bootstrap v{{bootstrapVersionMajor}}, there are a couple adjustments you may need to make to your project:</p> <ul> <li>Remove the <code class="text-nowrap" translate="no">bootstrap.js</code> file from your page scripts or build pipeline</li> <li>If Bootstrap is the only thing relying on <code class="text-nowrap" translate="no">jQuery</code>, you can safely remove it — BootstrapVue <strong>does not</strong> depend on <code class="text-nowrap" translate="no">jQuery</code></li> <li>Convert your native Bootstrap HTML markup into the simplified BootstrapVue custom component markup</li> <li>Start by converting only the interactive controls that require Bootstrap&#39;s javascript first.</li> </ul> <h2 id="browser-support" class="bv-no-focus-ring"><span class="bd-content-title">Browser support<a class="anchorjs-link" href="#browser-support" aria-labelledby="browser-support"></a></span></h2> <h3 id="css" class="bv-no-focus-ring"><span class="bd-content-title">CSS<a class="anchorjs-link" href="#css" aria-labelledby="css"></a></span></h3> <p>BootstrapVue is to be used with Bootstrap v{{bootstrapVersionMinor}} CSS/SCSS. Please see <b-link :href="bootstrapBrowserDevicesHref" target="_blank">Browsers and devices</b-link> for more information about browsers currently supported by Bootstrap v{{bootstrapVersionMajor}}.</p> <h3 id="js" class="bv-no-focus-ring"><span class="bd-content-title">JS<a class="anchorjs-link" href="#js" aria-labelledby="js"></a></span></h3> <p>BootstrapVue is written in Vue.js! So it is up to your project and bundler which browsers are supported.</p> <p>Following features and APIs are used by BootstrapVue:</p> <ul> <li>ES6 (e.g. <code class="text-nowrap" translate="no">Array.from()</code>, <code class="text-nowrap" translate="no">Array.isArray()</code>, <code class="text-nowrap" translate="no">Object.assign()</code>, <code class="text-nowrap" translate="no">Object.is()</code>, etc.)</li> <li><code class="text-nowrap" translate="no">Promise</code></li> <li><code class="text-nowrap" translate="no">MutationObserver</code></li> <li><code class="text-nowrap" translate="no">IntersectionObserver</code> (optional)</li> </ul> <p>If you want to support older IE, Android, and iOS device web browsers, you may want to use <a href="https://github.com/zloirock/core-js" target="_blank" rel="noopener">core-js</a> and <a href="https://www.npmjs.com/package/intersection-observer" target="_blank" rel="noopener">intersection-observer</a>:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install core-js regenerator-runtime intersection-observer</pre></div><p>Then import the polyfills in your app main entry point:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;core-js/stable&#x27;</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;regenerator-runtime/runtime&#x27;</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;intersection-observer&#x27;</span> <span class="hljs-comment">// Optional</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span></pre></div><p>If using deprecated <a href="https://babeljs.io/docs/en/babel-polyfill/" target="_blank" rel="noopener">@babel/polyfill</a>:</p> <div class="bd-code"><pre class="hljs bash p-2" translate="no">npm install @babel/polyfill intersection-observer</pre></div><p>Then import the polyfills in your app main entry point:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;@babel/polyfill&#x27;</span>\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;intersection-observer&#x27;</span> <span class="hljs-comment">// Optional</span>\n<span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">import</span> BootstrapVue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;bootstrap-vue&#x27;</span></pre></div><p>Alternatively, use <a href="https://polyfill.io/" target="_blank" rel="noopener">Polyfill.io</a> to dynamically serve browser specific polyfills via <code class="text-nowrap" translate="no">&lt;script&gt;</code> tags in the HTML <code class="text-nowrap" translate="no">&lt;head&gt;</code> section. See the <a href="#browser" class="font-weight-bold">Browser</a> section above for an example.</p> <h2 id="tooling-support" class="bv-no-focus-ring"><span class="bd-content-title">Tooling support<a class="anchorjs-link" href="#tooling-support" aria-labelledby="tooling-support"></a></span></h2> <p>BootstrapVue provides additional helper files for auto completion in popular IDE editors.</p> <h3 id="vs-code--vetur" class="bv-no-focus-ring"><span class="bd-content-title">VS Code + Vetur<a class="anchorjs-link" href="#vs-code--vetur" aria-labelledby="vs-code--vetur"></a></span></h3> <p>If you are using <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a> as your text editor, BootstrapVue has intellisense autocompletion for component attributes and directives available via the <code class="text-nowrap" translate="no">dist/vetur-tags.json</code> and <code class="text-nowrap" translate="no">dist/vetur-attributes.json</code> files.</p> <h3 id="jetbrains-webstorm-and-compatible" class="bv-no-focus-ring"><span class="bd-content-title">JetBrains WebStorm (and compatible)<a class="anchorjs-link" href="#jetbrains-webstorm-and-compatible" aria-labelledby="jetbrains-webstorm-and-compatible"></a></span></h3> <p>For <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">WebStorm</a> editor (or web-types compatible), BootstrapVue provides the file <code class="text-nowrap" translate="no">dist/web-types.json</code> for component attribute and directive auto-completion.</p>'}},382:function(e){e.exports=JSON.parse('{"name":"Intro","title":"Getting Started","description":"Get started with BootstrapVue, based on the world\'s most popular framework - Bootstrap v4, for building responsive, mobile-first sites using Vue.js"}')},507:function(e,t,n){"use strict";n.r(t);var o=n(354),l=n(355),r=n(359),c=n(352),d=n(356),h=n(63),m=n(51),f=n(382),j=n(381),v=n.n(j),{titleLead:w="",body:body="",baseTOC:x={}}=v.a;t.default={name:"BDVDocs",components:{CarbonAd:o.a,Main:l.a,QuickLinks:r.a,Section:c.a},mixins:[d.a],layout:"docs",data:()=>({bootstrapVersion:h.c,bootstrapVersionMinor:h.e,bootstrapVersionMajor:h.d,bootstrapIconsCount:h.a,nuxtVersion:h.k,nuxtVersionMinor:h.m,nuxtVersionMajor:h.l,popperVersion:h.n,popperVersionMinor:h.p,popperVersionMajor:h.o,portalVueVersion:h.q,portalVueVersionMinor:h.s,portalVueVersionMajor:h.r,titleLead:w,body:body,baseTOC:x,version:m.d,vueVersion:h.u,vueVersionMinor:h.w,vueVersionMajor:h.v}),computed:{bootstrapBrowserDevicesHref(){var{bootstrapVersionMinor:e}=this;return"https://getbootstrap.com/docs/".concat(e,"/getting-started/browsers-devices")},meta:()=>f},template:'\n    <Main>\n      <Section tag="header">'.concat(w,'</Section>\n      <CarbonAd key="ad-/docs"></CarbonAd>\n      <QuickLinks key="quick-/docs"></QuickLinks>\n      <Section>').concat(body,"</Section>\n    </Main>")}}}]);