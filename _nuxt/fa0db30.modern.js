(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{467:function(n,l){n.exports={baseTOC:{top:"#layout-and-grid-system",title:"Layout and Grid System",toc:[{href:"#how-it-works",label:"How it works"},{href:"#containers-b-container",label:"Containers &lt;b-container&gt;",toc:[{href:"#default-container",label:"Default container"},{href:"#fluid-width-container",label:"Fluid width container"},{href:"#responsive-fluid-containers",label:"Responsive fluid containers"}]},{href:"#rows-b-row-and-b-form-row",label:"Rows &lt;b-row&gt; and &lt;b-form-row&gt;"},{href:"#columns-b-col",label:"Columns &lt;b-col&gt;"},{href:"#grid-options",label:"Grid options",toc:[{href:"#container-sizes",label:"Container sizes"}]},{href:"#auto-layout-columns",label:"Auto-layout columns",toc:[{href:"#equal-width-columns",label:"Equal-width columns"},{href:"#equal-width-multi-line",label:"Equal-width multi-line"},{href:"#setting-one-column-width",label:"Setting one column width"},{href:"#variable-width-content",label:"Variable width content"}]},{href:"#responsive-classes",label:"Responsive classes",toc:[{href:"#all-breakpoints",label:"All breakpoints"},{href:"#stacked-to-horizontal",label:"Stacked to horizontal"},{href:"#mix-and-match",label:"Mix and match"}]},{href:"#alignment",label:"Alignment",toc:[{href:"#vertical-alignment",label:"Vertical alignment"},{href:"#horizontal-alignment",label:"Horizontal alignment"}]},{href:"#reordering",label:"Reordering",toc:[{href:"#ordering-columns",label:"Ordering columns"},{href:"#offsetting-columns",label:"Offsetting columns"},{href:"#margin-utilities-on-columns",label:"Margin utilities on columns"}]},{href:"#nesting-grids",label:"Nesting grids"},{href:"#row-columns",label:"Row columns"},{href:"#utilities-for-layout",label:"Utilities for layout",toc:[{href:"#changing-display",label:"Changing display"},{href:"#flexbox-options",label:"Flexbox options"},{href:"#margin-and-padding",label:"Margin and padding"},{href:"#toggle-visibility",label:"Toggle visibility"}]}]},titleLead:'<h1 id="layout-and-grid-system" class="bv-no-focus-ring"><span class="bd-content-title">Layout and Grid System</span></h1> <p class="bd-lead">Use the powerful mobile-first flexbox grid (via the <code class="text-nowrap" translate="no">&lt;b-container&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-row&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> components) to build layouts of all shapes and sizes thanks to a twelve column system, five default responsive tiers, CSS Sass variables and mixins, and dozens of predefined classes.</p>',body:'<p>BootstrapVue provides several convenient <em>functional</em> components tailored for layout, which can simplify your complex page markup compared to traditional Bootstrap v4 markup. Feel free to switch back and forth between traditional Bootstrap v4 markup (i.e. <code class="text-nowrap" translate="no">&lt;div&gt;</code>s and classes) and BootstrapVue&#39;s convenient functional layout components.</p> <h2 id="how-it-works" class="bv-no-focus-ring"><span class="bd-content-title">How it works<a class="anchorjs-link" href="#how-it-works" aria-labelledby="how-it-works"></a></span></h2> <p>Bootstrap&#39;s grid system uses a series of containers, rows, and columns to layout and align content. It&#39;s built with <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox" target="_blank" rel="noopener">flexbox</a> and is fully responsive. Below is an example and an in-depth look at how the grid comes together.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>2 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-how-it-works.vue --&gt;</span></pre></div><p>The above example creates three equal-width columns on small, medium, large, and extra large devices using Bootstrap v4&#39;s predefined grid classes. Those columns are centered in the page with the parent <code class="text-nowrap" translate="no">.container</code>.</p> <p>Breaking it down, here&#39;s how it works:</p> <ul> <li>Containers provide a means to center and horizontally pad your site&#39;s contents. Use <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> for a responsive pixel width or <code class="text-nowrap" translate="no">&lt;b-container fluid&gt;</code> for <code class="text-nowrap" translate="no">width: 100%</code> across all viewport and device sizes.</li> <li>Rows are wrappers for columns. Each column has horizontal <code class="text-nowrap" translate="no">padding</code> (called a gutter) for controlling the space between them. This <code class="text-nowrap" translate="no">padding</code> is then counteracted on the rows with negative margins. This way, all the content in your columns is visually aligned down the left side.</li> <li>In a grid layout, content must be placed within columns and only columns may be immediate children of rows.</li> <li>Thanks to flexbox, grid columns without a set width will automatically layout with equal widths. For example, four instances of <code class="text-nowrap" translate="no">&lt;b-col sm=&quot;auto&quot;&gt;</code> will each automatically be 25% wide for small breakpoints.</li> <li>Column prop <code class="text-nowrap" translate="no">cols</code> indicates the number of columns you&#39;d like to use out of the possible 12 per row regardless of breakpoint (starting at breakpoint <code class="text-nowrap" translate="no">xs</code>). So, if you want three equal-width columns at any breakpoint, you can use <code class="text-nowrap" translate="no">&lt;b-col cols=&quot;4&quot;&gt;</code>.</li> <li>Column props <code class="text-nowrap" translate="no">sm</code>, <code class="text-nowrap" translate="no">md</code>, <code class="text-nowrap" translate="no">lg</code>, <code class="text-nowrap" translate="no">xl</code> indicate the number of columns you&#39;d like to use out of the possible 12 per row, at the various breakpoints. So, if you want three equal-width columns at breakpoint <code class="text-nowrap" translate="no">sm</code>, you can use <code class="text-nowrap" translate="no">&lt;b-col sm=&quot;4&quot;&gt;</code>. the special value <code class="text-nowrap" translate="no">auto</code> can be used to take up the remaining available column space in a row.</li> <li>Column <code class="text-nowrap" translate="no">width</code>s are set in percentages, so they&#39;re always fluid and sized relative to their parent element.</li> <li>Columns have horizontal <code class="text-nowrap" translate="no">padding</code> to create the gutters between individual columns, however, you can remove the <code class="text-nowrap" translate="no">margin</code> from <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> and <code class="text-nowrap" translate="no">padding</code> from <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> by setting the <code class="text-nowrap" translate="no">no-gutters</code> prop on <code class="text-nowrap" translate="no">&lt;b-row&gt;</code>.</li> <li>To make the grid responsive, there are five grid breakpoints, one for each responsive breakpoint: all breakpoints (extra small), small, medium, large, and extra large.</li> <li>Grid breakpoints are based on minimum width media queries, meaning <strong>they apply to that one breakpoint and all those above it</strong> (e.g., <code class="text-nowrap" translate="no">&lt;b-col sm=&quot;4&quot;&gt;</code> applies to small, medium, large, and extra large devices, but not the first <code class="text-nowrap" translate="no">xs</code> breakpoint).</li> <li>You can use predefined grid classes or Sass mixins for more semantic markup.</li> </ul> <p>Be aware of the limitations and <a href="https://github.com/philipwalton/flexbugs" target="_blank" rel="noopener">bugs around flexbox</a>, like the <a href="https://github.com/philipwalton/flexbugs#flexbug-9" target="_blank" rel="noopener">inability to use some HTML elements as flex containers</a>.</p> <h2 id="containers-b-container" class="bv-no-focus-ring"><span class="bd-content-title">Containers <code class="text-nowrap" translate="no">&lt;b-container&gt;</code><a class="anchorjs-link" href="#containers-b-container" aria-labelledby="containers-b-container"></a></span></h2> <p>Containers (<code class="text-nowrap" translate="no">&lt;b-container&gt;</code>) are the most basic layout element in Bootstrap. Choose from a responsive, fixed-width container (meaning its <code class="text-nowrap" translate="no">max-width</code> changes at each breakpoint) by default, or fluid-width (meaning it&#39;s 100% wide all the time) by setting &#39;fluid&#39; prop, or responsive containers where the container is fluid up until a specific breakpoint (requires Bootstrap CSS <code class="text-nowrap" translate="no">v4.4+</code>).</p> <p>While containers can be nested, most layouts do not require a nested container.</p> <p>The default breakpoint widths can be configured using Bootstrap V4.x SCSS variables. See the <a href="/docs/reference/theming" class="font-weight-bold">Theming</a> reference page for additional details, and the table in the <a href="#grid-options" class="font-weight-bold">Grid options</a> section below.</p> <h3 id="default-container" class="bv-no-focus-ring"><span class="bd-content-title">Default container<a class="anchorjs-link" href="#default-container" aria-labelledby="default-container"></a></span></h3> <p>The default <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> is a responsive, fixed-width container, meaning its <code class="text-nowrap" translate="no">max-width</code> changes at each viewport width breakpoint.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Content here --&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span></pre></div><h3 id="fluid-width-container" class="bv-no-focus-ring"><span class="bd-content-title">Fluid width container<a class="anchorjs-link" href="#fluid-width-container" aria-labelledby="fluid-width-container"></a></span></h3> <p>Using the <code class="text-nowrap" translate="no">fluid</code> prop on <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> will render a container that is always 100% width, regardless of viewport breakpoint.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Content here --&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span></pre></div><p>Setting the <code class="text-nowrap" translate="no">fluid</code> prop to true (or an empty string) is equivalent to the Bootstrap <code class="text-nowrap" translate="no">.container-fluid</code> class.</p> <h3 id="responsive-fluid-containers" class="bv-no-focus-ring"><span class="bd-content-title">Responsive fluid containers<a class="anchorjs-link" href="#responsive-fluid-containers" aria-labelledby="responsive-fluid-containers"></a></span></h3> <p><span class="badge badge-info small">Requires Bootstrap v4.4+ CSS</span></p> <p>Responsive containers are new in Bootstrap v4.4. They allow you to specify a container that is 100% wide (fluid) until particular breakpoint is reached at which point a <code class="text-nowrap" translate="no">max-width</code> is applied. For example, setting prop <code class="text-nowrap" translate="no">fluid</code> to <code class="text-nowrap" translate="no">&#39;md&#39;</code> will render a container that is 100% wide to start until the <code class="text-nowrap" translate="no">&#39;md&#39;</code> breakpoint is reached, at which point it will become a standard non-fluid container.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>=<span class="hljs-string">&quot;sm&quot;</span>&gt;</span>\n  100% wide until small breakpoint\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>=<span class="hljs-string">&quot;md&quot;</span>&gt;</span>\n  100% wide until medium breakpoint\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>=<span class="hljs-string">&quot;lg&quot;</span>&gt;</span>\n  100% wide until large breakpoint\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>=<span class="hljs-string">&quot;xl&quot;</span>&gt;</span>\n  100% wide until extra large breakpoint\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span></pre></div><p>Setting the fluid prop to a breakpoint name translates to the Bootstrap class <code class="text-nowrap" translate="no">.container-{breakpoint}</code>.</p> <p>Refer to the <a href="#grid-options" class="font-weight-bold">Grid options section</a> table below for the default container width values.</p> <h2 id="rows-b-row-and-b-form-row" class="bv-no-focus-ring"><span class="bd-content-title">Rows <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> and <code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code><a class="anchorjs-link" href="#rows-b-row-and-b-form-row" aria-labelledby="rows-b-row-and-b-form-row"></a></span></h2> <p>Rows are wrappers for <a href="#columns-b-col" class="font-weight-bold">columns</a>. Each column has horizontal padding (called a gutter) for controlling the space between them. This padding is then counteracted on the rows with negative margins. This way, all the content in your columns is visually aligned down the left side.</p> <p>You can remove the margin from <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> and padding from <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> by setting the <code class="text-nowrap" translate="no">no-gutters</code> prop on <code class="text-nowrap" translate="no">&lt;b-row&gt;</code>.</p> <p>Or, for compact margins (smaller gutters between columns), use the <code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code> component, which is typically used when laying out <a href="/docs/components/form" class="font-weight-bold">forms</a>.</p> <h2 id="columns-b-col" class="bv-no-focus-ring"><span class="bd-content-title">Columns <code class="text-nowrap" translate="no">&lt;b-col&gt;</code><a class="anchorjs-link" href="#columns-b-col" aria-labelledby="columns-b-col"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-col&gt;</code> Must be placed inside a <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> component, or an element (such as a <code class="text-nowrap" translate="no">&lt;div&gt;</code>) that has the class <code class="text-nowrap" translate="no">row</code> applied to it, or - in the case of <a href="/docs/components/form" class="font-weight-bold">forms</a> - inside a <code class="text-nowrap" translate="no">&lt;b-form-row&gt;</code> component (to obtain columns with more compact margins).</p> <h2 id="grid-options" class="bv-no-focus-ring"><span class="bd-content-title">Grid options<a class="anchorjs-link" href="#grid-options" aria-labelledby="grid-options"></a></span></h2> <p>While Bootstrap uses <code class="text-nowrap" translate="no">em</code> or <code class="text-nowrap" translate="no">rem</code> units for defining most sizes, <code class="text-nowrap" translate="no">px</code>s are used for grid breakpoints and container widths. This is because the viewport width is in pixels and does not change with the <a href="https://drafts.csswg.org/mediaqueries-3/#units" target="_blank" rel="noopener">font size</a>.</p> <p>See how aspects of the Bootstrap grid system work across multiple devices with a handy table.</p> <div class="table-responsive-sm"> <table class="table table-bordered table-striped"> <thead> <tr> <th></th> <th> <strong>Extra small</strong> (xs)<br> <code class="notranslate" translate="no">&lt;576px</code> </th> <th> <strong>Small</strong> (sm)<br> <code class="notranslate" translate="no">≥576px</code> </th> <th> <strong>Medium</strong> (md)<br> <code class="notranslate" translate="no">≥768px</code> </th> <th> <strong>Large</strong> (lg)<br> <code class="notranslate" translate="no">≥992px</code> </th> <th> <strong>Extra large</strong> (xl)<br> <code class="notranslate" translate="no">≥1200px</code> </th> </tr> </thead> <tbody> <tr> <th class="text-left">Max container width</th> <td>None (auto)</td> <td>540px</td> <td>720px</td> <td>960px</td> <td>1140px</td> </tr> <tr> <th class="text-left">Prop</th> <td><code class="notranslate" translate="no">cols="*"</code></td> <td><code class="notranslate" translate="no">sm="*"</code></td> <td><code class="notranslate" translate="no">md="*"</code></td> <td><code class="notranslate" translate="no">lg="*"</code></td> <td><code class="notranslate" translate="no">xl="*"</code></td> </tr> <tr> <th class="text-left"># of columns</th> <td colspan="5">12</td> </tr> <tr> <th class="text-left">Gutter width</th> <td colspan="5">30px (15px on each side of a column)</td> </tr> <tr> <th class="text-left">Nestable</th> <td colspan="5">Yes</td> </tr> <tr> <th class="text-left">Offset</th> <td><code class="notranslate" translate="no">offset="*"</code></td> <td><code class="notranslate" translate="no">offset-sm="*"</code></td> <td><code class="notranslate" translate="no">offset-md="*"</code></td> <td><code class="notranslate" translate="no">offset-lg="*"</code></td> <td><code class="notranslate" translate="no">offset-xl="*"</code></td> </tr> <tr> <th class="text-left">Order</th> <td><code class="notranslate" translate="no">order="*"</code></td> <td><code class="notranslate" translate="no">order-sm="*"</code></td> <td><code class="notranslate" translate="no">order-md="*"</code></td> <td><code class="notranslate" translate="no">order-lg="*"</code></td> <td><code class="notranslate" translate="no">order-xl="*"</code></td> </tr> </tbody> </table> </div> <p><strong>Notes:</strong></p> <ul> <li>There is no <code class="text-nowrap" translate="no">xs</code> prop. The <code class="text-nowrap" translate="no">cols</code> prop refers to the <code class="text-nowrap" translate="no">xs</code> (smallest) breakpoint.</li> <li>The above breakpoint values and names are the Bootstrap defaults. They can be customized via <a href="/docs/reference/theming" class="font-weight-bold">SCSS variables</a>, and (if also using custom breakpoint names), via the BootstrapVue <a href="/docs/reference/settings" class="font-weight-bold">global configuration</a>.</li> </ul> <h3 id="container-sizes" class="bv-no-focus-ring"><span class="bd-content-title">Container sizes<a class="anchorjs-link" href="#container-sizes" aria-labelledby="container-sizes"></a></span></h3> <p>The following table outlines the default container maximum widths at the various breakpoints. These may vary if you are using custom themed Bootstrap v4 SCSS/CSS.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Container type</th> <th>Extra small <code class="text-nowrap" translate="no">&lt;576px</code></th> <th>Small <code class="text-nowrap" translate="no">≥576px</code></th> <th>Medium <code class="text-nowrap" translate="no">≥768px</code></th> <th>Large <code class="text-nowrap" translate="no">≥992px</code></th> <th>Extra large <code class="text-nowrap" translate="no">≥1200px</code></th> </tr> </thead> <tbody><tr> <td><em>default</em></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">540px</code></td> <td><code class="text-nowrap" translate="no">720px</code></td> <td><code class="text-nowrap" translate="no">960px</code></td> <td><code class="text-nowrap" translate="no">1140px</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">fluid</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">fluid=&quot;sm&quot;</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">540px</code></td> <td><code class="text-nowrap" translate="no">720px</code></td> <td><code class="text-nowrap" translate="no">960px</code></td> <td><code class="text-nowrap" translate="no">1140px</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">fluid=&quot;md&quot;</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">720px</code></td> <td><code class="text-nowrap" translate="no">960px</code></td> <td><code class="text-nowrap" translate="no">1140px</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">fluid=&quot;lg&quot;</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">960px</code></td> <td><code class="text-nowrap" translate="no">1140px</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">fluid=&quot;xl&quot;</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">100%</code></td> <td><code class="text-nowrap" translate="no">1140px</code></td> </tr> </tbody></table> </div><p>Refer to the <a href="#containers-b-container" class="font-weight-bold">Containers <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> section</a> section above for additional information</p> <h2 id="auto-layout-columns" class="bv-no-focus-ring"><span class="bd-content-title">Auto-layout columns<a class="anchorjs-link" href="#auto-layout-columns" aria-labelledby="auto-layout-columns"></a></span></h2> <p>Utilize breakpoint-specific column classes for easy column sizing without an explicit numbered prop like <code class="text-nowrap" translate="no">&lt;b-col sm=&quot;6&quot;&gt;</code>.</p> <h3 id="equal-width-columns" class="bv-no-focus-ring"><span class="bd-content-title">Equal-width columns<a class="anchorjs-link" href="#equal-width-columns" aria-labelledby="equal-width-columns"></a></span></h3> <p>For example, here are two grid layouts that apply to every device and viewport, from <code class="text-nowrap" translate="no">xs</code> to <code class="text-nowrap" translate="no">xl</code>. Add any number of unit-less classes for each breakpoint you need and every column will be the same width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>2 of 2<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>2 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-equal-width.vue --&gt;</span></pre></div><h3 id="equal-width-multi-line" class="bv-no-focus-ring"><span class="bd-content-title">Equal-width multi-line<a class="anchorjs-link" href="#equal-width-multi-line" aria-labelledby="equal-width-multi-line"></a></span></h3> <p>Create equal-width columns that span multiple lines by inserting a <code class="text-nowrap" translate="no">.w-100</code> where you want the columns to break to a new line. Make the breaks responsive by mixing <code class="text-nowrap" translate="no">.w-100</code> with some <a href="https://getbootstrap.com/docs/4.5/utilities/display/" target="_blank" rel="noopener">responsive display utilities</a>.</p> <p>There was a <a href="https://github.com/philipwalton/flexbugs#flexbug-11" target="_blank" rel="noopener">Safari flexbox bug</a> that prevented this from working without an explicit <code class="text-nowrap" translate="no">flex-basis</code> or <code class="text-nowrap" translate="no">border</code>. There are workarounds for older browser versions, but they shouldn&#39;t be necessary if your target browsers don&#39;t fall into the buggy versions.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w-100&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-equal-width-multiple-lines.vue --&gt;</span></pre></div><h3 id="setting-one-column-width" class="bv-no-focus-ring"><span class="bd-content-title">Setting one column width<a class="anchorjs-link" href="#setting-one-column-width" aria-labelledby="setting-one-column-width"></a></span></h3> <p>Auto-layout for flexbox grid columns also means you can set the width of one column and have the sibling columns automatically resize around it. You may use predefined grid classes (as shown below), grid mixins, or inline widths. Note that the other columns will resize no matter the width of the center column.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>2 of 3 (wider)<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>2 of 3 (wider)<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-one-width.vue --&gt;</span></pre></div><h3 id="variable-width-content" class="bv-no-focus-ring"><span class="bd-content-title">Variable width content<a class="anchorjs-link" href="#variable-width-content" aria-labelledby="variable-width-content"></a></span></h3> <p>Use <code class="text-nowrap" translate="no">{breakpoint}=&quot;auto&quot;</code> props to size columns based on the natural width of their content.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;justify-content-md-center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;auto&quot;</span>&gt;</span>Variable width content<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>1 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;auto&quot;</span>&gt;</span>Variable width content<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">col</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>3 of 3<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-variable-width.vue --&gt;</span></pre></div><h2 id="responsive-classes" class="bv-no-focus-ring"><span class="bd-content-title">Responsive classes<a class="anchorjs-link" href="#responsive-classes" aria-labelledby="responsive-classes"></a></span></h2> <p>Bootstrap&#39;s grid includes five tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, or extra large devices however you see fit.</p> <h3 id="all-breakpoints" class="bv-no-focus-ring"><span class="bd-content-title">All breakpoints<a class="anchorjs-link" href="#all-breakpoints" aria-labelledby="all-breakpoints"></a></span></h3> <p>For grids that are the same from the smallest of devices to the largest, use the <code class="text-nowrap" translate="no">col</code> and <code class="text-nowrap" translate="no">cols=&quot;*&quot;</code> props. Specify a number of <code class="text-nowrap" translate="no">cols</code> when you need a particularly sized column; otherwise, feel free to stick to <code class="text-nowrap" translate="no">col</code> (which is applied automatically if no <code class="text-nowrap" translate="no">cols</code> are specified).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>col<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>col<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>col<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>col<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>col-8<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>col-4<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-size-all-breakpoints.vue --&gt;</span></pre></div><h3 id="stacked-to-horizontal" class="bv-no-focus-ring"><span class="bd-content-title">Stacked to horizontal<a class="anchorjs-link" href="#stacked-to-horizontal" aria-labelledby="stacked-to-horizontal"></a></span></h3> <p>Using a single set of <code class="text-nowrap" translate="no">sm=&quot;*&quot;</code> or <code class="text-nowrap" translate="no">sm</code> (boolean for equal width @sm) props, you can create a basic grid system that starts out stacked on extra small devices before becoming horizontal on desktop (medium) devices.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>col-sm-8<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>col-sm-4<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>&gt;</span>col-sm<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>&gt;</span>col-sm<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>&gt;</span>col-sm<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-horizontal-stacked.vue --&gt;</span></pre></div><h3 id="mix-and-match" class="bv-no-focus-ring"><span class="bd-content-title">Mix and match<a class="anchorjs-link" href="#mix-and-match" aria-labelledby="mix-and-match"></a></span></h3> <p>Don&#39;t want your columns to simply stack in some grid tiers? Use a combination of different props for each tier as needed. See the example below for a better idea of how it all works.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-comment">&lt;!-- Stack the columns on mobile by making one full-width and the other half-width --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;8&quot;</span>&gt;</span>cols=&quot;12&quot; md=&quot;8&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>cols=&quot;6&quot; md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>cols=&quot;6&quot; md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>cols=&quot;6&quot; md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>cols=&quot;6&quot; md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-comment">&lt;!-- Columns are always 50% wide, on mobile and desktop --&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>cols=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>cols=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-mix-and-match.vue --&gt;</span></pre></div><h2 id="alignment" class="bv-no-focus-ring"><span class="bd-content-title">Alignment<a class="anchorjs-link" href="#alignment" aria-labelledby="alignment"></a></span></h2> <p>Use flexbox alignment utilities to vertically and horizontally align columns.</p> <p><strong>Note:</strong> Internet Explorer 11 does not support vertical alignment of flex items when the flex container has a <code class="text-nowrap" translate="no">min-height</code> as shown below. <a href="https://github.com/philipwalton/flexbugs#flexbug-3" target="_blank" rel="noopener">See Flexbugs #3 for more details</a>.</p> <h3 id="vertical-alignment" class="bv-no-focus-ring"><span class="bd-content-title">Vertical alignment<a class="anchorjs-link" href="#vertical-alignment" aria-labelledby="vertical-alignment"></a></span></h3> <p>For vertical alignment of all grid cells in a row, use the <code class="text-nowrap" translate="no">align-v</code> prop on <code class="text-nowrap" translate="no">&lt;b-row&gt;</code>. Possible values are <code class="text-nowrap" translate="no">&#39;start&#39;</code>, <code class="text-nowrap" translate="no">&#39;center&#39;</code>, <code class="text-nowrap" translate="no">&#39;end&#39;</code>, <code class="text-nowrap" translate="no">&#39;baseline&#39;</code>, and <code class="text-nowrap" translate="no">&#39;stretch&#39;</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row bv-example-row-flex-cols&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-v</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-v</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-v</span>=<span class="hljs-string">&quot;end&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-v</span>=<span class="hljs-string">&quot;baseline&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 0.75rem;&quot;</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 1.25rem;&quot;</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-v</span>=<span class="hljs-string">&quot;stretch&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-vertical-alignment.vue --&gt;</span></pre></div><p>For individual grid cell vertical alignment, use the <code class="text-nowrap" translate="no">align-self</code> prop on <code class="text-nowrap" translate="no">&lt;b-col&gt;</code>. Possible values are <code class="text-nowrap" translate="no">&#39;start&#39;</code>, <code class="text-nowrap" translate="no">&#39;center&#39;</code>, <code class="text-nowrap" translate="no">&#39;end&#39;</code>, <code class="text-nowrap" translate="no">&#39;baseline&#39;</code>, and <code class="text-nowrap" translate="no">&#39;stretch&#39;</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row bv-example-row-flex-cols&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">align-self</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">align-self</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">align-self</span>=<span class="hljs-string">&quot;end&quot;</span>&gt;</span>One of three columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">align-self</span>=<span class="hljs-string">&quot;baseline&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">align-self</span>=<span class="hljs-string">&quot;stretch&quot;</span>&gt;</span>One of two  columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-align-self.vue --&gt;</span></pre></div><h3 id="horizontal-alignment" class="bv-no-focus-ring"><span class="bd-content-title">Horizontal alignment<a class="anchorjs-link" href="#horizontal-alignment" aria-labelledby="horizontal-alignment"></a></span></h3> <p>To horizontally align grid cells within a row, use the <code class="text-nowrap" translate="no">align-h</code> prop on <code class="text-nowrap" translate="no">&lt;b-row&gt;</code>. Possible values are: <code class="text-nowrap" translate="no">&#39;start&#39;</code>, <code class="text-nowrap" translate="no">&#39;center&#39;</code>, <code class="text-nowrap" translate="no">&#39;end&#39;</code>, <code class="text-nowrap" translate="no">&#39;around&#39;</code>, and <code class="text-nowrap" translate="no">&#39;between&#39;</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-h</span>=<span class="hljs-string">&quot;start&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-h</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-h</span>=<span class="hljs-string">&quot;end&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-h</span>=<span class="hljs-string">&quot;around&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">align-h</span>=<span class="hljs-string">&quot;between&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>One of two columns<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-horizontal-alignment.vue --&gt;</span></pre></div><h2 id="reordering" class="bv-no-focus-ring"><span class="bd-content-title">Reordering<a class="anchorjs-link" href="#reordering" aria-labelledby="reordering"></a></span></h2> <h3 id="ordering-columns" class="bv-no-focus-ring"><span class="bd-content-title">Ordering columns<a class="anchorjs-link" href="#ordering-columns" aria-labelledby="ordering-columns"></a></span></h3> <p>Use <code class="text-nowrap" translate="no">order-*</code> props for controlling the visual order of your content. These props are responsive, so you can set the order by breakpoint (e.g., <code class="text-nowrap" translate="no">order=&quot;1&quot; order-md=&quot;2&quot;</code>). Includes support for 1 through 12 across all five grid tiers. <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> defaults to an order value of <code class="text-nowrap" translate="no">0</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>First in DOM, no order applied<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>Second in DOM, with a larger order<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Third in DOM, with an order of 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>First in DOM, with order of 6<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">order</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Second in DOM, with an order of 1<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Third in DOM, no order applied<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-order.vue --&gt;</span></pre></div><p>Ordering is controlled by flexbox&#39;s CSS style <code class="text-nowrap" translate="no">order</code>.</p> <h3 id="offsetting-columns" class="bv-no-focus-ring"><span class="bd-content-title">Offsetting columns<a class="anchorjs-link" href="#offsetting-columns" aria-labelledby="offsetting-columns"></a></span></h3> <p>You can offset grid columns in two ways: our responsive <code class="text-nowrap" translate="no">offset-*</code> props or the <a href="/docs/reference/spacing-classes" class="font-weight-bold">margin</a> utility classes. Grid <code class="text-nowrap" translate="no">offset-*</code> props are sized to match columns while margins utility classes are more useful for quick layouts where the width of the offset is variable.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>md=&quot;4&quot; offset-md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>md=&quot;3&quot; offset-md=&quot;3&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>md=&quot;3&quot; offset-md=&quot;3&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>md=&quot;6&quot; offset-md=&quot;3&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-offset.vue --&gt;</span></pre></div><p>In addition to column clearing at responsive breakpoints, you may need to reset offsets by setting the offset to <code class="text-nowrap" translate="no">0</code> at a larger breakpoint:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>sm=&quot;5&quot; md=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">offset-sm</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>sm=&quot;5&quot; offset-sm=&quot;2&quot; md=&quot;6&quot; offset-md=&quot;0&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>sm=&quot;6&quot; md=&quot;5&quot; lg=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;5&quot;</span> <span class="hljs-attr">offset-md</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">lg</span>=<span class="hljs-string">&quot;6&quot;</span> <span class="hljs-attr">offset-lg</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span>sm=&quot;6&quot; md=&quot;5&quot; offset-md=&quot;2&quot; col-lg=&quot;6&quot; offset-lg=&quot;0&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-offset-reset.vue --&gt;</span></pre></div><h3 id="margin-utilities-on-columns" class="bv-no-focus-ring"><span class="bd-content-title">Margin utilities on columns<a class="anchorjs-link" href="#margin-utilities-on-columns" aria-labelledby="margin-utilities-on-columns"></a></span></h3> <p>With the move to flexbox in Bootstrap v4, you can use <a href="/docs/reference/spacing-classes" class="font-weight-bold">margin and spacing</a> utility classes like <code class="text-nowrap" translate="no">.mr-auto</code> to force sibling columns away from one another.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-light text-center&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-3 bg-info&quot;</span>&gt;</span>md=&quot;4&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-auto p-3 bg-info&quot;</span>&gt;</span>md=&quot;4&quot; .ml-auto<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-md-auto p-3 bg-info&quot;</span>&gt;</span>md=&quot;3&quot; .ml-md-auto<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ml-md-auto p-3 bg-info&quot;</span>&gt;</span>md=&quot;3&quot; .ml-md-auto<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mr-auto p-3 bg-info&quot;</span>&gt;</span>cols=&quot;auto&quot; .mr-auto<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;auto&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-3 bg-info&quot;</span>&gt;</span>cols=&quot;auto&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-margins.vue --&gt;</span></pre></div><h2 id="nesting-grids" class="bv-no-focus-ring"><span class="bd-content-title">Nesting grids<a class="anchorjs-link" href="#nesting-grids" aria-labelledby="nesting-grids"></a></span></h2> <p>To nest your content with the default grid, add a new <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> and set of <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> components within an existing <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> component. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;9&quot;</span>&gt;</span>\n      Level 1: sm=&quot;9&quot;\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;8&quot;</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>Level 2: cols=&quot;8&quot; sm=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>Level 2: cols=&quot;4&quot; sm=&quot;6&quot;<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-nesting.vue --&gt;</span></pre></div><h2 id="row-columns" class="bv-no-focus-ring"><span class="bd-content-title">Row columns<a class="anchorjs-link" href="#row-columns" aria-labelledby="row-columns"></a></span></h2> <p><span class="badge badge-info small">Requires Bootstrap v4.4+ CSS</span></p> <p>Use the responsive <code class="text-nowrap" translate="no">cols-*</code> props in <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> to quickly set the number of columns that best render your content and layout. Whereas normal column widths are apply to the individual <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> columns (e.g., <code class="text-nowrap" translate="no">&lt;b-col md=&quot;4&quot;&gt;</code>), the row columns <code class="text-nowrap" translate="no">col-*</code> props are set on the parent <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> as a shortcut.</p> <p>Use these row columns to quickly create basic grid layouts or to control your card layouts. The default maximum number of row columns in Bootstrap v4.4 is <code class="text-nowrap" translate="no">6</code> (unlike the regular columns which have a default maximum of <code class="text-nowrap" translate="no">12</code> columns)</p> <p>The value specified in the <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> prop(s) is the number of columns to create per row (whereas the props on <code class="text-nowrap" translate="no">&lt;b-col&gt;</code> refer to the number of columns to occupy).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row mb-3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row mb-3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row mb-3&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;4&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-row-cols-introduction.vue --&gt;</span></pre></div><p>You can control the number of columns at each breakpoint level via the following <code class="text-nowrap" translate="no">&lt;b-row&gt;</code> props:</p> <ul> <li><code class="text-nowrap" translate="no">cols</code> for <code class="text-nowrap" translate="no">xs</code> and up screens</li> <li><code class="text-nowrap" translate="no">cols-sm</code> for <code class="text-nowrap" translate="no">sm</code> and up screens</li> <li><code class="text-nowrap" translate="no">cols-md</code> for <code class="text-nowrap" translate="no">md</code> and up screens</li> <li><code class="text-nowrap" translate="no">cols-lg</code> for <code class="text-nowrap" translate="no">lg</code> and up screens</li> <li><code class="text-nowrap" translate="no">cols-xl</code> for <code class="text-nowrap" translate="no">xl</code> and up screens</li> </ul> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bv-example-row&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">cols-sm</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">cols-md</span>=<span class="hljs-string">&quot;4&quot;</span> <span class="hljs-attr">cols-lg</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>Column<span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-grid-row-cols-breakpoints.vue --&gt;</span></pre></div><h2 id="utilities-for-layout" class="bv-no-focus-ring"><span class="bd-content-title">Utilities for layout<a class="anchorjs-link" href="#utilities-for-layout" aria-labelledby="utilities-for-layout"></a></span></h2> <p>For faster mobile-friendly and responsive development, Bootstrap includes dozens of <a href="/docs/reference/utility-classes" class="font-weight-bold">utility classes</a> for showing, hiding, aligning, and spacing content.</p> <h3 id="changing-display" class="bv-no-focus-ring"><span class="bd-content-title">Changing <code class="text-nowrap" translate="no">display</code><a class="anchorjs-link" href="#changing-display" aria-labelledby="changing-display"></a></span></h3> <p>Use Bootstrap&#39;s <a href="/docs/reference/utility-classes" class="font-weight-bold">display utilities</a> for responsively toggling common values of the <code class="text-nowrap" translate="no">display</code> property. Mix it with the grid system, content, or components to show or hide them across specific viewports.</p> <h3 id="flexbox-options" class="bv-no-focus-ring"><span class="bd-content-title">Flexbox options<a class="anchorjs-link" href="#flexbox-options" aria-labelledby="flexbox-options"></a></span></h3> <p>Bootstrap 4 is built with flexbox, but not every element’s <code class="text-nowrap" translate="no">display</code> has been changed to <code class="text-nowrap" translate="no">display: flex</code> as this would add many unnecessary overrides and unexpectedly change key browser behaviors. Most of the components are built with flexbox enabled.</p> <p>Should you need to add <code class="text-nowrap" translate="no">display: flex</code> to an element, do so with <code class="text-nowrap" translate="no">.d-flex</code> or one of the responsive variants (e.g., <code class="text-nowrap" translate="no">.d-sm-flex</code>). You’ll need this class or <code class="text-nowrap" translate="no">display</code> value to allow the use of the extra <a href="/docs/reference/utility-classes" class="font-weight-bold">flexbox utilities</a> for sizing, alignment, spacing, and more.</p> <h3 id="margin-and-padding" class="bv-no-focus-ring"><span class="bd-content-title">Margin and padding<a class="anchorjs-link" href="#margin-and-padding" aria-labelledby="margin-and-padding"></a></span></h3> <p>Use the <code class="text-nowrap" translate="no">margin</code> and <code class="text-nowrap" translate="no">padding</code> <a href="/docs/reference/utility-classes" class="font-weight-bold">spacing utilities</a> to control how elements and components are spaced and sized. Bootstrap 4 includes a five-level scale for spacing utilities, based on a <code class="text-nowrap" translate="no">1rem</code> value default SASS <code class="text-nowrap" translate="no">$spacer</code> variable. Choose values for all viewports (e.g., <code class="text-nowrap" translate="no">.mr-3</code> for <code class="text-nowrap" translate="no">margin-right: 1rem</code>), or pick responsive variants to target specific viewports (e.g., <code class="text-nowrap" translate="no">.mr-md-3</code> for <code class="text-nowrap" translate="no">margin-right: 1rem</code> starting at the <code class="text-nowrap" translate="no">md</code> breakpoint).</p> <h3 id="toggle-visibility" class="bv-no-focus-ring"><span class="bd-content-title">Toggle <code class="text-nowrap" translate="no">visibility</code><a class="anchorjs-link" href="#toggle-visibility" aria-labelledby="toggle-visibility"></a></span></h3> <p>When toggling <code class="text-nowrap" translate="no">display</code> isn’t needed, you can toggle the <code class="text-nowrap" translate="no">visibility</code> of an element with the <a href="/docs/reference/utility-classes" class="font-weight-bold">visibility utility classes</a>. Invisible elements will still affect the layout of the page, but are visually hidden from visitors.</p>'}}}]);