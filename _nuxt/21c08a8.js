(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{581:function(n,l){n.exports={baseTOC:{top:"#изображение",title:"Изображение",toc:[{href:"#разрешение-изображения-src",label:"Разрешение изображения src"},{href:"#стилизация-изображений",label:"Стилизация изображений",toc:[{href:"#адаптивные-изображения",label:"Адаптивные изображения"},{href:"#эскизы-изображений",label:"Эскизы изображений"},{href:"#закругленные-углы",label:"Закругленные углы"},{href:"#выравнивание-изображений",label:"Выравнивание изображений"}]},{href:"#пустые-или-сплошные-изображения",label:"Пустые (или сплошные) изображения"},{href:"#поддержка-srcset",label:"Поддержка srcset"},{href:"#отложенная-загрузка-изображений",label:"Отложенная загрузка изображений",toc:[{href:"#использование",label:"Использование"},{href:"#принудительно-показать-отложено-загруженное-изображение",label:"Принудительно показать отложено загруженное изображение"},{href:"#поддержка-отложенной-загрузки-srcset",label:"Поддержка отложенной загрузки srcset"}]}]},titleLead:'<h1 id="изображение" class="bv-no-focus-ring"><span class="bd-content-title">Изображение</span></h1> <p class="bd-lead">Документация и примеры для выбора изображений (через компонент <code class="text-nowrap" translate="no">&lt;b-img&gt;</code>) в адаптивное поведение (чтобы они никогда не становились больше, чем их родительские элементы), при необходимости добавляя к ним облегченные стили - все через свойства.</p>',body:'<p>Компоненты изображений BootstrapVue поддерживают округленные изображения, стили миниатюр, выравнивание и даже возможность создавать пустые изображения с дополнительным сплошным цветом фона. Поддержка отложенных изображений доступна через дополнительный компонент <code class="text-nowrap" translate="no">&lt;b-img-lazy&gt;</code>.</p> <h2 id="разрешение-изображения-src" class="bv-no-focus-ring"><span class="bd-content-title">Разрешение изображения src<a class="anchorjs-link" href="#разрешение-изображения-src" aria-labelledby="разрешение-изображения-src"></a></span></h2> <p>Свойство <code class="text-nowrap" translate="no">src</code> (и свойство <code class="text-nowrap" translate="no">blank-src</code> из <code class="text-nowrap" translate="no">&lt;b-img-lazy&gt;</code>), из коробки работает только с абсолютными или полностью определенными URL-адресами доменного имени. Если вы используете ресурсы проекта в качестве источников изображений, обратитесь к <a href="/docs/reference/images" class="font-weight-bold">Component img src resolving</a> для настройки <code class="text-nowrap" translate="no">vue-loader</code>, чтобы понять свойства пользовательских компонентов, которые определяют источники изображений.</p> <h2 id="стилизация-изображений" class="bv-no-focus-ring"><span class="bd-content-title">Стилизация изображений<a class="anchorjs-link" href="#стилизация-изображений" aria-labelledby="стилизация-изображений"></a></span></h2> <p>Для стилизации визуализированного элемента изображения доступно несколько свойств. В следующих подразделах рассматриваются различные варианты.</p> <h3 id="адаптивные-изображения" class="bv-no-focus-ring"><span class="bd-content-title">Адаптивные изображения<a class="anchorjs-link" href="#адаптивные-изображения" aria-labelledby="адаптивные-изображения"></a></span></h3> <p>Изображения в BootstrapVue можно сделать адаптивными с помощью свойства <code class="text-nowrap" translate="no">fluid</code> (которое устанавливает <code class="text-nowrap" translate="no">max-width: 100%; height: auto;</code> через классы CSS), чтобы оно масштабировалось вместе с родительским элементом - до максимальной собственной ширины изображение.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/1024/400/?image=41&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Адаптивное изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-fluid.vue --&gt;</span></pre></div><p>Чтобы создать плавное изображение, которое будет расти до ширины своего контейнера, используйте свойство <code class="text-nowrap" translate="no">fluid-grow</code>. Обратите внимание, что это может вызвать размытие небольших растровых изображений.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h5</span>&gt;</span>Маленькое изображение с <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>fluid<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/300/150/?image=41&quot;</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение Fluid&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">h5</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-3&quot;</span>&gt;</span>Маленькое изображение с <span class="hljs-tag">&lt;<span class="hljs-name">code</span>&gt;</span>fluid-grow<span class="hljs-tag">&lt;/<span class="hljs-name">code</span>&gt;</span>:<span class="hljs-tag">&lt;/<span class="hljs-name">h5</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/300/150/?image=41&quot;</span> <span class="hljs-attr">fluid-grow</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение Fluid-grow&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-fluid-grow.vue --&gt;</span></pre></div><p>Используйте свойство <code class="text-nowrap" translate="no">block</code>, чтобы изображение отображалось как блочный элемент, а не как встроенный в браузере элемент встроенного блока по умолчанию.</p> <p><strong>Примечание:</strong> <em>В Internet Explorer 10, изображения SVG с <code class="text-nowrap" translate="no">fluid</code> имеют непропорционально большой размер. Чтобы исправить это, добавьте стиль <code class="text-nowrap" translate="no">width: 100% \\9;</code> там, где это необходимо. Это исправление неправильно изменяет размер других форматов изображений, поэтому Bootstrap v4 не применяет его автоматически.</em></p> <h3 id="эскизы-изображений" class="bv-no-focus-ring"><span class="bd-content-title">Эскизы изображений<a class="anchorjs-link" href="#эскизы-изображений" aria-labelledby="эскизы-изображений"></a></span></h3> <p>Вы можете использовать свойство <code class="text-nowrap" translate="no">thumbnail</code>, чтобы придать изображению округлую светлую границу.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;p-4 bg-dark&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">thumbnail</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/250/250/?image=54&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">thumbnail</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/250/250/?image=58&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">thumbnail</span> <span class="hljs-attr">fluid</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/250/250/?image=59&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-thumbnail.vue --&gt;</span></pre></div><h3 id="закругленные-углы" class="bv-no-focus-ring"><span class="bd-content-title">Закругленные углы<a class="anchorjs-link" href="#закругленные-углы" aria-labelledby="закругленные-углы"></a></span></h3> <p>Вы можете контролировать, какие углы будут скруглены, установив для закругленной опоры одно из следующих значений:</p> <ul> <li><code class="text-nowrap" translate="no">true</code> (или свойство присутствует без значения): закруглить все углы</li> <li><code class="text-nowrap" translate="no">false</code> (или свойство отсутствует): без явного закругления или углов (по умолчанию)</li> <li><code class="text-nowrap" translate="no">&#39;top&#39;</code>: закруглить верхние углы</li> <li><code class="text-nowrap" translate="no">&#39;right&#39;</code>: закруглить правые углы</li> <li><code class="text-nowrap" translate="no">&#39;bottom&#39;</code>: закруглить нижние углы</li> <li><code class="text-nowrap" translate="no">&#39;left&#39;</code>: закруглить левые углы</li> <li><code class="text-nowrap" translate="no">&#39;circle&#39;</code>: образует круг (если изображение квадратное) или овальную (если не квадратную) границу</li> <li><code class="text-nowrap" translate="no">&#39;0&#39;</code>: явно отключить скругление углов</li> </ul> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Закругленное изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;top&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Закругленное сверху изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;right&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Закругленное справа изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;bottom&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Закругленное снизу изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;left&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Закругленное слева изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;circle&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Круглое изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">rounded</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Не округленное изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">mainProps</span>: { <span class="hljs-attr">blank</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">blankColor</span>: <span class="hljs-string">&#x27;#777&#x27;</span>, <span class="hljs-attr">width</span>: <span class="hljs-number">75</span>, <span class="hljs-attr">height</span>: <span class="hljs-number">75</span>, <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;m1&#x27;</span> }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-rounded.vue --&gt;</span></pre></div><h3 id="выравнивание-изображений" class="bv-no-focus-ring"><span class="bd-content-title">Выравнивание изображений<a class="anchorjs-link" href="#выравнивание-изображений" aria-labelledby="выравнивание-изображений"></a></span></h3> <p>Выровняйте изображения с помощью логических свойств <code class="text-nowrap" translate="no">left</code> (смещается влево) <code class="text-nowrap" translate="no">right</code>(смещается вправо) и <code class="text-nowrap" translate="no">center</code> (автоматически влево + правые поля). Вы также можете центрировать изображения, помещая их в контейнер с классом <code class="text-nowrap" translate="no">text-center</code>.</p> <p><strong>С выравниванием по левому и правому краю (с плавающей точкой):</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;clearfix&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">left</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/125/125/?image=58&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение слева&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">right</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/125/125/?image=58&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение справа&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-left-right.vue --&gt;</span></pre></div><p><strong>По центру (блочное):</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">center</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://picsum.photos/125/125/?image=58&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение по центру&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-center.vue --&gt;</span></pre></div><p>Примечание: <code class="text-nowrap" translate="no">left</code> имеет приоритет перед <code class="text-nowrap" translate="no">right</code>, которое имеет приоритет перед <code class="text-nowrap" translate="no">center</code>.</p> <h2 id="пустые-или-сплошные-изображения" class="bv-no-focus-ring"><span class="bd-content-title">Пустые (или сплошные) изображения<a class="anchorjs-link" href="#пустые-или-сплошные-изображения" aria-labelledby="пустые-или-сплошные-изображения"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-img&gt;</code> обеспечивает встроенную поддержку для создания пустых изображений (по умолчанию прозрачных) любой ширины и высоты, путем установки свойства <code class="text-nowrap" translate="no">blank</code> и указания значений <code class="text-nowrap" translate="no">width</code> и <code class="text-nowrap" translate="no">height</code> (в пикселях). Вы можете применить любой из других свойств <code class="text-nowrap" translate="no">&lt;b-img&gt;</code>, чтобы изменить стиль/поведение сгенерированного изображения.</p> <p>Используйте свойство <code class="text-nowrap" translate="no">blank-color</code>, чтобы установить цвет пустого изображения. Свойство <code class="text-nowrap" translate="no">blank-color</code> может принимать любое значение цвета CSS:</p> <ul> <li>Именованные цвета - например, <code class="text-nowrap" translate="no">orange</code> или <code class="text-nowrap" translate="no">blue</code></li> <li>Шестнадцатеричные цвета - например, <code class="text-nowrap" translate="no">#FF9E2C</code></li> <li>Цвета RGB и RGBa - например, <code class="text-nowrap" translate="no">rgb(255, 158, 44)</code> и <code class="text-nowrap" translate="no">rgba(255, 158, 44, .5)</code></li> <li>Цвета HSL и HSLa - например, <code class="text-nowrap" translate="no">hsl(32, 100%, 59%)</code> и <code class="text-nowrap" translate="no">hsla(32, 100%, 59%, .5)</code></li> </ul> <p>По умолчанию <code class="text-nowrap" translate="no">blank-color</code> является <code class="text-nowrap" translate="no">transparent</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Прозрачное изображение&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;#777&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Сокращенное цветное изображение HEX (#777)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;red&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Именованное цветное изображение (red)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;black&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Именованное цветное изображение (black)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;#338833&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Цветное изображение HEX&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;rgba(128, 255, 255, 0.5)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Цветное изображение RGBa&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">blank-color</span>=<span class="hljs-string">&quot;#88f&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Сокращенный цвет HEX (#88f)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">mainProps</span>: { <span class="hljs-attr">blank</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">width</span>: <span class="hljs-number">75</span>, <span class="hljs-attr">height</span>: <span class="hljs-number">75</span>, <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;m1&#x27;</span> }\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-blank.vue --&gt;</span></pre></div><p><strong>Примечания:</strong></p> <ul> <li>В режиме пустого изображения, если установлена только одна из ширины или высоты, для изображения будет установлено одинаковое значение для ширины и высоты.</li> <li>В режиме пустого изображения, если ширина и высота не заданы, ширина и высота будут внутренне установлены на 1.</li> <li>Свойство <code class="text-nowrap" translate="no">blank</code> имеет приоритет перед свойством <code class="text-nowrap" translate="no">src</code>. Если вы установите оба параметра, а затем установите <code class="text-nowrap" translate="no">blank</code> в значение <code class="text-nowrap" translate="no">false</code>, тогда будет отображаться изображение, указанное в <code class="text-nowrap" translate="no">src</code>.</li> <li>Пустые изображения отображаются с использованием URL-адресов данных изображения SVG.</li> <li>Свойства <code class="text-nowrap" translate="no">width</code> и <code class="text-nowrap" translate="no">height</code> также будут применять атрибуты <code class="text-nowrap" translate="no">width</code> и <code class="text-nowrap" translate="no">height</code> к отображаемому тегу <code class="text-nowrap" translate="no">&lt;img&gt;</code>, даже если <code class="text-nowrap" translate="no">blank</code> не установлен.</li> </ul> <h2 id="поддержка-srcset" class="bv-no-focus-ring"><span class="bd-content-title">Поддержка <code class="text-nowrap" translate="no">srcset</code><a class="anchorjs-link" href="#поддержка-srcset" aria-labelledby="поддержка-srcset"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-img&gt;</code> поддерживает <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset" target="_blank" rel="noopener">атрибуты <code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code></a> на изображениях. Свойства принимают либо строковое значение, либо массив строк (массив строк будет преобразован в одну строку, разделенную запятыми).</p> <p>Подробнее об использовании этих атрибутов смотрите в руководстве <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images" target="_blank" rel="noopener">Адаптивные изображения MDN</a>.</p> <p><strong>Примечания:</strong></p> <ul> <li>Если задано свойство <code class="text-nowrap" translate="no">blank</code>, то свойства <code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code> игнорируются</li> <li>IE 11 не поддерживает <code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code>, поэтому убедитесь, что у вас есть значение для свойства <code class="text-nowrap" translate="no">src</code></li> <li>Vue-loader не поддерживает относительные URL-адреса проекта (URL-адреса ресурсов) в атрибуте <code class="text-nowrap" translate="no">srcset</code>. Вместо этого используйте <code class="text-nowrap" translate="no">require(...)</code> для разрешения отдельных путей URL. Будьте осторожны при создании строки URI данных, которая длиннее, чем поддерживается максимальной длиной значения атрибута браузера. Если в вашей конфигурации веб-пакета есть ограничение для <code class="text-nowrap" translate="no">url-loader</code>, и вы хотите запретить встроенные URL-адреса данных, вам, возможно, придется перезаписать ограничения загрузчика: <code class="text-nowrap" translate="no">require(&#39;!!url-loader?limit=0!./assets/photo.jpg&#39;)</code></li> <li>Поддержка <code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code> была добавлена в выпуске <code class="text-nowrap" translate="no">2.1.0</code></li> </ul> <h2 id="отложенная-загрузка-изображений" class="bv-no-focus-ring"><span class="bd-content-title">Отложенная загрузка изображений<a class="anchorjs-link" href="#отложенная-загрузка-изображений" aria-labelledby="отложенная-загрузка-изображений"></a></span></h2> <p class="bd-lead">Используйте наш дополнительный компонент изображения <code class="text-nowrap" translate="no">&lt;b-img-lazy&gt;</code> (основанный на <code class="text-nowrap" translate="no">&lt;b-img&gt;</code>) для отложенной загрузки изображений, когда они прокручиваются в область просмотра (или в пределах пикселей <code class="text-nowrap" translate="no">offset</code> в области просмотра).</p> <p>При отложенной загрузке изображений используется <a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">IntersectionObserver</code></a>, если это поддерживается браузером (или через полифил), чтобы определить, когда изображение должно быть показано. Если поддержка <code class="text-nowrap" translate="no">IntersectionObserver</code> <em>не обнаружена</em>, то изображение будет <em>всегда</em> отображаться.</p> <h3 id="использование" class="bv-no-focus-ring"><span class="bd-content-title">Использование<a class="anchorjs-link" href="#использование" aria-labelledby="использование"></a></span></h3> <p>Установите свойство <code class="text-nowrap" translate="no">src</code> на URL-адрес изображения, которое вы хотите лениво загружать, и либо укажите URL-адрес изображения-заполнителя через свойство <code class="text-nowrap" translate="no">blank-src</code>, либо создайте для вас пустое изображение-заполнитель, оставив <code class="text-nowrap" translate="no">blank-src</code> как <code class="text-nowrap" translate="no">null</code>.</p> <p>Укажите ширину и высоту заполнителя с помощью свойств <code class="text-nowrap" translate="no">blank-width</code> и <code class="text-nowrap" translate="no">blank-height</code>. Если эти свойства не установлены, они вернутся к свойствам <code class="text-nowrap" translate="no">width</code> и <code class="text-nowrap" translate="no">height</code> (которые применяются к изображению, указанному через <code class="text-nowrap" translate="no">src</code>).</p> <p>Управляйте цветом сгенерированного пустого изображения, установив свойство <code class="text-nowrap" translate="no">blank-color</code>.</p> <p>Изображения-заполнители (явно предоставленные или генерируемые динамически) должны иметь те же значения ширины и высоты или, по крайней мере, такое же соотношение сторон, что и изображение <code class="text-nowrap" translate="no">src</code>.</p> <p>Не стесняйтесь использовать свойства <code class="text-nowrap" translate="no">fluid</code>, <code class="text-nowrap" translate="no">fluid-grow</code>, <code class="text-nowrap" translate="no">thumbnail</code> и <code class="text-nowrap" translate="no">rounded</code> для <code class="text-nowrap" translate="no">&lt;b-img&gt;</code>.</p> <p>Свойство <code class="text-nowrap" translate="no">offset</code> prop specifies the number of pixels that an image needs to be near to the viewport to trigger it to be shown. The default value is <code class="text-nowrap" translate="no">360</code>.</p> <p>Свойство <code class="text-nowrap" translate="no">throttle</code> контролирует, как долго (в мс) после события <code class="text-nowrap" translate="no">scroll</code> (или <code class="text-nowrap" translate="no">resize</code>, или <code class="text-nowrap" translate="no">orientationchange</code>, или <code class="text-nowrap" translate="no">transitionend</code>) происходит до проверки, попало ли изображение в поле зрения (или в пределах просмотра <code class="text-nowrap" translate="no">offset</code>). По умолчанию <code class="text-nowrap" translate="no">100</code> (ms). <code class="text-nowrap" translate="no">throttle</code> не действует, если обнаружена поддержка IntersectionObserver.</p> <p>Как только изображение появится в поле зрения и отобразится, прослушиватели событий и/или наблюдатель пересечения удаляются.</p> <p><strong>Пример использования:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(80)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(82)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(84)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(85)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(88)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(90)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(92)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 7&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-img-lazy</span> <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;mainProps&quot;</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;getImageUrl(94)&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;Изображение 8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-img-lazy</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">mainProps</span>: {\n          <span class="hljs-attr">center</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">fluidGrow</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">blank</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">blankColor</span>: <span class="hljs-string">&#x27;#bbb&#x27;</span>,\n          <span class="hljs-attr">width</span>: <span class="hljs-number">600</span>,\n          <span class="hljs-attr">height</span>: <span class="hljs-number">400</span>,\n          <span class="hljs-attr">class</span>: <span class="hljs-string">&#x27;my-5&#x27;</span>\n        }\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">getImageUrl</span>(<span class="hljs-params">imageId</span>)</span> {\n        <span class="hljs-keyword">const</span> { width, height } = <span class="hljs-built_in">this</span>.mainProps\n        <span class="hljs-keyword">return</span> <span class="hljs-string">`https://picsum.photos/<span class="hljs-subst">${width}</span>/<span class="hljs-subst">${height}</span>/?image=<span class="hljs-subst">${imageId}</span>`</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-img-lazy.vue --&gt;</span></pre></div><h3 id="принудительно-показать-отложено-загруженное-изображение" class="bv-no-focus-ring"><span class="bd-content-title">Принудительно показать отложено загруженное изображение<a class="anchorjs-link" href="#принудительно-показать-отложено-загруженное-изображение" aria-labelledby="принудительно-показать-отложено-загруженное-изображение"></a></span></h3> <p>Чтобы принудительно показать финальное изображение, установите для свойства <code class="text-nowrap" translate="no">show</code> значение <code class="text-nowrap" translate="no">true</code>. Свойство <code class="text-nowrap" translate="no">show</code> поддерживает модификатор Vue <code class="text-nowrap" translate="no">.sync</code> и будет обновлена до <code class="text-nowrap" translate="no">true</code>, когда будет показано окончательное изображение.</p> <h3 id="поддержка-отложенной-загрузки-srcset" class="bv-no-focus-ring"><span class="bd-content-title">Поддержка отложенной загрузки <code class="text-nowrap" translate="no">srcset</code><a class="anchorjs-link" href="#поддержка-отложенной-загрузки-srcset" aria-labelledby="поддержка-отложенной-загрузки-srcset"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-img-lazy&gt;</code> поддерживает установку атрибутов <a href="#srcset-support" class="font-weight-bold"><code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code></a> для визуализированного элемента <code class="text-nowrap" translate="no">&lt;img&gt;</code>. Эти свойства будут применены к изображению только после того, как оно появится в поле зрения.</p> <p>Смотрите <a href="#srcset-support" class="font-weight-bold">поддержку <code class="text-nowrap" translate="no">srcset</code></a> выше для подробностей и ограничений использования свойств.</p> <p>Поддержка <code class="text-nowrap" translate="no">srcset</code> и <code class="text-nowrap" translate="no">sizes</code> была добавлена в выпуске <code class="text-nowrap" translate="no">2.1.0</code>.</p>'}}}]);