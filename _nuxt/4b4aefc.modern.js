(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{463:function(n,t){n.exports={baseTOC:{top:"#form-timepicker",title:"Form Timepicker",toc:[{href:"#overview",label:"Overview"},{href:"#v-model-return-value",label:"v-model return value"},{href:"#disabled-and-readonly-states",label:"Disabled and readonly states"},{href:"#validation-states",label:"Validation states"},{href:"#styling",label:"Styling",toc:[{href:"#enabling-of-seconds-spinbutton",label:"Enabling of seconds spinbutton"},{href:"#control-sizing",label:"Control sizing"},{href:"#placeholder",label:"Placeholder"},{href:"#optional-controls",label:"Optional controls"},{href:"#dropdown-placement",label:"Dropdown placement"},{href:"#button-only-mode",label:"Button only mode"}]},{href:"#internationalization",label:"Internationalization",toc:[{href:"#understanding-the-hourcycle",label:"Understanding the hourCycle"},{href:"#forcing-12-or-24-hour-interface",label:"Forcing 12 or 24 hour interface"}]},{href:"#accessibility",label:"Accessibility"},{href:"#implementation-notes",label:"Implementation notes"},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="form-timepicker" class="bv-no-focus-ring"><span class="bd-content-title">Form Timepicker</span></h1> <p class="bd-lead"><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> is a BootstrapVue custom time picker input form control, which provides full WAI-ARIA compliance and internationalization support.</p>',body:'<h2 id="overview" class="bv-no-focus-ring"><span class="bd-content-title">Overview<a class="anchorjs-link" href="#overview" aria-labelledby="overview"></a></span></h2> <p>As a form control wrapper component for the <a href="/docs/components/time" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code></a> component, it provides additional validation state presentation and a compact interface. Native HTML5 time inputs vary in presentation, accessibility, and in some instances are not supported by all browsers. <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> provides a consistent and accessible interface across all browser platforms and devices.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker.vue --&gt;</span></pre></div><h2 id="v-model-return-value" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">v-model</code> return value<a class="anchorjs-link" href="#v-model-return-value" aria-labelledby="v-model-return-value"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> always returns a string in the format of <code class="text-nowrap" translate="no">&#39;HH:mm:ss&#39;</code> which is the same format returned by native browser <code class="text-nowrap" translate="no">&lt;input type=&quot;time&quot;&gt;</code> controls. The value will be in the range of <code class="text-nowrap" translate="no">&#39;00:00:00&#39;</code> up to <code class="text-nowrap" translate="no">&#39;23:59:59&#39;</code> (24-hour clock using the <code class="text-nowrap" translate="no">&#39;h23&#39;</code> hour cycle syntax).</p> <p>If no time is selected, then <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> returns an empty string (<code class="text-nowrap" translate="no">&#39;&#39;</code>).</p> <h2 id="disabled-and-readonly-states" class="bv-no-focus-ring"><span class="bd-content-title">Disabled and readonly states<a class="anchorjs-link" href="#disabled-and-readonly-states" aria-labelledby="disabled-and-readonly-states"></a></span></h2> <p>Setting the <code class="text-nowrap" translate="no">disabled</code> prop will remove all interactivity of the <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> component.</p> <p>Setting the <code class="text-nowrap" translate="no">readonly</code> prop will disable selecting a time, but will keep the component interactive, allowing for tabbing between spinbuttons. The <code class="text-nowrap" translate="no">v-model</code> will not be updated in the readonly state.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Select time picker interactive state&quot;</span>\n      <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;{ ariaDescribedby }&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio-group</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;state&quot;</span>\n        <span class="hljs-attr">:aria-describedby</span>=<span class="hljs-string">&quot;ariaDescribedby&quot;</span>\n        <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      &gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;readonly&quot;</span>&gt;</span>Readonly<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-radio</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;normal&quot;</span>&gt;</span>Normal<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-radio-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;ex-disabled-readonly&quot;</span>\n      <span class="hljs-attr">:disabled</span>=<span class="hljs-string">&quot;disabled&quot;</span>\n      <span class="hljs-attr">:readonly</span>=<span class="hljs-string">&quot;readonly&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">state</span>: <span class="hljs-string">&#x27;disabled&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">computed</span>: {\n      <span class="hljs-function"><span class="hljs-title">disabled</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;disabled&#x27;</span>\n      },\n      <span class="hljs-function"><span class="hljs-title">readonly</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state === <span class="hljs-string">&#x27;readonly&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-disabled-readonly.vue --&gt;</span></pre></div><h2 id="validation-states" class="bv-no-focus-ring"><span class="bd-content-title">Validation states<a class="anchorjs-link" href="#validation-states" aria-labelledby="validation-states"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> supports invalid and valid styling via the boolean <code class="text-nowrap" translate="no">state</code> prop. Setting <code class="text-nowrap" translate="no">state</code> to boolean <code class="text-nowrap" translate="no">false</code> will style the input as invalid, while setting it to boolean <code class="text-nowrap" translate="no">true</code> will style it as valid. Setting state to <code class="text-nowrap" translate="no">null</code> will not show any validation state styling (the default).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-invalid&quot;</span>&gt;</span>Choose a time (invalid style)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-invalid&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;false&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-valid&quot;</span>&gt;</span>Choose a time (valid style)<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;datepicker-valid&quot;</span> <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-validation.vue --&gt;</span></pre></div><p>Note that native browser validation is not available with <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code>.</p> <h2 id="styling" class="bv-no-focus-ring"><span class="bd-content-title">Styling<a class="anchorjs-link" href="#styling" aria-labelledby="styling"></a></span></h2> <h3 id="enabling-of-seconds-spinbutton" class="bv-no-focus-ring"><span class="bd-content-title">Enabling of seconds spinbutton<a class="anchorjs-link" href="#enabling-of-seconds-spinbutton" aria-labelledby="enabling-of-seconds-spinbutton"></a></span></h3> <p>By default, the seconds spinbutton is not shown. To enable the section of seconds, set the <code class="text-nowrap" translate="no">show-seconds</code> prop to <code class="text-nowrap" translate="no">true</code> to enable the seconds selection spinbutton. When <code class="text-nowrap" translate="no">show-seconds</code> is false (or not provided), the returned value will always have the seconds portion of the time string set to <code class="text-nowrap" translate="no">00</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">show-seconds</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-show-seconds.vue --&gt;</span></pre></div><h3 id="control-sizing" class="bv-no-focus-ring"><span class="bd-content-title">Control sizing<a class="anchorjs-link" href="#control-sizing" aria-labelledby="control-sizing"></a></span></h3> <p>Fancy a smaller or larger <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> control? Set the <code class="text-nowrap" translate="no">size</code> prop to <code class="text-nowrap" translate="no">&#39;sm&#39;</code> for a smaller form control, or <code class="text-nowrap" translate="no">&#39;lg&#39;</code> for a larger form form control. Note this does not affect the size of the popup time selection dialog.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-sm&quot;</span>&gt;</span>Small time picker<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timepicker-sm&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-lg&quot;</span>&gt;</span>Large time picker<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timepicker-lg&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-control-size.vue --&gt;</span></pre></div><h3 id="placeholder" class="bv-no-focus-ring"><span class="bd-content-title">Placeholder<a class="anchorjs-link" href="#placeholder" aria-labelledby="placeholder"></a></span></h3> <p>Add custom placeholder text to the control, when no date is selected, via the <code class="text-nowrap" translate="no">placeholder</code> prop. If a placeholder is not provided, the value of the <code class="text-nowrap" translate="no">label-no-time-selected</code> prop is used.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-placeholder&quot;</span>&gt;</span>Time picker with placeholder<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timepicker-placeholder&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Choose a time&quot;</span> <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-placeholder.vue --&gt;</span></pre></div><h3 id="optional-controls" class="bv-no-focus-ring"><span class="bd-content-title">Optional controls<a class="anchorjs-link" href="#optional-controls" aria-labelledby="optional-controls"></a></span></h3> <p>Add optional control buttons to the bottom of the calendar popup via the props <code class="text-nowrap" translate="no">now-button</code> or <code class="text-nowrap" translate="no">reset-button</code>. The default close button can be removed via the <code class="text-nowrap" translate="no">no-close-button</code> prop.</p> <ul> <li>The now button selects the current time</li> <li>The reset button either clears the selected time, or sets the time to the value of the prop <code class="text-nowrap" translate="no">reset-value</code> (if provided)</li> <li>The close button closes the time popup</li> </ul> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;timepicker-buttons&quot;</span>&gt;</span>Time picker with optional footer buttons<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timepicker-buttons&quot;</span>\n      <span class="hljs-attr">now-button</span>\n      <span class="hljs-attr">reset-button</span>\n      <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-footer-buttons.vue --&gt;</span></pre></div><p>The text for the optional buttons can be set via the <code class="text-nowrap" translate="no">label-now-button</code>, <code class="text-nowrap" translate="no">label-reset-button</code>, and the <code class="text-nowrap" translate="no">label-close-button</code> props. Due to the limited width of the footer section, it is recommended to keep these labels short.</p> <h3 id="dropdown-placement" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown placement<a class="anchorjs-link" href="#dropdown-placement" aria-labelledby="dropdown-placement"></a></span></h3> <p>Use the dropdown props <code class="text-nowrap" translate="no">right</code>, <code class="text-nowrap" translate="no">dropup</code>, <code class="text-nowrap" translate="no">dropright</code>, <code class="text-nowrap" translate="no">dropleft</code>, <code class="text-nowrap" translate="no">no-flip</code>, and <code class="text-nowrap" translate="no">offset</code> to control the positioning of the popup calendar.</p> <p>Refer to the <a href="/docs/components/dropdown#positioning" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> positioning section</a> for details on the effects and usage of these props.</p> <h3 id="button-only-mode" class="bv-no-focus-ring"><span class="bd-content-title">Button only mode<a class="anchorjs-link" href="#button-only-mode" aria-labelledby="button-only-mode"></a></span></h3> <p><span class="badge badge-info small">v2.7.0+</span></p> <p>Fancy just a button that launches the timepicker dialog, or want to provide your own optional text input field? Use the <code class="text-nowrap" translate="no">button-only</code> prop to render the timepicker as a dropdown button. The formatted time label will be rendered with the class <code class="text-nowrap" translate="no">sr-only</code> (available only to screen readers).</p> <p>In the following simple example, we are placing the timepicker (button only mode) as an append to a <code class="text-nowrap" translate="no">&lt;b-input-group&gt;</code>:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-input&quot;</span>&gt;</span>Choose a time<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-input&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n        <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;HH:mm:ss&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-input-group-append</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span>\n          <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n          <span class="hljs-attr">button-only</span>\n          <span class="hljs-attr">right</span>\n          <span class="hljs-attr">show-seconds</span>\n          <span class="hljs-attr">locale</span>=<span class="hljs-string">&quot;en&quot;</span>\n          <span class="hljs-attr">aria-controls</span>=<span class="hljs-string">&quot;example-input&quot;</span>\n        &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group-append</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-input-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: &#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-timepicker-button-only.vue --&gt;</span></pre></div><p>Control the size of the button via the <code class="text-nowrap" translate="no">size</code> prop, and the button variant via the <code class="text-nowrap" translate="no">button-variant</code> prop.</p> <h2 id="internationalization" class="bv-no-focus-ring"><span class="bd-content-title">Internationalization<a class="anchorjs-link" href="#internationalization" aria-labelledby="internationalization"></a></span></h2> <p>Internationalization of the time interface is provided via <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">Intl.DateTimeFormat</code></a> and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">Intl.NumberFormat</code></a>, except for the labels applied to elements of the time control (aria-labels, selected status, etc.). You must provide your own translations for these labels. The available locales will be browser dependent (not all browsers support all locales).</p> <p>By default <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> will use the browser&#39;s default locale, but you can specify the locale (or locales) to use via the <code class="text-nowrap" translate="no">locale</code> prop. The prop accepts either a single locale string, or an array of locale strings (listed in order of most preferred locale to least preferred).</p> <p>The emitted <code class="text-nowrap" translate="no">&#39;context&#39;</code> event will include which locale the time control has resolved to (which may not be the same locale as requested, depending on the supported locales of <code class="text-nowrap" translate="no">Intl</code>).</p> <p>For server side rendering (SSR) when using Node.js, ensure that the Node.js runtime you are using supports <code class="text-nowrap" translate="no">Intl</code> and the locales you will be using. Refer to the <a href="https://nodejs.org/api/intl.html" target="_blank" rel="noopener">Node Intl support documentation</a> for details.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">cols</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;example-locales&quot;</span>&gt;</span>Locale:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;example-locales&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;locale&quot;</span> <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;locales&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-select</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">md</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-timepicker</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span>\n        <span class="hljs-attr">v-bind</span>=<span class="hljs-string">&quot;labels[locale] || {}&quot;</span>\n        <span class="hljs-attr">:locale</span>=<span class="hljs-string">&quot;locale&quot;</span>\n        <span class="hljs-attr">show-seconds</span>\n        @<span class="hljs-attr">context</span>=<span class="hljs-string">&quot;onContext&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-timepicker</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Value: <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>&#x27;{{ value }}&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>&gt;</span>Context:<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>{{ context }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n   <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">context</span>: <span class="hljs-literal">null</span>,\n        <span class="hljs-attr">locale</span>: <span class="hljs-string">&#x27;en-US&#x27;</span>,\n        <span class="hljs-attr">locales</span>: [\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;English US (en-US)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;de&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;German (de)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;ar-EG&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Arabic Egyptian (ar-EG)&#x27;</span> },\n          { <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh&#x27;</span>, <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;Chinese (zh)&#x27;</span> }\n        ],\n        <span class="hljs-attr">labels</span>: {\n          <span class="hljs-attr">de</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">&#x27;Stunden&#x27;</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">&#x27;Minuten&#x27;</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">&#x27;Sekunden&#x27;</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">&#x27;Erhöhen&#x27;</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">&#x27;Verringern&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;Ausgewählte Zeit&#x27;</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">&#x27;Keine Zeit ausgewählt&#x27;</span>,\n            <span class="hljs-attr">labelCloseButton</span>: <span class="hljs-string">&#x27;Schließen&#x27;</span>\n          },\n          <span class="hljs-string">&#x27;ar-EG&#x27;</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">&#x27;ساعات&#x27;</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">&#x27;الدقائق&#x27;</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">&#x27;ثواني&#x27;</span>,\n            <span class="hljs-attr">labelAmpm</span>: <span class="hljs-string">&#x27;صباحا مساء&#x27;</span>,\n            <span class="hljs-attr">labelAm</span>: <span class="hljs-string">&#x27;ص&#x27;</span>,\n            <span class="hljs-attr">labelPm</span>: <span class="hljs-string">&#x27;م&#x27;</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">&#x27;زيادة&#x27;</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">&#x27;إنقاص&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;الوقت المحدد&#x27;</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">&#x27;لا وقت المختار&#x27;</span>,\n            <span class="hljs-attr">labelCloseButton</span>: <span class="hljs-string">&#x27;قريب&#x27;</span>\n          },\n          <span class="hljs-attr">zh</span>: {\n            <span class="hljs-attr">labelHours</span>: <span class="hljs-string">&#x27;小时&#x27;</span>,\n            <span class="hljs-attr">labelMinutes</span>: <span class="hljs-string">&#x27;分钟&#x27;</span>,\n            <span class="hljs-attr">labelSeconds</span>: <span class="hljs-string">&#x27;秒&#x27;</span>,\n            <span class="hljs-attr">labelAmpm</span>: <span class="hljs-string">&#x27;上午下午&#x27;</span>,\n            <span class="hljs-attr">labelAm</span>: <span class="hljs-string">&#x27;上午&#x27;</span>,\n            <span class="hljs-attr">labelPm</span>: <span class="hljs-string">&#x27;下午&#x27;</span>,\n            <span class="hljs-attr">labelIncrement</span>: <span class="hljs-string">&#x27;增量&#x27;</span>,\n            <span class="hljs-attr">labelDecrement</span>: <span class="hljs-string">&#x27;减量&#x27;</span>,\n            <span class="hljs-attr">labelSelected</span>: <span class="hljs-string">&#x27;选定时间&#x27;</span>,\n            <span class="hljs-attr">labelNoTimeSelected</span>: <span class="hljs-string">&#x27;没有选择时间&#x27;</span>,\n            <span class="hljs-attr">labelCloseButton</span>: <span class="hljs-string">&#x27;关&#x27;</span>\n          }\n        }\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">onContext</span>(<span class="hljs-params">ctx</span>)</span> {\n        <span class="hljs-built_in">this</span>.context = ctx\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-time-i18n.vue --&gt;</span></pre></div><h3 id="understanding-the-hourcycle" class="bv-no-focus-ring"><span class="bd-content-title">Understanding the <code class="text-nowrap" translate="no">hourCycle</code><a class="anchorjs-link" href="#understanding-the-hourcycle" aria-labelledby="understanding-the-hourcycle"></a></span></h3> <p>There are 2 main types of time keeping conventions (clocks) used around the world: the 12-hour clock and the 24-hour clock. The <code class="text-nowrap" translate="no">hourCycle</code> property allows you to access the clock type used by a particular locale. The hour cycle type can have several different values, which are listed in the table below. The <code class="text-nowrap" translate="no">hourCycle</code> signals how the time <code class="text-nowrap" translate="no">&#39;00:00:00&#39;</code> (the start of the day) should be presented/formatted to a user of a particular locale. The <code class="text-nowrap" translate="no">&#39;context&#39;</code> event includes the resolved <code class="text-nowrap" translate="no">hourCycle</code> value.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th><code class="text-nowrap" translate="no">hourCycle</code></th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">&#39;h12&#39;</code></td> <td>Hour system using <code class="text-nowrap" translate="no">1</code>–<code class="text-nowrap" translate="no">12</code>. The 12 hour clock, with midnight starting at 12:00 am</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h23&#39;</code></td> <td>Hour system using <code class="text-nowrap" translate="no">0</code>–<code class="text-nowrap" translate="no">23</code>. The 24 hour clock, with midnight starting at 0:00</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h11&#39;</code></td> <td>Hour system using <code class="text-nowrap" translate="no">0</code>–<code class="text-nowrap" translate="no">11</code>. The 12 hour clock, with midnight starting at 0:00 am</td> </tr> <tr> <td><code class="text-nowrap" translate="no">&#39;h24&#39;</code></td> <td>Hour system using <code class="text-nowrap" translate="no">1</code>–<code class="text-nowrap" translate="no">24</code>. The 24 hour clock, with midnight starting at 24:00</td> </tr> </tbody></table> </div><p>Native HTML5 <code class="text-nowrap" translate="no">&lt;input type=&quot;date&quot;&gt;</code> returns the time value in the <code class="text-nowrap" translate="no">&#39;h23&#39;</code> format, and <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> also returns the v-model in the <code class="text-nowrap" translate="no">&#39;h23&#39;</code> format. This value may differ from what is presented to the user via the GUI (spin buttons) of the <code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> component, dependent upon the <a href="#internationalization" class="font-weight-bold">locale selected</a>.</p> <p><strong>Note:</strong> IE 11 <em>does not support</em> resolving the <code class="text-nowrap" translate="no">hourCycle</code> value of a locale, so we assume either <code class="text-nowrap" translate="no">h12</code> or <code class="text-nowrap" translate="no">h23</code> based on the resolved <code class="text-nowrap" translate="no">hour12</code> value.</p> <h3 id="forcing-12-or-24-hour-interface" class="bv-no-focus-ring"><span class="bd-content-title">Forcing 12 or 24 hour interface<a class="anchorjs-link" href="#forcing-12-or-24-hour-interface" aria-labelledby="forcing-12-or-24-hour-interface"></a></span></h3> <p>12-hour versus 24-hour input is determined by the client browsers default locale (or the locale resolved from the <code class="text-nowrap" translate="no">locale</code> prop). To force a 12-hour user interface, set the prop <code class="text-nowrap" translate="no">hour12</code> to <code class="text-nowrap" translate="no">true</code>. To force a 24-hour user interface, set the prop <code class="text-nowrap" translate="no">hour12</code> to <code class="text-nowrap" translate="no">false</code>. The default for prop <code class="text-nowrap" translate="no">hour12</code> is <code class="text-nowrap" translate="no">null</code> which uses the resolved locale to determine which interface to use.</p> <p>The setting of the <code class="text-nowrap" translate="no">hour12</code> prop will affect which <a href="#understanding-the-hourcycle" class="font-weight-bold"><code class="text-nowrap" translate="no">hourCycle</code></a> is resolved for formatting the hours spinbutton. Note that while this may affect the format of the hour spinbutton, but the formatted time string result <em>may</em> show the <code class="text-nowrap" translate="no">&#39;h12</code> or <code class="text-nowrap" translate="no">&#39;h23&#39;</code> format due to limitations in the client <code class="text-nowrap" translate="no">Intl.DateTimeFormat</code> support for a particular locale. It is therefore <strong>recommended to leave the <code class="text-nowrap" translate="no">hour12</code> prop set to <code class="text-nowrap" translate="no">null</code> (default)</strong>, so show the locale default time/hour formatting.</p> <h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p>The popup time supports the same keyboard controls as <a href="/docs/components/time#accessibility" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code></a>, along with the following:</p> <ul> <li><kbd class="notranslate" translate="no">Esc</kbd> will close the popup time without selecting a time</li> </ul> <p>When internationalizing the timepicker, it is important to also update the <code class="text-nowrap" translate="no">label-*</code> props with appropriate translated strings, so that international screen reader users will hear the correct prompts and descriptions.</p> <p>Refer to the <a href="/docs/components/time#accessibility" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code></a> documentation for additional details.</p> <h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> is based upon the components <a href="/docs/components/time" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code></a> and <a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code></a>.</p> <p><code class="text-nowrap" translate="no">&lt;b-form-timepicker&gt;</code> uses Bootstrap&#39;s border and flex utility classes, along with button (<code class="text-nowrap" translate="no">btn-*</code>) classes, dropdown (<code class="text-nowrap" translate="no">dropdown*</code>) classes, and the <code class="text-nowrap" translate="no">form-control*</code> (plus validation) classes. BootstrapVue&#39;s Custom SCSS/CSS is also required for proper styling of the time picker and popup.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/components/time" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-time&gt;</code> Time selection widget</a></li> <li><a href="/docs/components/form-datepicker" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form-datepicker&gt;</code> Date picker custom form input</a></li> <li><a href="/docs/components/calendar" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-calendar&gt;</code> Calendar date selection widget</a></li> <li><a href="/docs/components/dropdown" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> Dropdown component</a></li> </ul>'}}}]);