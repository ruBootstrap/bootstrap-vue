(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{461:function(n,t){n.exports={baseTOC:{top:"#текстовая-область-формы",title:"Текстовая область формы",toc:[{href:"#размеры-элементов-управления",label:"Размеры элементов управления"},{href:"#отображаемые-строки",label:"Отображаемые строки",toc:[{href:"#отключить-маркер-изменения-размера",label:"Отключить маркер изменения размера"},{href:"#автоматическая-высота",label:"Автоматическая высота"}]},{href:"#контекстные-состояния",label:"Контекстные состояния",toc:[{href:"#передача-состояния-контекста-вспомогательным-технологиям-и-дальтоникам",label:"Передача состояния контекста вспомогательным технологиям и дальтоникам"},{href:"#атрибут-aria-invalid",label:"Атрибут aria-invalid"}]},{href:"#поддержка-форматтера",label:"Поддержка форматтера"},{href:"#обычный-текст-только-для-чтения",label:"Обычный текст только для чтения"},{href:"#модификаторы-v-model",label:"Модификаторы v-model"},{href:"#поддержка-debounce",label:"Поддержка Debounce"},{href:"#автофокус",label:"Автофокус"},{href:"#собственные-и-пользовательские-события",label:"Собственные и пользовательские события"},{href:"#открытые-входные-свойства-и-методы",label:"Открытые входные свойства и методы",toc:[{href:"#свойства-ввода",label:"Свойства ввода"},{href:"#методы-ввода",label:"Методы ввода"}]}]},titleLead:'<h1 id="текстовая-область-формы" class="bv-no-focus-ring"><span class="bd-content-title">Текстовая область формы</span></h1> <p class="bd-lead">Создавайте многострочные текстовые поля ввода с поддержкой автоматического изменения размера, минимального и максимального количества строк и контекстных состояний.</p>',body:'<div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Введите что-нибудь...&quot;</span>\n      <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>\n      <span class="hljs-attr">max-rows</span>=<span class="hljs-string">&quot;6&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-3 mb-0&quot;</span>&gt;</span>{{ text }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea.vue --&gt;</span></pre></div><h2 id="размеры-элементов-управления" class="bv-no-focus-ring"><span class="bd-content-title">Размеры элементов управления<a class="anchorjs-link" href="#размеры-элементов-управления" aria-labelledby="размеры-элементов-управления"></a></span></h2> <p>Установите высоту текста с помощью свойства <code class="text-nowrap" translate="no">size</code> на <code class="text-nowrap" translate="no">sm</code> или <code class="text-nowrap" translate="no">lg</code> для маленьких или больших соответственно.</p> <p>Чтобы контролировать ширину, поместите ввод внутри стандартного столбца сетки Bootstrap.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;textarea-small&quot;</span>&gt;</span>Маленький:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-small&quot;</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Маленькая текстовая область&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;textarea-default&quot;</span>&gt;</span>По умолчанию:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-default&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Текстовая область по умолчанию&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;textarea-large&quot;</span>&gt;</span>Большой:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-large&quot;</span>\n        <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Большая текстовая область&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-sizes.vue --&gt;</span></pre></div><h2 id="отображаемые-строки" class="bv-no-focus-ring"><span class="bd-content-title">Отображаемые строки<a class="anchorjs-link" href="#отображаемые-строки" aria-labelledby="отображаемые-строки"></a></span></h2> <p>Чтобы установить высоту <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code>, установите свойство <code class="text-nowrap" translate="no">rows</code> на желаемое количество строк. Если для <code class="text-nowrap" translate="no">rows</code>, не задано значение, то по умолчанию будет <code class="text-nowrap" translate="no">2</code> (значение по умолчанию для браузера и минимально допустимое значение). Если задать для него значение null или значение ниже 2, будет использоваться значение по умолчанию <code class="text-nowrap" translate="no">2</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-rows&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Высокое текстовое поле&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;8&quot;</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-rows.vue --&gt;</span></pre></div><h3 id="отключить-маркер-изменения-размера" class="bv-no-focus-ring"><span class="bd-content-title">Отключить маркер изменения размера<a class="anchorjs-link" href="#отключить-маркер-изменения-размера" aria-labelledby="отключить-маркер-изменения-размера"></a></span></h3> <p>Некоторые веб-браузеры позволяют пользователю изменять высоту текстового поля. Чтобы отключить эту функцию, установите для свойства <code class="text-nowrap" translate="no">no-resize</code> значение <code class="text-nowrap" translate="no">true</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n    <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-no-resize&quot;</span>\n    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Текстовое поле с фиксированной высотой&quot;</span>\n    <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>\n    <span class="hljs-attr">no-resize</span>\n  &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-no-resize.vue --&gt;</span></pre></div><h3 id="автоматическая-высота" class="bv-no-focus-ring"><span class="bd-content-title">Автоматическая высота<a class="anchorjs-link" href="#автоматическая-высота" aria-labelledby="автоматическая-высота"></a></span></h3> <p><code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> также может автоматически регулировать свою высоту (текстовые строки) в соответствии с содержимым, даже когда пользователь вводит или удаляет текст. Высота текстового поля будет либо увеличиваться, либо уменьшаться, чтобы соответствовать содержимому (увеличиваться до максимума <code class="text-nowrap" translate="no">max-rows</code> или уменьшаться до минимального <code class="text-nowrap" translate="no">rows</code>).</p> <p>Чтобы установить начальную минимальную высоту (в строках), установите свойство <code class="text-nowrap" translate="no">rows</code> на желаемое количество строк (или оставьте значение по умолчанию <code class="text-nowrap" translate="no">2</code>), а затем установите максимальное количество строк, до которых будет увеличиваться текстовая область (до показывая полосу прокрутки), установив для свойства <code class="text-nowrap" translate="no">max-rows</code> максимальное количество строк текста.</p> <p>Чтобы сделать высоту <code class="text-nowrap" translate="no">sticky</code> (т.е. никогда не уменьшаться), установите для свойства <code class="text-nowrap" translate="no">no-auto-shrink</code> значение <code class="text-nowrap" translate="no">true</code>. Свойства <code class="text-nowrap" translate="no">no-auto-shrink</code> не действуют, если <code class="text-nowrap" translate="no">max-rows</code> не задано или равно или меньше <code class="text-nowrap" translate="no">rows</code>.</p> <p>Обратите внимание, что дескриптор изменения размера текстового поля (если он поддерживается браузером) будет автоматически отключен в режиме автоматической высоты.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">b-container</span> <span class="hljs-attr">fluid</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;textarea-auto-height&quot;</span>&gt;</span>Автоматическая высота:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-auto-height&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Текстовое поле с автоматической высотой&quot;</span>\n        <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>\n        <span class="hljs-attr">max-rows</span>=<span class="hljs-string">&quot;8&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-row</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;textarea-no-auto-shrink&quot;</span>&gt;</span>Без автоматического сжатия:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-col</span> <span class="hljs-attr">sm</span>=<span class="hljs-string">&quot;10&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-no-auto-shrink&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Текстовое поле с автоматической высотой (без сжатия)&quot;</span>\n        <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>\n        <span class="hljs-attr">max-rows</span>=<span class="hljs-string">&quot;8&quot;</span>\n        <span class="hljs-attr">no-auto-shrink</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-col</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-row</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">b-container</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-auto-height.vue --&gt;</span></pre></div><h4 id="примечание-о-реализации-автоматической-высоты" class="bv-no-focus-ring"><span class="bd-content-title">Примечание о реализации автоматической высоты<a class="anchorjs-link" href="#примечание-о-реализации-автоматической-высоты" aria-labelledby="примечание-о-реализации-автоматической-высоты"></a></span></h4> <p>Автоматическая высота работает путем вычисления результирующей высоты с помощью запросов CSS, поэтому ввод должен быть в документе (DOM) и видимым (не скрытым с помощью <code class="text-nowrap" translate="no">display: none</code>). Начальная высота рассчитывается на креплении. Если клиент браузера поддерживает <a href="https://caniuse.com/intersectionobserver" target="_blank" rel="noopener"><code class="text-nowrap" translate="no">IntersectionObserver</code></a> (либо изначально, либо через <a href="/docs#js" class="font-weight-bold">a polyfill</a>), то <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> воспользуется преимуществом. этого, чтобы определить, когда текстовое поле станет видимым, и затем вычислит высоту. Смотрите раздел <a href="/docs#browser" class="font-weight-bold">Поддержка браузера</a> на странице начала работы.</p> <h2 id="контекстные-состояния" class="bv-no-focus-ring"><span class="bd-content-title">Контекстные состояния<a class="anchorjs-link" href="#контекстные-состояния" aria-labelledby="контекстные-состояния"></a></span></h2> <p>Bootstrap включает стили валидации для состояний <code class="text-nowrap" translate="no">valid</code> и <code class="text-nowrap" translate="no">invalid</code> для большинства элементов управления формой.</p> <p>Вообще говоря, вы захотите использовать определенное состояние для определенных типов обратной связи:</p> <ul> <li><code class="text-nowrap" translate="no">false</code> (обозначает недопустимое состояние) отлично подходит, когда есть блокирующее или обязательное поле. Пользователь должен правильно заполнить это поле, чтобы отправить форму.</li> <li><code class="text-nowrap" translate="no">true</code> (обозначает допустимое состояние) идеально подходит для ситуаций, когда у вас есть проверка по каждому полю во всей форме и вы хотите побудить пользователя пройти через остальные поля.</li> <li><code class="text-nowrap" translate="no">null</code> Не отображает состояние проверки (ни действительное, ни недействительное)</li> </ul> <p>Чтобы применить один из значков контекстного состояния к <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code>, установите для свойства <code class="text-nowrap" translate="no">state</code> значение <code class="text-nowrap" translate="no">false</code> (для недопустимого), <code class="text-nowrap" translate="no">true</code> (для действительного) или <code class="text-nowrap" translate="no">null</code> (без состояния проверки).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n      <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-state&quot;</span>\n      <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text&quot;</span>\n      <span class="hljs-attr">:state</span>=<span class="hljs-string">&quot;text.length &gt;= 10&quot;</span>\n      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Введите не менее 10 символов&quot;</span>\n      <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span>\n    &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-state.vue --&gt;</span></pre></div><h3 id="передача-состояния-контекста-вспомогательным-технологиям-и-дальтоникам" class="bv-no-focus-ring"><span class="bd-content-title">Передача состояния контекста вспомогательным технологиям и дальтоникам<a class="anchorjs-link" href="#передача-состояния-контекста-вспомогательным-технологиям-и-дальтоникам" aria-labelledby="передача-состояния-контекста-вспомогательным-технологиям-и-дальтоникам"></a></span></h3> <p>Использование этих контекстных состояний для обозначения состояния элемента управления формы обеспечивает только визуальную цветовую индикацию, которая не будет передана пользователям вспомогательных технологий, таких как программы чтения с экрана, или пользователям с дальтонизмом.</p> <p>Убедитесь, что также имеется альтернативная индикация состояния. Например, вы можете включить подсказку о состоянии в самом тексте <code class="text-nowrap" translate="no">&lt;label&gt;</code> элемента управления формой или предоставив дополнительный текстовый блок справки.</p> <h3 id="атрибут-aria-invalid" class="bv-no-focus-ring"><span class="bd-content-title">Атрибут <code class="text-nowrap" translate="no">aria-invalid</code><a class="anchorjs-link" href="#атрибут-aria-invalid" aria-labelledby="атрибут-aria-invalid"></a></span></h3> <p>Когда <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> имеет недопустимое контекстное состояние (т.е. состояние <code class="text-nowrap" translate="no">false</code>), вы также можете захотеть установить для свойства <code class="text-nowrap" translate="no">aria-invalid</code> значение <code class="text-nowrap" translate="no">true</code> или одно из поддерживаемых значений:</p> <ul> <li><code class="text-nowrap" translate="no">false</code>: Без ошибок (по умолчанию)</li> <li><code class="text-nowrap" translate="no">true</code> или <code class="text-nowrap" translate="no">&#39;true&#39;</code>: Значение не прошло проверку.</li> <li><code class="text-nowrap" translate="no">&#39;grammar&#39;</code>: Обнаружена грамматическая ошибка.</li> <li><code class="text-nowrap" translate="no">&#39;spelling&#39;</code> Обнаружена орфографическая ошибка.</li> </ul> <p>Если для свойства <code class="text-nowrap" translate="no">state</code> задано значение <code class="text-nowrap" translate="no">false</code>, а свойство <code class="text-nowrap" translate="no">aria-invalid</code> явно не установлено, <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> автоматически установит для атрибута <code class="text-nowrap" translate="no">aria-invalid</code> значение <code class="text-nowrap" translate="no">&#39;true&#39;</code>.</p> <h2 id="поддержка-форматтера" class="bv-no-focus-ring"><span class="bd-content-title">Поддержка форматтера<a class="anchorjs-link" href="#поддержка-форматтера" aria-labelledby="поддержка-форматтера"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> опционально поддерживает форматирование, передавая ссылку на функцию в свойство <code class="text-nowrap" translate="no">formatter</code>.</p> <p>Форматирование (когда предоставляется функция форматирования) происходит, когда срабатывают собственные события элемента управления <code class="text-nowrap" translate="no">input</code> и <code class="text-nowrap" translate="no">change</code>. Вы можете использовать логическое свойство <code class="text-nowrap" translate="no">lazy-formatter</code>, чтобы ограничить вызов функции форматирования для собственного события элемента управления <code class="text-nowrap" translate="no">blur</code>.</p> <p>Функция <code class="text-nowrap" translate="no">formatter</code> получает два аргумента: необработанное <code class="text-nowrap" translate="no">value</code> элемента ввода и нативный объект <code class="text-nowrap" translate="no">event</code>, который инициировал форматирование (если доступно).</p> <p>Функция <code class="text-nowrap" translate="no">formatter</code> должна возвращать отформатированное значение как <em>строка</em>.</p> <p>Форматирование не происходит, если не предоставлено средство форматирования <code class="text-nowrap" translate="no">formatter</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Текстовая область с форматеров (при вводе)&quot;</span>\n      <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;textarea-formatter&quot;</span>\n      <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Мы мгновенно переведем ваш текст в нижний регистр&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-formatter&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text1&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter your text&quot;</span>\n        <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;white-space: pre-line&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>Значение:<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span> {{ text1 }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span>\n      <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Текстовая область с отложенным форматеров (при блюре)&quot;</span>\n      <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;textarea-lazy&quot;</span>\n      <span class="hljs-attr">description</span>=<span class="hljs-string">&quot;Этот немного поленился!&quot;</span>\n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span>\n    &gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span>\n        <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-lazy&quot;</span>\n        <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;text2&quot;</span>\n        <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Enter your text&quot;</span>\n        <span class="hljs-attr">lazy-formatter</span>\n        <span class="hljs-attr">:formatter</span>=<span class="hljs-string">&quot;formatter&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-0&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;white-space: pre-line&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>Значение:<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span> {{ text2 }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">text1</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n        <span class="hljs-attr">text2</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    },\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">formatter</span>(<span class="hljs-params">value</span>)</span> {\n        <span class="hljs-keyword">return</span> value.toLowerCase()\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-formatter.vue --&gt;</span></pre></div><p><strong>Примечание:</strong> При неленивом форматировании, если курсор не находится в конце входного значения, он может переместиться в конец <em>после</em> ввода символа. Вы можете использовать предоставленный объект события и <code class="text-nowrap" translate="no">event.target</code> для доступа к собственным методам выбора и свойствам ввода, чтобы контролировать, где находится точка вставки. Это оставлено читателю в качестве упражнения.</p> <h2 id="обычный-текст-только-для-чтения" class="bv-no-focus-ring"><span class="bd-content-title">Обычный текст только для чтения<a class="anchorjs-link" href="#обычный-текст-только-для-чтения" aria-labelledby="обычный-текст-только-для-чтения"></a></span></h2> <p>Если вы хотите, чтобы элементы <code class="text-nowrap" translate="no">&lt;b-form-textarea readonly&gt;</code> в вашей форме были стилизованы как простой текст, установите свойство <code class="text-nowrap" translate="no">plaintext</code> (не нужно устанавливать <code class="text-nowrap" translate="no">readonly</code>, так как она будет установлена автоматически), чтобы удалить форму по умолчанию стиль поля и сохранить правильный размер текста, поля, отступы и высоту.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;textarea-plaintext&quot;</span> <span class="hljs-attr">plaintext</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;Это какой-то текст.\\nОн доступен только для чтения и не похож на ввод.&quot;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-plaintext.vue --&gt;</span></pre></div><h2 id="модификаторы-v-model" class="bv-no-focus-ring"><span class="bd-content-title">Модификаторы <code class="text-nowrap" translate="no">v-model</code><a class="anchorjs-link" href="#модификаторы-v-model" aria-labelledby="модификаторы-v-model"></a></span></h2> <p>Vue официально не поддерживает модификаторы <code class="text-nowrap" translate="no">.lazy</code>, <code class="text-nowrap" translate="no">.trim</code> и <code class="text-nowrap" translate="no">.number</code> в <code class="text-nowrap" translate="no">v-model</code> входных данных на основе настраиваемых компонентов и может создавать неудобства для пользователей. Избегайте использования собственных модификаторов Vue.</p> <p>Чтобы обойти это, в <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> есть три логических свойства <code class="text-nowrap" translate="no">trim</code>, <code class="text-nowrap" translate="no">number</code> и <code class="text-nowrap" translate="no">lazy</code>, которые имитируют встроенные модификаторы Vue <code class="text-nowrap" translate="no">v-model</code> <code class="text-nowrap" translate="no">.trim</code> и <code class="text-nowrap" translate="no">.number</code> и <code class="text-nowrap" translate="no">.lazy</code> соответственно. Свойство <code class="text-nowrap" translate="no">lazy</code> будет обновлять v-model при событиях <code class="text-nowrap" translate="no">change</code>/<code class="text-nowrap" translate="no">blur</code>.</p> <p><strong>Примечания:</strong></p> <ul> <li>Свойство <code class="text-nowrap" translate="no">number</code> имеет приоритет перед свойством <code class="text-nowrap" translate="no">trim</code> (то есть <code class="text-nowrap" translate="no">trim</code> не будет иметь никакого эффекта, если установлено <code class="text-nowrap" translate="no">number</code>).</li> <li>При использовании свойства <code class="text-nowrap" translate="no">number</code> и если значение может быть проанализировано как число (через <code class="text-nowrap" translate="no">parseFloat</code>), оно вернет значение типа <code class="text-nowrap" translate="no">Number</code> в <code class="text-nowrap" translate="no">v-model</code>, в противном случае возвращается исходное входное значение, как тип <code class="text-nowrap" translate="no">String</code>. Это то же самое поведение, что и собственный модификатор <code class="text-nowrap" translate="no">.number</code>.</li> <li>Свойства модификаторов <code class="text-nowrap" translate="no">trim</code> и <code class="text-nowrap" translate="no">number</code> не влияют на значение, возвращаемое событиями <code class="text-nowrap" translate="no">input</code> или <code class="text-nowrap" translate="no">change</code>. Эти события всегда будут возвращать строковое значение содержимого <code class="text-nowrap" translate="no">&lt;textarea&gt;</code> после необязательного форматирования (которое может не соответствовать значению, возвращаемому через событие <code class="text-nowrap" translate="no">update</code> в <code class="text-nowrap" translate="no">v-model</code>, которое обрабатывает модификаторы).</li> </ul> <h2 id="поддержка-debounce" class="bv-no-focus-ring"><span class="bd-content-title">Поддержка Debounce<a class="anchorjs-link" href="#поддержка-debounce" aria-labelledby="поддержка-debounce"></a></span></h2> <p>В качестве альтернативы свойства модификатора <code class="text-nowrap" translate="no">lazy</code>, <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> опционально поддерживает отладку пользовательского ввода, обновляя <code class="text-nowrap" translate="no">v-model</code> после периода простоя с момента, когда последний символ был введен пользователем ( или происходит событие <code class="text-nowrap" translate="no">change</code>). Если пользователь вводит новый символ (или удаляет символы) до истечения тайм-аута простоя, тайм-аут запускается повторно.</p> <p>Чтобы включить debouncing, установите для свойства <code class="text-nowrap" translate="no">debounce</code> любое целое число больше нуля. Значение указывается в миллисекундах. Установка <code class="text-nowrap" translate="no">debounce</code> на <code class="text-nowrap" translate="no">0</code> отключит debouncing.</p> <p>Примечание: устранение неполадок <em>не</em> произойдет, если установлено свойство <code class="text-nowrap" translate="no">lazy</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-form-textarea</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;value&quot;</span> <span class="hljs-attr">debounce</span>=<span class="hljs-string">&quot;500&quot;</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">&quot;3&quot;</span> <span class="hljs-attr">max-rows</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-textarea</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mt-2 mb-0&quot;</span>&gt;</span>{{ value }}<span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;&#x27;</span>\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-form-textarea-debounce.vue --&gt;</span></pre></div><h2 id="автофокус" class="bv-no-focus-ring"><span class="bd-content-title">Автофокус<a class="anchorjs-link" href="#автофокус" aria-labelledby="автофокус"></a></span></h2> <p>Когда свойство <code class="text-nowrap" translate="no">autofocus</code> установлено на <code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code>, текстовое поле будет автоматически сфокусировано, когда оно вставлено (т.е. <strong>mounted</strong>) в документ или повторно активировано, когда оно находится внутри компонента Vue <code class="text-nowrap" translate="no">&lt;keep-alive&gt;</code>. Обратите внимание, что это свойство <strong>не</strong> устанавливает атрибут <code class="text-nowrap" translate="no">autofocus</code> в текстовом поле и не может определить, когда текстовое поле станет видимым.</p> <h2 id="собственные-и-пользовательские-события" class="bv-no-focus-ring"><span class="bd-content-title">Собственные и пользовательские события<a class="anchorjs-link" href="#собственные-и-пользовательские-события" aria-labelledby="собственные-и-пользовательские-события"></a></span></h2> <p>Поддерживаются все собственные события (кроме настраиваемых событий <code class="text-nowrap" translate="no">input</code> и <code class="text-nowrap" translate="no">change</code>) без модификатора <code class="text-nowrap" translate="no">.native</code>.</p> <p>Пользовательские события <code class="text-nowrap" translate="no">input</code> и <code class="text-nowrap" translate="no">change</code> получают единственный аргумент текущего значения <code class="text-nowrap" translate="no">value</code> (после применения любого форматирования) и запускаются при взаимодействии с пользователем.</p> <p>Пользовательские события <code class="text-nowrap" translate="no">update</code> передается входное значение, и оно генерируется всякий раз, когда <code class="text-nowrap" translate="no">v-model</code> нуждается в обновлении (оно генерируется перед <code class="text-nowrap" translate="no">input</code>, <code class="text-nowrap" translate="no">change</code> и <code class="text-nowrap" translate="no">blur</code> по мере необходимости).</p> <p>Вы всегда можете получить доступ к собственным событиям <code class="text-nowrap" translate="no">input</code> и <code class="text-nowrap" translate="no">change</code> с помощью модификатора <code class="text-nowrap" translate="no">.native</code>.</p> <h2 id="открытые-входные-свойства-и-методы" class="bv-no-focus-ring"><span class="bd-content-title">Открытые входные свойства и методы<a class="anchorjs-link" href="#открытые-входные-свойства-и-методы" aria-labelledby="открытые-входные-свойства-и-методы"></a></span></h2> <p><code class="text-nowrap" translate="no">&lt;b-form-textarea&gt;</code> предоставляет несколько свойств и методов встроенного элемента ввода в ссылке на компонент (т.е. присваивает <code class="text-nowrap" translate="no">ref</code> вашему <code class="text-nowrap" translate="no">&lt;b-form-textarea ref=&quot;foo&quot; ...&gt;</code> и используйте <code class="text-nowrap" translate="no">this.$refs[&#39;foo&#39;].propertyName</code> или <code class="text-nowrap" translate="no">this.$refs[&#39;foo&#39;].methodName(...)</code>).</p> <h3 id="свойства-ввода" class="bv-no-focus-ring"><span class="bd-content-title">Свойства ввода<a class="anchorjs-link" href="#свойства-ввода" aria-labelledby="свойства-ввода"></a></span></h3> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Свойство</th> <th>Примечания</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">.selectionStart</code></td> <td>Чтение/Запись</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.selectionEnd</code></td> <td>Чтение/Запись</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.selectionDirection</code></td> <td>Чтение/Запись</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.validity</code></td> <td>Только чтение</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.validationMessage</code></td> <td>Только чтение</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.willValidate</code></td> <td>Только чтение</td> </tr> </tbody></table> </div><h3 id="методы-ввода" class="bv-no-focus-ring"><span class="bd-content-title">Методы ввода<a class="anchorjs-link" href="#методы-ввода" aria-labelledby="методы-ввода"></a></span></h3> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Метод</th> <th>Примечания</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">.focus()</code></td> <td>Фокус на вводе</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.blur()</code></td> <td>Убрать фокус с ввода</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.select()</code></td> <td>Выбирает весь текст в поле ввода</td> </tr> <tr> <td><code class="text-nowrap" translate="no">.setSelectionRange()</code></td> <td></td> </tr> <tr> <td><code class="text-nowrap" translate="no">.setRangeText()</code></td> <td></td> </tr> <tr> <td><code class="text-nowrap" translate="no">.setCustomValidity()</code></td> <td></td> </tr> <tr> <td><code class="text-nowrap" translate="no">.checkValidity()</code></td> <td></td> </tr> <tr> <td><code class="text-nowrap" translate="no">.reportValidity()</code></td> <td></td> </tr> </tbody></table> </div><p>Обратитесь к <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement</a> для получения дополнительной информации об этих методах и свойствах. Поддержка будет зависеть от типа ввода.</p>'}}}]);