(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{448:function(n,t){n.exports={baseTOC:{top:"#dropdown",title:"Dropdown",toc:[{href:"#button-content",label:"Button content"},{href:"#positioning",label:"Positioning",toc:[{href:"#menu-alignment",label:"Menu alignment"},{href:"#dropup",label:"Dropup"},{href:"#drop-right-or-left",label:"Drop right or left"},{href:"#auto-flipping",label:"Auto &quot;flipping&quot;"},{href:"#menu-offset",label:"Menu offset"},{href:"#boundary-constraint",label:"Boundary constraint"},{href:"#advanced-popperjs-configuration",label:"Advanced Popper.js configuration"}]},{href:"#split-button-support",label:"Split button support",toc:[{href:"#split-button-link-support",label:"Split button link support"},{href:"#split-button-type",label:"Split button type"}]},{href:"#styling-options",label:"Styling options",toc:[{href:"#sizing",label:"Sizing"},{href:"#dropdown-color-variants",label:"Dropdown color variants"},{href:"#split-button-color-variant",label:"Split button color variant"},{href:"#block-level-dropdowns",label:"Block level dropdowns"},{href:"#dropdown-sub-component-color-variants",label:"Dropdown sub-component color variants"},{href:"#hidden-caret",label:"Hidden caret"}]},{href:"#lazy-dropdown",label:"Lazy dropdown"},{href:"#dropdown-supported-sub-components",label:"Dropdown supported sub-components",toc:[{href:"#b-dropdown-item",label:"&lt;b-dropdown-item&gt;"},{href:"#b-dropdown-item-button",label:"&lt;b-dropdown-item-button&gt;"},{href:"#b-dropdown-divider",label:"&lt;b-dropdown-divider&gt;"},{href:"#b-dropdown-text",label:"&lt;b-dropdown-text&gt;"},{href:"#b-dropdown-form",label:"&lt;b-dropdown-form&gt;"},{href:"#b-dropdown-group",label:"&lt;b-dropdown-group&gt;"},{href:"#b-dropdown-header",label:"&lt;b-dropdown-header&gt;"}]},{href:"#listening-to-dropdown-changes-via-root-events",label:"Listening to dropdown changes via $root events"},{href:"#optionally-scoped-default-slot",label:"Optionally scoped default slot"},{href:"#accessibility",label:"Accessibility",toc:[{href:"#headers-and-accessibility",label:"Headers and accessibility"},{href:"#keyboard-navigation",label:"Keyboard navigation"}]},{href:"#implementation-notes",label:"Implementation notes"},{href:"#see-also",label:"See also"}]},titleLead:'<h1 id="dropdown" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown</span></h1> <p class="bd-lead">Dropdowns are toggleable, contextual overlays for displaying lists of links and actions in a dropdown menu format.</p>',body:'<p><code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> (or known by its shorter alias of <code class="text-nowrap" translate="no">&lt;b-dd&gt;</code>) components are toggleable, contextual overlays for displaying lists of links and more. They&#39;re toggled by clicking (or pressing space or enter when focused), not by hovering; this is an <a href="https://markdotto.com/2012/02/27/bootstrap-explained-dropdowns/" target="_blank" rel="noopener">intentional design decision</a>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-1&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown Button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-md-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>First Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Second Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span>&gt;</span>Third Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">active</span>&gt;</span>Active action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">disabled</span>&gt;</span>Disabled action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown.vue --&gt;</span></pre></div><h2 id="button-content" class="bv-no-focus-ring"><span class="bd-content-title">Button content<a class="anchorjs-link" href="#button-content" aria-labelledby="button-content"></a></span></h2> <p>You can customize the text of the dropdown button by using either the <code class="text-nowrap" translate="no">text</code> prop (shown in previous examples), or use the <code class="text-nowrap" translate="no">button-content</code> slot instead of the <code class="text-nowrap" translate="no">text</code> prop. The <code class="text-nowrap" translate="no">button-content</code> slot allows you to use basic HTML and icons in the button content.</p> <p>If both the prop <code class="text-nowrap" translate="no">text</code> and slot <code class="text-nowrap" translate="no">button-content</code> are present, the slot <code class="text-nowrap" translate="no">button-content</code> will take precedence.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Button text via Prop&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>An item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button-content</span>&gt;</span>\n      Custom <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Content<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> with <span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>HTML<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span> via Slot\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>An item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-button-content.vue --&gt;</span></pre></div><h2 id="positioning" class="bv-no-focus-ring"><span class="bd-content-title">Positioning<a class="anchorjs-link" href="#positioning" aria-labelledby="positioning"></a></span></h2> <p>Dropdown supports various positioning such as left and right aligned, dropdown and dropup, and supports auto-flipping (dropdown to dropup, and vice-versa) when the menu would overflow off of the visible screen area.</p> <h3 id="menu-alignment" class="bv-no-focus-ring"><span class="bd-content-title">Menu alignment<a class="anchorjs-link" href="#menu-alignment" aria-labelledby="menu-alignment"></a></span></h3> <p>The dropdown menu can either be left aligned (default) or right aligned with respect to the button above it. To have the dropdown aligned on the right, set the <code class="text-nowrap" translate="no">right</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-left&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Left align&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-right&quot;</span> <span class="hljs-attr">right</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Right align&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-right.vue --&gt;</span></pre></div><h3 id="dropup" class="bv-no-focus-ring"><span class="bd-content-title">Dropup<a class="anchorjs-link" href="#dropup" aria-labelledby="dropup"></a></span></h3> <p>Turn your dropdown menu into a drop-up menu by setting the <code class="text-nowrap" translate="no">dropup</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-dropup&quot;</span> <span class="hljs-attr">dropup</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Drop-Up&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-dropup.vue --&gt;</span></pre></div><h3 id="drop-right-or-left" class="bv-no-focus-ring"><span class="bd-content-title">Drop right or left<a class="anchorjs-link" href="#drop-right-or-left" aria-labelledby="drop-right-or-left"></a></span></h3> <p>Turn your dropdown menu into a drop-right menu by setting the <code class="text-nowrap" translate="no">dropright</code> prop. Or, turn it into a drop-left menu by setting the <code class="text-nowrap" translate="no">dropleft</code> right prop to true.</p> <p><code class="text-nowrap" translate="no">dropright</code> takes precedence over <code class="text-nowrap" translate="no">dropleft</code>. Neither <code class="text-nowrap" translate="no">dropright</code> or <code class="text-nowrap" translate="no">dropleft</code> have any effect if <code class="text-nowrap" translate="no">dropup</code> is set.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-dropright&quot;</span> <span class="hljs-attr">dropright</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Drop-Right&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-dropleft&quot;</span> <span class="hljs-attr">dropleft</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Drop-Left&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-dropright-dropleft.vue --&gt;</span></pre></div><h3 id="auto-flipping" class="bv-no-focus-ring"><span class="bd-content-title">Auto &quot;flipping&quot;<a class="anchorjs-link" href="#auto-flipping" aria-labelledby="auto-flipping"></a></span></h3> <p>By default, dropdowns may flip to the top, or to the bottom, based on their current position in the viewport. To disable this auto-flip feature, set the <code class="text-nowrap" translate="no">no-flip</code> prop.</p> <h3 id="menu-offset" class="bv-no-focus-ring"><span class="bd-content-title">Menu offset<a class="anchorjs-link" href="#menu-offset" aria-labelledby="menu-offset"></a></span></h3> <p>Like to move your menu away from the toggle buttons a bit? Then use the <code class="text-nowrap" translate="no">offset</code> prop to specify the number of pixels to push right (or left when negative) from the toggle button:</p> <ul> <li>Specified as a number of pixels: positive for right shift, negative for left shift.</li> <li>Specify the distance in CSS units (i.e. <code class="text-nowrap" translate="no">0.3rem</code>, <code class="text-nowrap" translate="no">4px</code>, <code class="text-nowrap" translate="no">1.2em</code>, etc.) passed as a string.</li> </ul> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-offset&quot;</span> <span class="hljs-attr">offset</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Offset Dropdown&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-offset.vue --&gt;</span></pre></div><h3 id="boundary-constraint" class="bv-no-focus-ring"><span class="bd-content-title">Boundary constraint<a class="anchorjs-link" href="#boundary-constraint" aria-labelledby="boundary-constraint"></a></span></h3> <p>By default, dropdowns are visually constrained to its scroll parent, which will suffice in most situations. However, if you place a dropdown inside an element that has <code class="text-nowrap" translate="no">overflow: scroll</code> (or similar) set, the dropdown menu may - in some situations - get cut off. To get around this, you can specify a boundary element via the <code class="text-nowrap" translate="no">boundary</code> prop. Supported values are <code class="text-nowrap" translate="no">&#39;scrollParent&#39;</code> (the default), <code class="text-nowrap" translate="no">&#39;viewport&#39;</code>, <code class="text-nowrap" translate="no">&#39;window&#39;</code> or a reference to an HTML element. The boundary value is passed directly to Popper.js&#39;s <code class="text-nowrap" translate="no">boundariesElement</code> configuration option.</p> <p><strong>Note:</strong> When <code class="text-nowrap" translate="no">boundary</code> is any value other than the default of <code class="text-nowrap" translate="no">&#39;scrollParent&#39;</code>, the style <code class="text-nowrap" translate="no">position: static</code> is applied to to the dropdown component&#39;s root element in order to allow the menu to &quot;break-out&quot; of its scroll container. In some situations this may affect your layout or positioning of the dropdown trigger button. In these cases you may need to wrap your dropdown inside another element.</p> <h3 id="advanced-popperjs-configuration" class="bv-no-focus-ring"><span class="bd-content-title">Advanced Popper.js configuration<a class="anchorjs-link" href="#advanced-popperjs-configuration" aria-labelledby="advanced-popperjs-configuration"></a></span></h3> <p>If you need some advanced Popper.js configuration to make dropdowns behave to your needs, you can use the <code class="text-nowrap" translate="no">popper-opts</code> prop to pass down a custom configuration object which will be deeply merged with the BootstrapVue defaults.</p> <p>Head to the <a href="https://popper.js.org/docs/v1/" target="_blank" rel="noopener">Popper.js docs</a> to see all the configuration options.</p> <p><strong>Note</strong>: The props <code class="text-nowrap" translate="no">offset</code>, <code class="text-nowrap" translate="no">boundary</code> and <code class="text-nowrap" translate="no">no-flip</code> may loose their effect when you overwrite the Popper.js configuration.</p> <h2 id="split-button-support" class="bv-no-focus-ring"><span class="bd-content-title">Split button support<a class="anchorjs-link" href="#split-button-support" aria-labelledby="split-button-support"></a></span></h2> <p>Create a split dropdown button, where the left button provides standard <code class="text-nowrap" translate="no">click</code> event and link support, while the right hand side is the dropdown menu toggle button.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Split Dropdown&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split.vue --&gt;</span></pre></div><h3 id="split-button-link-support" class="bv-no-focus-ring"><span class="bd-content-title">Split button link support<a class="anchorjs-link" href="#split-button-link-support" aria-labelledby="split-button-link-support"></a></span></h3> <p>The left split button defaults to an element of type <code class="text-nowrap" translate="no">&lt;button&gt;</code> (a <code class="text-nowrap" translate="no">&lt;b-button&gt;</code> to be exact). To convert this button into a link or <code class="text-nowrap" translate="no">&lt;router-link&gt;</code>, specify the href via the <code class="text-nowrap" translate="no">split-href</code> prop or a router link <code class="text-nowrap" translate="no">to</code> value via the <code class="text-nowrap" translate="no">split-to</code> prop, while maintaining the look of a button.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">split</span> <span class="hljs-attr">split-href</span>=<span class="hljs-string">&quot;#foo/bar&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Split Link&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split-link.vue --&gt;</span></pre></div><h3 id="split-button-type" class="bv-no-focus-ring"><span class="bd-content-title">Split button type<a class="anchorjs-link" href="#split-button-type" aria-labelledby="split-button-type"></a></span></h3> <p>The split button defaults to a button <code class="text-nowrap" translate="no">type</code> of <code class="text-nowrap" translate="no">&#39;button&#39;</code>. You can specify an alternate type via the <code class="text-nowrap" translate="no">split-button-type</code> prop. Supported values are: <code class="text-nowrap" translate="no">&#39;button&#39;</code>, <code class="text-nowrap" translate="no">&#39;submit&#39;</code> and <code class="text-nowrap" translate="no">&#39;reset&#39;</code>.</p> <p>If props <code class="text-nowrap" translate="no">split-to</code> or <code class="text-nowrap" translate="no">split-href</code> are set, the <code class="text-nowrap" translate="no">split-button-type</code> prop will be ignored.</p> <h2 id="styling-options" class="bv-no-focus-ring"><span class="bd-content-title">Styling options<a class="anchorjs-link" href="#styling-options" aria-labelledby="styling-options"></a></span></h2> <p>Dropdowns support various props for styling the dropdown trigger button.</p> <h3 id="sizing" class="bv-no-focus-ring"><span class="bd-content-title">Sizing<a class="anchorjs-link" href="#sizing" aria-labelledby="sizing"></a></span></h3> <p>Dropdowns work with trigger buttons of all sizes, including default and split dropdown buttons.</p> <p>Set the <code class="text-nowrap" translate="no">size</code> prop to either <code class="text-nowrap" translate="no">sm</code> for small button(s), or <code class="text-nowrap" translate="no">lg</code> for large button(s).</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Large&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Large Split&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Small&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> <span class="hljs-attr">split</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Small Split&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-sizes.vue --&gt;</span></pre></div><p><strong>Note:</strong> <em>changing the size of the button(s) does not affect the size of the menu items!</em></p> <h3 id="dropdown-color-variants" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown color variants<a class="anchorjs-link" href="#dropdown-color-variants" aria-labelledby="dropdown-color-variants"></a></span></h3> <p>The dropdown toggle button can have one of the standard Bootstrap contextual variants applied by setting the prop <code class="text-nowrap" translate="no">variant</code> to <code class="text-nowrap" translate="no">success</code>, <code class="text-nowrap" translate="no">primary</code>, <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">link</code>, <code class="text-nowrap" translate="no">outline-dark</code>, etc. (or custom variants, if defined). The default variant is <code class="text-nowrap" translate="no">secondary</code>.</p> <p>See the <a href="/docs/reference/color-variants" class="font-weight-bold">Variant Reference</a> for a full list of built-in contextual variants.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Primary&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Success&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Outline Danger&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;outline-danger&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-variants.vue --&gt;</span></pre></div><p>You can also apply arbitrary classes to the toggle button via the <code class="text-nowrap" translate="no">toggle-class</code> prop. This prop accepts either a string or array of strings.</p> <h3 id="split-button-color-variant" class="bv-no-focus-ring"><span class="bd-content-title">Split button color variant<a class="anchorjs-link" href="#split-button-color-variant" aria-labelledby="split-button-color-variant"></a></span></h3> <p>By default the left split button uses the same <code class="text-nowrap" translate="no">variant</code> as the <code class="text-nowrap" translate="no">toggle</code> button. You can give the split button its own variant via the <code class="text-nowrap" translate="no">split-variant</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>\n    <span class="hljs-attr">split</span>\n    <span class="hljs-attr">split-variant</span>=<span class="hljs-string">&quot;outline-primary&quot;</span>\n    <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Split Variant Dropdown&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-split-variant.vue --&gt;</span></pre></div><h3 id="block-level-dropdowns" class="bv-no-focus-ring"><span class="bd-content-title">Block level dropdowns<a class="anchorjs-link" href="#block-level-dropdowns" aria-labelledby="block-level-dropdowns"></a></span></h3> <p>By default dropdowns act like buttons and are displayed inline. To create block level dropdowns (that span to the full width of a parent) set the <code class="text-nowrap" translate="no">block</code> prop. Both, regular and split button dropdowns are supported.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Block Level Dropdown&quot;</span> <span class="hljs-attr">block</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>\n    <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Block Level Split Dropdown&quot;</span>\n    <span class="hljs-attr">block</span>\n    <span class="hljs-attr">split</span>\n    <span class="hljs-attr">split-variant</span>=<span class="hljs-string">&quot;outline-primary&quot;</span>\n    <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-block.vue --&gt;</span></pre></div><p>If you want the dropdown menu to span to the full width of the parent container too, add the <code class="text-nowrap" translate="no">w-100</code> utility class to the <code class="text-nowrap" translate="no">menu-class</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span>\n    <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Block Level Dropdown Menu&quot;</span>\n    <span class="hljs-attr">block</span>\n    <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>\n    <span class="hljs-attr">menu-class</span>=<span class="hljs-string">&quot;w-100&quot;</span>\n  &gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-block-menu.vue --&gt;</span></pre></div><h3 id="dropdown-sub-component-color-variants" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown sub-component color variants<a class="anchorjs-link" href="#dropdown-sub-component-color-variants" aria-labelledby="dropdown-sub-component-color-variants"></a></span></h3> <p>Many of the supported dropdown <a href="#dropdown-supported-sub-components" class="font-weight-bold">sub-components</a> provide a <code class="text-nowrap" translate="no">variant</code> prop for controlling their text color.</p> <h3 id="hidden-caret" class="bv-no-focus-ring"><span class="bd-content-title">Hidden caret<a class="anchorjs-link" href="#hidden-caret" aria-labelledby="hidden-caret"></a></span></h3> <p>The dropdown can be created with the toggle&#39;s caret visually hidden by setting the <code class="text-nowrap" translate="no">no-caret</code> prop to <code class="text-nowrap" translate="no">true</code>. This is useful when the dropdown is to be displayed as an icon.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;lg&quot;</span>  <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">toggle-class</span>=<span class="hljs-string">&quot;text-decoration-none&quot;</span> <span class="hljs-attr">no-caret</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">button-content</span>&gt;</span>\n      <span class="hljs-symbol">&amp;#x1f50d;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>Search<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Another action<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Something else here...<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-hidden-caret.vue --&gt;</span></pre></div><p><strong>Note:</strong> The caret will always be shown when using <code class="text-nowrap" translate="no">split</code> mode.</p> <h2 id="lazy-dropdown" class="bv-no-focus-ring"><span class="bd-content-title">Lazy dropdown<a class="anchorjs-link" href="#lazy-dropdown" aria-labelledby="lazy-dropdown"></a></span></h2> <p>By default, <code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> renders the menu contents in the DOM even when the menu is not shown. When there are a large number of dropdowns rendered on the same page, performance could be impacted due to larger overall memory utilization. You can instruct <code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> to render the menu contents only when it is shown by setting the <code class="text-nowrap" translate="no">lazy</code> prop to true.</p> <h2 id="dropdown-supported-sub-components" class="bv-no-focus-ring"><span class="bd-content-title">Dropdown supported sub-components<a class="anchorjs-link" href="#dropdown-supported-sub-components" aria-labelledby="dropdown-supported-sub-components"></a></span></h2> <p>The following components can be placed inside of your dropdowns. Using any other component or markup may break layout and/or keyboard navigation.</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Sub-component</th> <th>Description</th> <th>Aliases</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code></td> <td>Action items that provide click, link, and <code class="text-nowrap" translate="no">&lt;router-link&gt;</code>/<code class="text-nowrap" translate="no">&lt;nuxt-link&gt;</code> functionality. Renders as an <code class="text-nowrap" translate="no">&lt;a&gt;</code> element by default.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-item&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code></td> <td>An alternative to <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code> that renders a menu item using a <code class="text-nowrap" translate="no">&lt;button&gt;</code> element.</td> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-item-btn&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-dd-item-button&gt;</code>, <code class="text-nowrap" translate="no">&lt;b-dd-item-btn&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-divider&gt;</code></td> <td>A divider / spacer which can be used to separate dropdown items.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-divider&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code></td> <td>Free flowing text content in a menu.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-text&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code></td> <td>For placing form controls within a dropdown menu.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-form&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code></td> <td>For grouping dropdown sub components with an optional header.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-group&gt;</code></td> </tr> <tr> <td><code class="text-nowrap" translate="no">&lt;b-dropdown-header&gt;</code></td> <td>A header item, used to help identify a group of dropdown items.</td> <td><code class="text-nowrap" translate="no">&lt;b-dd-header&gt;</code></td> </tr> </tbody></table> </div><p><strong>Note:</strong> <em>Nested sub-menus are <strong>not</strong> supported.</em></p> <h3 id="b-dropdown-item" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code><a class="anchorjs-link" href="#b-dropdown-item" aria-labelledby="b-dropdown-item"></a></span></h3> <p>The <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code> is typically used to create a navigation link inside your menu. Use either the <code class="text-nowrap" translate="no">href</code> prop or the <code class="text-nowrap" translate="no">to</code> prop (for router link support) to generate the appropriate navigation link. If neither <code class="text-nowrap" translate="no">href</code> nor <code class="text-nowrap" translate="no">to</code> are provided, a standard <code class="text-nowrap" translate="no">&lt;a&gt;</code> link will be generated with an <code class="text-nowrap" translate="no">href</code> of <code class="text-nowrap" translate="no">#</code> (with an event handler that will prevent scroll to top behaviour by preventing the default link action).</p> <p>Disabled the dropdown item by setting the <code class="text-nowrap" translate="no">disabled</code> prop.</p> <h3 id="b-dropdown-item-button" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code><a class="anchorjs-link" href="#b-dropdown-item-button" aria-labelledby="b-dropdown-item-button"></a></span></h3> <p>Historically dropdown menu contents had to be links (<code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code>), but that&#39;s no longer the case with Bootstrap v4. Now you can optionally create <code class="text-nowrap" translate="no">&lt;button&gt;</code> elements in your dropdowns by using the <code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code> sub-component. <code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code> does not support the <code class="text-nowrap" translate="no">href</code> or <code class="text-nowrap" translate="no">to</code> props.</p> <p>Disabled the dropdown item button by setting the <code class="text-nowrap" translate="no">disabled</code> prop.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-buttons&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown using buttons as menu items&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>I&#x27;m a button<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">active</span>&gt;</span>I&#x27;m a active button<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">disabled</span>&gt;</span>I&#x27;m a button, but disabled!<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>I don&#x27;t look like a button, but I am!<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-item-button.vue --&gt;</span></pre></div><p>When the menu item doesn&#39;t trigger navigation, it is recommended to use the <code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code> sub-component.</p> <h3 id="b-dropdown-divider" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-divider&gt;</code><a class="anchorjs-link" href="#b-dropdown-divider" aria-labelledby="b-dropdown-divider"></a></span></h3> <p>Separate groups of related menu items with <code class="text-nowrap" translate="no">&lt;b-dropdown-divider&gt;</code>.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-divider&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown with divider&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Separated Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-divider.vue --&gt;</span></pre></div><h3 id="b-dropdown-text" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code><a class="anchorjs-link" href="#b-dropdown-text" aria-labelledby="b-dropdown-text"></a></span></h3> <p>Place any freeform text within a dropdown menu using the <code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code> sub component or use text and use spacing utilities. Note that you&#39;ll likely need additional sizing styles to constrain/set the menu width.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-text&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown with text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-text</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 240px;&quot;</span>&gt;</span>\n      Some example text that&#x27;s free-flowing within the dropdown menu.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-text</span>&gt;</span>And this is more example text.<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-text</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-text.vue --&gt;</span></pre></div><p><code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code> has the BootstrapVue custom class <code class="text-nowrap" translate="no">.b-dropdown-text</code> applied to it which sets some basic styles which are suitable in most situations. By default its width will be the same as the widest <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code> content. You may need to place additional styles or helper classes on the component.</p> <p>By default <code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code> renders using tag <code class="text-nowrap" translate="no">&lt;p&gt;</code>. You can change the rendered tag by setting the <code class="text-nowrap" translate="no">tag</code> prop to any valid HTML5 tag on the <code class="text-nowrap" translate="no">&lt;b-dropdown-text&gt;</code> sub-component.</p> <h3 id="b-dropdown-form" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code><a class="anchorjs-link" href="#b-dropdown-form" aria-labelledby="b-dropdown-form"></a></span></h3> <p>Dropdowns support basic forms. Put a <code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code> within a dropdown menu and place form controls within the <code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code>. The <code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code> is based on the <a href="/docs/components/form" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-form&gt;</code></a> component, and supports the same props and attributes as a regular form.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-form&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown with form&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dropdown&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-form</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Email&quot;</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;dropdown-form-email&quot;</span> @<span class="hljs-attr">submit.stop.prevent</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-form-email&quot;</span>\n            <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n            <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;email@example.com&quot;</span>\n          &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-group</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;Password&quot;</span> <span class="hljs-attr">label-for</span>=<span class="hljs-string">&quot;dropdown-form-password&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">b-form-input</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-form-password&quot;</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span>\n            <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span>\n            <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;Password&quot;</span>\n          &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-form-input</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">b-form-group</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-form-checkbox</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mb-3&quot;</span>&gt;</span>Remember me<span class="hljs-tag">&lt;/<span class="hljs-name">b-form-checkbox</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;sm&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;onClick&quot;</span>&gt;</span>Sign In<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>New around here? Sign up<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Forgot Password?<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-attr">methods</span>: {\n      <span class="hljs-function"><span class="hljs-title">onClick</span>(<span class="hljs-params"></span>)</span> {\n        <span class="hljs-comment">// Close the menu and (by passing true) return focus to the toggle button</span>\n        <span class="hljs-built_in">this</span>.$refs.dropdown.hide(<span class="hljs-literal">true</span>)\n      }\n    }\n  }\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-form.vue --&gt;</span></pre></div><p><code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code> has the BootstrapVue custom class <code class="text-nowrap" translate="no">.b-dropdown-form</code> applied to it which sets some basic styles which are suitable in most situations. By default its width will be the same as the widest <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code> content. You may need to place additional styles or helper classes on the component.</p> <h3 id="b-dropdown-group" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code><a class="anchorjs-link" href="#b-dropdown-group" aria-labelledby="b-dropdown-group"></a></span></h3> <p>Group a set of dropdown sub components with an optional associated header. Place a <code class="text-nowrap" translate="no">&lt;b-dropdown-divider&gt;</code> between your <code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code> and other groups or non-grouped dropdown contents</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-grouped&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown with group&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Non-grouped Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-group-1&quot;</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&quot;Group 1&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First Grouped item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Grouped Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-group</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-group-2&quot;</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&quot;Group 2&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>First Grouped item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>Second Grouped Item<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-group</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Another Non-grouped Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-group.vue --&gt;</span></pre></div><p>Using <code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code> instead of <code class="text-nowrap" translate="no">&lt;b-dropdown-header&gt;</code> is the recommended method for providing accessible grouped items with a header.</p> <h3 id="b-dropdown-header" class="bv-no-focus-ring"><span class="bd-content-title"><code class="text-nowrap" translate="no">&lt;b-dropdown-header&gt;</code><a class="anchorjs-link" href="#b-dropdown-header" aria-labelledby="b-dropdown-header"></a></span></h3> <p>Add a header to label sections of actions in any dropdown menu.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-header&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown with header&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-header-label&quot;</span>&gt;</span>\n      Dropdown header\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-label&quot;</span>&gt;</span>\n      First item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-label&quot;</span>&gt;</span>\n      Second Item\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-header.vue --&gt;</span></pre></div><p>See Section <a href="#dropdown-headers-and-accessibility" class="font-weight-bold">Dropdown headers and accessibility</a> for details on making headers more accessible for users of assistive technologies.</p> <p>Using the <code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code> sub-component simplifies creating accessible grouped dropdown items with an associated header.</p> <h4 id="closing-the-menu-via-form-interaction" class="bv-no-focus-ring"><span class="bd-content-title">Closing the menu via form interaction<a class="anchorjs-link" href="#closing-the-menu-via-form-interaction" aria-labelledby="closing-the-menu-via-form-interaction"></a></span></h4> <p>Clicking buttons inside of a <code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code> will not automatically close the menu. If you need to close the menu using a button (or via the form submit event), call the <code class="text-nowrap" translate="no">hide()</code> method on the <code class="text-nowrap" translate="no">&lt;b-dropdown&gt;</code> instance, as is shown in the above example.</p> <p>The <code class="text-nowrap" translate="no">hide()</code> method accepts a single boolean argument. If the argument is <code class="text-nowrap" translate="no">true</code>, then focus will be returned to the dropdown toggle button after the menu has closed. Otherwise the document will gain focus once the menu is closed.</p> <h2 id="listening-to-dropdown-changes-via-root-events" class="bv-no-focus-ring"><span class="bd-content-title">Listening to dropdown changes via $root events<a class="anchorjs-link" href="#listening-to-dropdown-changes-via-root-events" aria-labelledby="listening-to-dropdown-changes-via-root-events"></a></span></h2> <p>To listen to any dropdown opening, use:</p> <div class="bd-code"><pre class="hljs js p-2" translate="no"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-built_in">this</span>.$root.$on(<span class="hljs-string">&#x27;bv::dropdown::show&#x27;</span>, <span class="hljs-function"><span class="hljs-params">bvEvent</span> =&gt;</span> {\n      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Dropdown is about to be shown&#x27;</span>, bvEvent)\n    })\n  }\n}</pre></div><p>Refer to the <a href="#component-reference" class="font-weight-bold">Events</a> section of documentation for the full list of events.</p> <h2 id="optionally-scoped-default-slot" class="bv-no-focus-ring"><span class="bd-content-title">Optionally scoped default slot<a class="anchorjs-link" href="#optionally-scoped-default-slot" aria-labelledby="optionally-scoped-default-slot"></a></span></h2> <p>The default slot is optionally scoped with the following scope available:</p> <div class="table-responsive-sm"><table class="b-table table table-bordered table-striped bv-docs-table"> <thead class="thead-default"> <tr> <th>Property or Method</th> <th>Description</th> </tr> </thead> <tbody><tr> <td><code class="text-nowrap" translate="no">hide()</code></td> <td>Can be used to close the dropdown menu. Accepts an optional boolean argument, which if <code class="text-nowrap" translate="no">true</code> returns focus to the toggle button</td> </tr> </tbody></table> </div><h2 id="accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Accessibility<a class="anchorjs-link" href="#accessibility" aria-labelledby="accessibility"></a></span></h2> <p>Providing a unique <code class="text-nowrap" translate="no">id</code> prop ensures ARIA compliance by automatically adding the appropriate <code class="text-nowrap" translate="no">aria-*</code> attributes in the rendered markup.</p> <p>The default ARIA role is set to <code class="text-nowrap" translate="no">menu</code>, but you can change this default to another role (such as <code class="text-nowrap" translate="no">navigation</code>) via the <code class="text-nowrap" translate="no">role</code> prop, depending on your user case.</p> <p>When a menu item doesn&#39;t trigger navigation, it is recommended to use the <code class="text-nowrap" translate="no">&lt;b-dropdown-item-button&gt;</code> sub-component (which is not announced as a link) instead of <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code> (which is presented as a link to the user).</p> <h3 id="headers-and-accessibility" class="bv-no-focus-ring"><span class="bd-content-title">Headers and accessibility<a class="anchorjs-link" href="#headers-and-accessibility" aria-labelledby="headers-and-accessibility"></a></span></h3> <p>When using <code class="text-nowrap" translate="no">&lt;b-dropdown-header&gt;</code> components in the dropdown menu, it is recommended to add an <code class="text-nowrap" translate="no">id</code> attribute to each of the headers, and then set the <code class="text-nowrap" translate="no">aria-describedby</code> attribute (set to the <code class="text-nowrap" translate="no">id</code> value of the associated header) on each following dropdown items under that header. This will provide users of assistive technologies (i.e. sight-impaired users) additional context about the dropdown item:</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-aria&quot;</span> <span class="hljs-attr">text</span>=<span class="hljs-string">&quot;Dropdown ARIA&quot;</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;m-2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-header-1&quot;</span>&gt;</span>Groups<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-1&quot;</span>&gt;</span>Add<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-1&quot;</span>&gt;</span>Delete<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-header</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropdown-header-2&quot;</span>&gt;</span>Users<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-header</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-2&quot;</span>&gt;</span>Add<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span> <span class="hljs-attr">aria-describedby</span>=<span class="hljs-string">&quot;dropdown-header-2&quot;</span>&gt;</span>Delete<span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-divider</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n      Something <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>not<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> associated with Users\n    <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown-item-button</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-dropdown</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-dropdown-aria.vue --&gt;</span></pre></div><p>As a simplified alternative, use the <code class="text-nowrap" translate="no">&lt;b-dropdown-group&gt;</code> instead to easily associate header text to the contained dropdown sub-components.</p> <h3 id="keyboard-navigation" class="bv-no-focus-ring"><span class="bd-content-title">Keyboard navigation<a class="anchorjs-link" href="#keyboard-navigation" aria-labelledby="keyboard-navigation"></a></span></h3> <p>Dropdowns support keyboard navigation, emulating native <code class="text-nowrap" translate="no">&lt;select&gt;</code> behaviour.</p> <p>Note that <kbd class="notranslate" translate="no">Down</kbd> and <kbd class="notranslate" translate="no">Up</kbd> will not move focus into <code class="text-nowrap" translate="no">&lt;b-dropdown-form&gt;</code> sub components, but users can still use <kbd class="notranslate" translate="no">Tab</kbd> or <kbd class="notranslate" translate="no">Shift</kbd>+<kbd class="notranslate" translate="no">Tab</kbd> to move into form controls within the menu.</p> <h2 id="implementation-notes" class="bv-no-focus-ring"><span class="bd-content-title">Implementation notes<a class="anchorjs-link" href="#implementation-notes" aria-labelledby="implementation-notes"></a></span></h2> <p>The dropdown menu is rendered with semantic <code class="text-nowrap" translate="no">&lt;ul&gt;</code> and <code class="text-nowrap" translate="no">&lt;li&gt;</code> elements for accessibility reasons. The <code class="text-nowrap" translate="no">.dropdown-menu</code> is the <code class="text-nowrap" translate="no">&lt;ul&gt;</code> element, while dropdown items (items, buttons, text, form, headers, and dividers) are wrapped in an <code class="text-nowrap" translate="no">&lt;li&gt;</code> element. If creating custom items to place inside the dropdown menu, ensure they are wrapped with a plain <code class="text-nowrap" translate="no">&lt;li&gt;</code>.</p> <h2 id="see-also" class="bv-no-focus-ring"><span class="bd-content-title">See also<a class="anchorjs-link" href="#see-also" aria-labelledby="see-also"></a></span></h2> <ul> <li><a href="/docs/components/nav#dropdown-support" class="font-weight-bold"><code class="text-nowrap" translate="no">&lt;b-nav-item-dropdown&gt;</code></a> for dropdown support inside <code class="text-nowrap" translate="no">&lt;b-nav&gt;</code> and <code class="text-nowrap" translate="no">&lt;n-navbar&gt;</code></li> <li><a href="/docs/reference/router-links" class="font-weight-bold">Router Link Support</a> reference for information about router-link specific props available on <code class="text-nowrap" translate="no">&lt;b-dropdown-item&gt;</code></li> </ul>'}}}]);