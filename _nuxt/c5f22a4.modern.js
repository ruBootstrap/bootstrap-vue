(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{466:function(t,n){t.exports={baseTOC:{top:"#jumbotron",title:"Jumbotron",toc:[{href:"#options",label:"Options",toc:[{href:"#header",label:"Header"},{href:"#lead-text",label:"Lead text"}]},{href:"#fluid-width",label:"Fluid width"},{href:"#component-tag",label:"Component tag"},{href:"#variants",label:"Variants"}]},titleLead:'<h1 id="jumbotron" class="bv-no-focus-ring"><span class="bd-content-title">Jumbotron</span></h1> <p class="bd-lead">A lightweight, flexible component that can optionally extend the entire viewport to showcase key marketing messages on your site.</p>',body:'<p>You can set the heading and lead text via the <code class="text-nowrap" translate="no">header</code> and <code class="text-nowrap" translate="no">lead</code> props, or use the named slots <code class="text-nowrap" translate="no">header</code> and <code class="text-nowrap" translate="no">lead</code> if you need HTML support.</p> <p>Anything else between the opening and closing tags will be rendered at the bottom of the jumbotron.</p> <p><strong>Usage with props:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&quot;BootstrapVue&quot;</span> <span class="hljs-attr">lead</span>=<span class="hljs-string">&quot;Bootstrap v4 Components for Vue.js 2&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>For more information visit website<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>More Info<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron.vue --&gt;</span></pre></div><p><strong>Usage with slots:</strong></p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">lead</span>&gt;</span>\n      This is a simple hero unit, a simple jumbotron-style component for calling extra attention to\n      featured content or information.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      It uses utility classes for typography and spacing to space content out within the larger\n      container.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Do Something<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">b-button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;success&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span>&gt;</span>Do Something Else<span class="hljs-tag">&lt;/<span class="hljs-name">b-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-using-slots.vue --&gt;</span></pre></div><h2 id="options" class="bv-no-focus-ring"><span class="bd-content-title">Options<a class="anchorjs-link" href="#options" aria-labelledby="options"></a></span></h2> <h3 id="header" class="bv-no-focus-ring"><span class="bd-content-title">Header<a class="anchorjs-link" href="#header" aria-labelledby="header"></a></span></h3> <p>Control which tag is rendered for the header by setting the <code class="text-nowrap" translate="no">header-tag</code> to the appropriate HTML element. The default is <code class="text-nowrap" translate="no">h1</code>. Both the prop <code class="text-nowrap" translate="no">header</code> and slot <code class="text-nowrap" translate="no">header</code> will be rendered inside this tag. If both the prop and the slot are specified, the slot will be shown.</p> <p>Control the overall size of the header text by setting the <code class="text-nowrap" translate="no">header-level</code> prop to a value between <code class="text-nowrap" translate="no">1</code> and <code class="text-nowrap" translate="no">4</code> - with <code class="text-nowrap" translate="no">1</code> being the largest and <code class="text-nowrap" translate="no">4</code> being smallest. The default value is <code class="text-nowrap" translate="no">3</code>.</p> <h3 id="lead-text" class="bv-no-focus-ring"><span class="bd-content-title">Lead text<a class="anchorjs-link" href="#lead-text" aria-labelledby="lead-text"></a></span></h3> <p>Control which tag is rendered for the lead text by setting the <code class="text-nowrap" translate="no">lead-tag</code> to the desired HTML element. The default is <code class="text-nowrap" translate="no">p</code>. Both the prop <code class="text-nowrap" translate="no">lead</code> and slot <code class="text-nowrap" translate="no">lead</code> will be rendered inside this tag. If both the prop and the slot are specified, the slot will be shown.</p> <h2 id="fluid-width" class="bv-no-focus-ring"><span class="bd-content-title">Fluid width<a class="anchorjs-link" href="#fluid-width" aria-labelledby="fluid-width"></a></span></h2> <p>To make <code class="text-nowrap" translate="no">&lt;b-jumbotron&gt;</code> full width, and without rounded corners, set the <code class="text-nowrap" translate="no">fluid</code> prop. The inner content will automatically be placed into a <code class="text-nowrap" translate="no">&lt;b-container&gt;</code> (fixed width at the various breakpoints). To change this to a fluid container, set the <code class="text-nowrap" translate="no">container-fluid</code> prop. The <code class="text-nowrap" translate="no">container-fluid</code> prop has no effect if the <code class="text-nowrap" translate="no">fluid</code> prop is not set</p> <h2 id="component-tag" class="bv-no-focus-ring"><span class="bd-content-title">Component tag<a class="anchorjs-link" href="#component-tag" aria-labelledby="component-tag"></a></span></h2> <p>By default, <code class="text-nowrap" translate="no">&lt;b-jumbotron&gt;</code> will render its root element as a <code class="text-nowrap" translate="no">div</code>. Change the element tag to any other appropriate element by setting the <code class="text-nowrap" translate="no">tag</code> prop to the desired element tag name.</p> <h2 id="variants" class="bv-no-focus-ring"><span class="bd-content-title">Variants<a class="anchorjs-link" href="#variants" aria-labelledby="variants"></a></span></h2> <p>Control the overall background variant with the <code class="text-nowrap" translate="no">bg-variant</code> prop ( set to <code class="text-nowrap" translate="no">info</code>, <code class="text-nowrap" translate="no">danger</code>, <code class="text-nowrap" translate="no">warning</code>, <code class="text-nowrap" translate="no">light</code>, <code class="text-nowrap" translate="no">dark</code>, etc.), the border variant with the <code class="text-nowrap" translate="no">border-variant</code> prop, and the text variant with <code class="text-nowrap" translate="no">text-variant</code> prop. All three props default to <code class="text-nowrap" translate="no">null</code>, which will instruct the jumbotron to use the default styling.</p> <div class="bd-code"><pre class="hljs html p-2" translate="no"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">b-jumbotron</span> <span class="hljs-attr">bg-variant</span>=<span class="hljs-string">&quot;info&quot;</span> <span class="hljs-attr">text-variant</span>=<span class="hljs-string">&quot;white&quot;</span> <span class="hljs-attr">border-variant</span>=<span class="hljs-string">&quot;dark&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">header</span>&gt;</span>BootstrapVue<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">lead</span>&gt;</span>\n      This is a simple hero unit, a simple jumbotron-style component for calling extra attention to\n      featured content or information.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;my-4&quot;</span>&gt;</span>\n\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n      It uses utility classes for typography and spacing to space content out within the larger\n      container.\n    <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">b-jumbotron</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-comment">&lt;!-- b-jumbotron-variants.vue --&gt;</span></pre></div>'}}}]);